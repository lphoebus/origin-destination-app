import{g8 as ze,it as oe,fy as Ue,or as le,os as De,fi as Ce,ff as de,bf as Se,je as ne,ej as se,ga as Ie,b_ as Ke,bE as I,ot as je,ou as Ze,b8 as u,ba as m,bb as ae,iK as re,g1 as qe,hP as Pe,e1 as $e,jl as Ne,a$ as M,hJ as Be,hL as P,c7 as F,e3 as _,e4 as O,e5 as A,e7 as L,e8 as U,e9 as D,ov as B,dQ as j,ow as Xe,ox as Je,e6 as C,ee as Ee,ef as Ye,oy as Qe,oz as We,oA as et,oB as tt,oC as it,oD as ot,oE as st,bu as ce,oF as rt,oG as X,fx as nt,cn as K,oH as at,fF as ct,ir as ht,f$ as pt,fz as $,oI as lt,d6 as ue,l1 as ve,oJ as dt,iz as me,oK as ut,b4 as vt,oL as mt,iC as yt}from"./index-Bkom2Sdc.js";import{fromGeometry as gt,toGeometry as _t}from"./apiConverter-C8FhisLI.js";import{f as ft}from"./SnappingVisualizer2D-CZ9kf1Dv.js";import{e as Oe,p as xt,i as Gt}from"./SelectedVertexTooltipInfo-CRzC3PQU.js";import{h as bt,x as Mt}from"./drawUtils-4v-lsByr.js";import{l as wt,j as Ct}from"./GraphicMover-Drgt14rN.js";import{t as St,c as It}from"./SketchViewModel-Dt_N4A8A.js";import{r as Pt,C as $t,F as Et,R as Ot,H as Lt}from"./rotate-n1-rbgp3.js";import{i as Vt}from"./TranslateTooltipInfo-C0OA2d85.js";import{k as Rt,g as Le}from"./hitTestSelectUtils-ID6ADgkK.js";import{h as kt}from"./settings-BVtne9hW.js";import{w as Tt,g as ye,e as Ht}from"./SnappingContext-BUZfQgM8.js";import"./Point2D-DVg-Qhcx.js";import"./Envelope2D-7paLNnHT.js";import"./ProjectionTransformation-Bvt2x7E-.js";import"./Transformation2D-CNf0ySKF.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./OperatorDefinitions-DP7_WWTp.js";import"./jsonConverter-74r_fa1M.js";import"./GraphicManipulator-gybNDTVv.js";import"./projectPointToVector-DMoufHKJ.js";import"./elevationInfoUtils-9Dliwvku.js";import"./drapedUtils-obiSr_G_.js";import"./layerViewUtils-CKJQaxCu.js";import"./projectVectorToVector-Un_2LyvX.js";import"./geodeticLengthOperator-DbGP2SKX.js";import"./geodeticCurveType-CirnHLSB.js";import"./geodesicUtils-DQpNsZcr.js";import"./earcut-D9gy186-.js";import"./plane-B-4Z4GK_.js";import"./vectorStacks-CNkTMSGr.js";import"./quatf64-aQ5IuZRd.js";import"./triangle-jd78RGb7.js";import"./sphere-DYgRQGlT.js";import"./lineSegment-D1HJwPUS.js";import"./MeshTransform-BjVAZmOC.js";import"./quat-B12ICwBr.js";import"./axisAngleDegrees-CiE1BNcG.js";import"./meshVertexSpaceUtils-DtTu-9Nz.js";import"./MeshLocalVertexSpace-7X1tyxoy.js";import"./getDefaultUnitForView-BIRtv5kH.js";import"./angularMeasurementUtils-D8nr_k6M.js";import"./spatialReferenceEllipsoidUtils-BXlmM8F6.js";import"./PointSnappingHint-cT9n0xfP.js";const Ft=()=>Se.getLogger("esri.views.draw.support.ConnectedReshapeManager"),At=Symbol();let H=class extends ze{constructor(t){super(t),this.activeOperationType=null,this.providerFactories=[],this.view=null,this._activeProviders=new Set,this._graphics=new Map,this._modifiedFeatures=new Map,this._modifiedGraphicsLayer=new oe({listMode:"hide",internal:!0,title:"Connected Reshape Modified Graphics (Internal)"}),this._pendingGraphicsLayer=new oe({listMode:"hide",internal:!0,title:"Connected Reshape Pending Graphics (Internal)"}),this._pendingFeatures=new Map,this._updatingHandles=new Ue}initialize(){this.view.map.addMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer])}destroy(){this.view.destroyed||this.view.map.removeMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer]),this._modifiedGraphicsLayer.destroy(),this._pendingGraphicsLayer.destroy(),this._updatingHandles.destroy()}get updating(){return this._updatingHandles.updating||Array.from(this._activeProviders).some(t=>t.updating)}startFeatureMove(t){this.activeOperationType=0,this._activeProviders.clear();for(const i of this.providerFactories)le(this._activeProviders,i.getFeatureReshapeProvider(t))}startVertexMove(t,i){this.activeOperationType=1,this._activeProviders.clear();for(const s of this.providerFactories)le(this._activeProviders,s.getVertexReshapeProvider(t,i))}finish(){this.activeOperationType=null,this._activeProviders.clear();for(const[t,i]of this._pendingFeatures){this._pendingFeatures.delete(t),this._modifiedFeatures.set(t,i);const s=this._graphics.get(t);s&&(this._modifiedGraphicsLayer.add(s),this._pendingGraphicsLayer.remove(s))}}translate(t,i,s=0){if(this.activeOperationType===null)return;const n=ee(t),o=ee(i),r=ee(s);for(const c of this._activeProviders){const a=c.translate(n,o,r);this._update(a)}}async _initializeGraphic(t,i){t.symbol??=await this._updatingHandles.addPromise(De(t,{scale:this.view.scale,useSourceLayer:!0})),this._pendingFeatures.has(i.uniqueId)?this._pendingGraphicsLayer.add(t):this._modifiedFeatures.has(i.uniqueId)&&this._modifiedGraphicsLayer.add(t),this.addHandles(await zt(i.originalGraphic,t,this.view),At)}_update(t){for(const i of t){const s=this._modifiedFeatures.delete(i.uniqueId);this._pendingFeatures.set(i.uniqueId,i);const n=Ce(this._graphics,i.uniqueId,()=>{const o=i.graphic.cloneShallow();return this._initializeGraphic(o,i),o});n.geometry=i.graphic.geometry,s&&(this._modifiedGraphicsLayer.remove(n),this._pendingGraphicsLayer.add(n))}}get test(){return{activeProviders:this._activeProviders,modifiedFeatures:this._modifiedFeatures,modifiedGraphicsLayer:this._modifiedGraphicsLayer,pendingFeatures:this._pendingFeatures,pendingGraphicsLayer:this._pendingGraphicsLayer}}};async function zt(e,t,i){const s=e.sourceLayer,n=e.getObjectId();if(n==null)return Ft().error("editing:cannot-hide-graphic","Unable to hide original graphic because it has no objectId."),de();let o=null;function r(c){o?.abort(),o=Ie(async a=>{const h=await ge(i,s);Ke(a),h&&h.setVisibility?.(n,c)})}return await Dt(i,t),r(!1),ne([Ut(i,t,c=>r(!c)),de(async()=>{r(!0);const c=await ge(i,s);await se(()=>!c?.updating)})])}function Ut(e,t,i){if(e.type==="3d"){const s=new Oe({graphic:t});return ne([e.trackGraphicState(s),I(()=>s.displaying,i)])}return I(()=>t.visible,i)}async function Dt(e,t){if(e.type==="3d"){const i=new Oe({graphic:t}),s=e.trackGraphicState(i);await se(()=>i.displaying||i.error),s.remove()}else await se(()=>t.visible)}async function ge(e,t){const i=je(t)||Ze(t)?t.parent:t;return i?e.whenLayerView(i):null}function ee(e){return isNaN(e)?0:e}u([m()],H.prototype,"activeOperationType",void 0),u([m()],H.prototype,"providerFactories",void 0),u([m()],H.prototype,"updating",null),u([m({constructOnly:!0})],H.prototype,"view",void 0),H=u([ae("esri.views.draw.support.ConnectedReshapeManager")],H);let E=class extends Pt{constructor(e){super(e),this.type="translate-vertex",this.distance=re,this.elevation=null,this.area=null,this.totalLength=null}clear(){this.distance=re,this.elevation=null,this.area=null,this.totalLength=null}};u([m()],E.prototype,"type",void 0),u([m()],E.prototype,"distance",void 0),u([m()],E.prototype,"elevation",void 0),u([m()],E.prototype,"area",void 0),u([m()],E.prototype,"totalLength",void 0),E=u([ae("esri.views.interactive.tooltip.infos.TranslateVertexTooltipInfo")],E);function Kt(e){const t={sketchOptions:e,viewType:"2d"};return{movePoint:new Gt(t),selectedVertex:new xt(t),translateGraphic:new Vt(t),translateVertices:new E(t)}}function jt(e,t){function i(){const o=t(),r=o.sketchOptions.tooltips.effectiveEnabled?o.activeTooltipInfo:null;return{...o,activeTooltipInfo:r}}let s=!1;function n(o){s||(s=!0,o(),s=!1)}return ne([I(()=>{const o=i();return{context:o,geometry:o.graphic?.geometry,vertexGeometry:o.selectedVertex?.geometry}},({context:o})=>{n(()=>{Zt(o),e.info=o.activeTooltipInfo})},qe),I(()=>{const o=i(),{activeTooltipInfo:r}=o;if(r&&"key"in r)return{context:o,key:r.key}},(o,r)=>{o&&r&&o.key!==r.key&&n(()=>_e(o.context))},Pe),$t(e,{onBeforePaste:()=>{s=!0},onAfterPaste:()=>{_e(i()),s=!1}})])}function Zt(e){const t=e.activeTooltipInfo;if(t){switch(t?.type){case"move-point":return qt(t,e);case"selected-vertex":return Nt(t,e)}t.sketchOptions=e.sketchOptions}}function qt(e,{graphic:t}){Ve(e,t,t?.geometry)}function Nt(e,{graphic:t,selectedVertex:i,automaticAreaMeasurementUtils:s,automaticLengthMeasurementUtils:n}){Ve(e,t,i?.geometry);const o=t?.geometry;if(!o||!$e(o))switch(o?.type){case"polygon":e.geometryType="polygon",e.totalLength.visible=!1,e.area.actual=s.autoArea2D(o);break;case"polyline":e.geometryType="polyline",e.totalLength.actual=n.autoLength2D(o),e.area.visible=!1;break;case"multipoint":e.geometryType="multipoint",e.area.visible=!1,e.totalLength.visible=!1}}function Ve(e,t,i){t&&i?.type==="point"&&(e.setLocationFromPoint(i),e.elevation.actual=Rt(i),e.elevation.visible=!!t.geometry?.hasZ,e.elevation.readOnly=!1,e.elevation.showAsZ=!0)}function _e(e){function t(o,r){const c=r?.geometry;if(!c||c.type!=="point")return;const{dx:a,dy:h,dz:p}=Et(o,c);if(a===0&&h===0&&p===0)return;const{x:y,y:l,z:v,m:x,spatialReference:G}=c,b=new M({x:y+a,y:l+h,z:v!=null?v+p:void 0,m:x,spatialReference:G});e.updateGeometry(r,b,c,a,h)}const{activeTooltipInfo:i,graphic:s,selectedVertex:n}=e;switch(i?.type){case"move-point":return t(i,s);case"selected-vertex":return t(i,n)}}function Bt(e,t,i,s){e.clear(),Re(e,t,s,i)}function Xt(e,t,i,s,n){if(e.clear(),i&&$e(i))return;const{automaticAreaMeasurementUtils:o,automaticLengthMeasurementUtils:r}=s;i?.type==="polygon"?e.area=o.autoArea2D(i):i?.type==="polyline"&&(e.totalLength=r.autoLength2D(i)),Re(e,t,n,s)}function Re(e,t,i,{automaticLengthMeasurementUtils:s}){if(!i)return;const{x:n,y:o}=i.origin,r=t.toMap(i),c=t.toMap(Ne(n,o)),a=s.autoDistanceBetweenPoints2D(c,r);e.distance=a??re}const d={pathIndex:"pathIndex",pointIndex:"pointIndex",pointIndexStart:"pointIndexStart",pointIndexEnd:"pointIndexEnd",controlPointKind:"kind",relatedGraphicIndices:"relatedGraphicIndices",curveFromStraightEdgeFlag:"curveFromStraightEdgeFlag",tool:"esriSketchTool"},w={bezier:{cp1:"bezier-cp-1",cp2:"bezier-cp-2",line1:"bezier-line-1",line2:"bezier-line-2"},circle:{interior:"circle-interior"}},Z="box",f=kt.reshapeGraphics,Jt={vertices:{default:new P({style:"circle",size:f.vertex.size,color:f.vertex.color,outline:{color:f.vertex.outlineColor,width:1}}),hover:new P({style:"circle",size:f.vertex.hoverSize,color:f.vertex.hoverColor,outline:{color:f.vertex.hoverOutlineColor,width:1}}),selected:new P({style:"circle",size:f.selected.size,color:f.selected.color,outline:{color:f.selected.outlineColor,width:1}})},controlPoints:{default:new P({style:"diamond",size:f.vertex.size,color:f.vertex.color,outline:{color:f.vertex.outlineColor,width:1}}),hover:new P({style:"diamond",size:f.vertex.hoverSize,color:f.vertex.hoverColor,outline:{color:f.vertex.hoverOutlineColor,width:1}}),selected:new P({style:"diamond",size:f.selected.size,color:f.selected.color,outline:{color:f.selected.outlineColor,width:1}})},midpoints:{default:new P({style:"circle",size:f.midpoint.size,color:f.midpoint.color,outline:{color:f.midpoint.outlineColor,width:1}}),hover:new P({style:"circle",size:f.midpoint.size,color:f.midpoint.color,outline:{color:f.midpoint.outlineColor,width:1}})},constructionLines:new Be({style:"solid",width:1,color:f.vertex.color})};function Yt(e,t,i){const s=[];return e?.forEach((n,o)=>{n.forEach((r,c)=>{s.push(new F({geometry:i.arrayToPoint(_(r)),symbol:t?.vertices?.default,attributes:{[d.tool]:Z,[d.pathIndex]:o,[d.pointIndex]:c}}))})}),s}function Qt(e,t,i){const s=[];for(let n=0;n<e.length;n++){const o=e[n];if(!Te(e,n))for(let r=1;r<o.length;r++){const c=o[r];if(O(c))continue;const a=_(o[r-1]),h={[d.tool]:Z,[d.pathIndex]:n,[d.pointIndex]:r};if(A(c)){const l=c.b.slice(1);s.push(...l.map((v,x)=>new F({geometry:i.arrayToPoint(v),symbol:t?.controlPoints?.default,attributes:{...h,[d.controlPointKind]:x===0?w.bezier.cp1:w.bezier.cp2}})))}const p=C(c),y=L(c);if(p||y){const l=p?U(a,c):D(a,c),v=B(l,.25);s.push(new F({geometry:i.arrayToPoint(v),symbol:t?.controlPoints?.default,attributes:{...h,[d.controlPointKind]:w.circle.interior}}))}}}return s}function Wt(e,t,i){const s=[],{spatialReference:n}=i;for(let o=0;o<e.length;o++){const r=e[o];for(let c=1;c<r.length;c++){const a=r[c];if(!A(a))continue;const[h,p,y]=a.b,l=_(r[c-1]),v={[d.tool]:Z,[d.pathIndex]:o,[d.pointIndex]:c};s.push(new F({geometry:new j({paths:[[[l[0],l[1]],p]],spatialReference:n}),symbol:t?.constructionLines,attributes:{...v,[d.controlPointKind]:w.bezier.line1}}),new F({geometry:new j({paths:[[[h[0],h[1]],y]],spatialReference:n}),symbol:t?.constructionLines,attributes:{...v,[d.controlPointKind]:w.bezier.line2}}))}}return s}function ei(e,t,i,s){const n=[];for(let o=0;o<e.length;o++){const r=e[o],c=ii(e,o);for(let a=0;a<r.length;a++){const h=(a+1)%r.length;if((!s||c)&&h===0)continue;const p=ke(r[a],r[h],i);n.push(new F({geometry:p,symbol:t.midpoints.default,attributes:{[d.tool]:Z,[d.pathIndex]:o,[d.pointIndexStart]:a,[d.pointIndexEnd]:h}}))}}return n}function ke(e,t,i){const s=_(e),n=_(t),{spatialReference:o}=i,r=i.arrayToVector(s),c=i.arrayToVector(n),a=i.toXYZ(r),h=i.toXYZ(c),[p,y,l]=Xe(a,h),v=i.hasM()?0:void 0;if(O(t))return new M({x:p,y,z:l,m:v,spatialReference:o});if(A(t)){const[V,R]=Je(s,t,.5);return new M({x:V,y:R,z:l,m:v,spatialReference:o})}if(C(t)){const V=U(s,t),[R,z]=B(V,.5);return new M({x:R,y:z,z:l,m:v,spatialReference:o})}if(L(t)){const V=D(s,t),[R,z]=B(V,.5);return new M({x:R,y:z,z:l,m:v,spatialReference:o})}const x=Ee(s,t),[G,b]=Ye(x,.5);return new M({x:G,y:b,z:l,m:v,spatialReference:o})}function Te(e,t){const i=e.at(t);return i?.length===2&&ce(_(i[1]),_(i[0]))&&L(i[1])}function ti(e,t){const i=e.at(t);return i?.length===2&&ce(_(i[1]),_(i[0]))&&X(i[1])}function ii(e,t){const i=e.at(t);return i?.length===2&&ce(_(i[1]),_(i[0]))&&rt(i[1])}function te(e,t){if(Qe(e))return void(e.points=t.flat());const i=t.some(s=>s.some(n=>!O(n)));We(e)?i?(e.curveRings=t,e.rings=[]):(e.rings=t,e.curveRings=void 0):et(e)&&(i?(e.curvePaths=t,e.paths=[]):(e.curvePaths=void 0,e.paths=t))}function oi(e,t,i,s){const n=_(t);let o=[];switch(!0){case A(t):o=st(e,t,i);break;case C(t):{const r=U(e,t);o=ot(r,t,i);break}case L(t):{const r=D(e,t);o=it(r,t,i);break}default:{const r=Ee(e,t);o=tt(r,t,i);break}}if(o.length<2)return o;if(s.hasZ()){const r=e.at(2)??0,c=n.at(2)??0,a=r+(c-r)*i;_(o[0])[2]=a,_(o[1])[2]=c}if(s.hasM()){const r=s.hasZ()?3:2;_(o[0])[r]=0,_(o[1])[r]=n.at(-1)??0}return o}const ie=Symbol();let g=class extends nt{constructor(e){super(e),this._updateHandlesOnExternalGeometryChange=null,this._activeOperationInfo=null,this._connectedReshapeManager=null,this._editGeometryOperations=null,this._mover=null,this._snappingContext=null,this._snappingGraphicsLayer=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this.activeTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.connectedReshapeProviders=null,this.enableMidpoints=!0,this.enableCurveOnMidpoint=!1,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.highlightName=null,this.highlightsEnabled=!0,this.layer=null,this.snappingManager=null,this.symbols=Jt,this.sketchOptions=new Le,this.type="reshape",this.vertexGraphics=new K,this.curveControlPointGraphics=new K,this.constructionLineGraphics=new K,this.midpointGraphics=new K,this.selectedManipulators=new K,this.view=null}initialize(){const e=this.view;this._highlightHelper=new wt({view:e}),this._setup(),this._updateHandlesOnExternalGeometryChange=at(()=>this.graphic?.geometry,t=>{if(!t)return;const i=new Set(this.selectedManipulators.map(Me));this._highlightHelper.removeAll(),this._setUpHighlights(),this._setupGraphics(),this._clearSelection(),this.vertexGraphics.filter(p=>i.has(Me(p))).forEach(p=>this._addToSelection(p));const{enableMovement:s,_mover:n,graphic:o,midpointGraphics:r,vertexGraphics:c,curveControlPointGraphics:a}=this,h=c.concat(r,a).items;s&&h.push(o),n?.set("graphics",h)},Pe),this.tooltip=Ot(()=>({view:e,options:this.sketchOptions.tooltips})),this.tooltipInfos=Kt(this.sketchOptions),this.addHandles([ct(()=>e?.ready,()=>{const{layer:t,view:i}=this;St(i,t),this.addHandles(i.on("key-down",s=>this._keyDownHandler(s),ht.TOOL))},{once:!0,initial:!0}),I(()=>this.graphic,()=>this.refresh()),I(()=>this.layer,(t,i)=>{i&&(this._clearSelection(),this._resetGraphics(i)),this.refresh()}),I(()=>[this.highlightsEnabled,this.highlightName],()=>{this._highlightHelper?.removeAll(),this._setUpHighlights()}),I(()=>this.enableMidpoints,()=>this.refresh()),jt(this.tooltip,()=>this._tooltipsContext),I(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),pt),this._updateHandlesOnExternalGeometryChange]),this._updateTooltip()}destroy(){this._reset(),this._mover?.destroy(),this._mover=null,this._connectedReshapeManager=$(this._connectedReshapeManager),this.tooltip=$(this.tooltip)}get _coordinateHelper(){return this._editGeometryOperations?.data.coordinateHelper??Tt(!!this.graphic.geometry?.hasZ,!!this.graphic.geometry?.hasM,this.view.spatialReference)}get _selectedManipulator(){return this.selectedManipulators.length===1?this.selectedManipulators.at(0):void 0}get _tooltipsContext(){const{automaticAreaMeasurementUtils:e,automaticLengthMeasurementUtils:t,sketchOptions:i,activeTooltipInfo:s,graphic:n}=this;return{sketchOptions:i,activeTooltipInfo:s,graphic:n,selectedVertex:this._selectedManipulator,automaticAreaMeasurementUtils:e,automaticLengthMeasurementUtils:t,updateGeometry:(o,r,c,a,h)=>{this._setUpGeometryHelper();const p=o===this.graphic;if(p?this._emitMoveStartEvent(0,0):this._emitReshapeStartEvent(o),this._syncGeometryAfterVertexMove(o,r,a,h,!0),p){const{view:l}=this,v=l.toScreen(c),x=l.toScreen(r),G=(x?.x??0)-(v?.x??0),b=(x?.y??0)-(v?.y??0);this._emitMoveEvent(G,b),this._emitMoveStopEvent(G,b)}else this._emitReshapeEvent(o),this._emitReshapeStopEvent(o);this._editGeometryOperations=$(this._editGeometryOperations)}}}get state(){const e=this.view.ready,t=!(!this.graphic||!this.layer);return e&&t?"active":e?"ready":"disabled"}isUIGraphic(e){return e===this.graphic||this._isMidpoint(e)||this._isCurveControlPoint(e)||this._isVertex(e)||this._isConstructionLine(e)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){const{selectedManipulators:e}=this;e.length&&this._removeVertices(e)}_setup(){const{graphic:e,layer:t}=this;if(!t||e?.geometry==null)return;const i=e.geometry;i.type!=="mesh"&&i.type!=="extent"?(i.type==="polygon"&&lt(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover(),this._setupConnectedReshapeManager()):this._logGeometryTypeError()}_setUpHighlights(){this.highlightsEnabled&&this.graphic&&this._highlightHelper?.add(this.graphic,this.highlightName)}_setUpGeometryHelper(){const e=this.graphic.geometry;e!=null&&e.type!=="mesh"&&e.type!=="extent"?this._editGeometryOperations??=ye.fromGeometry(e,2,{allowCurves:!0}):this._logGeometryTypeError()}_saveSnappingContextForHandle(e,t){this._snappingGraphicsLayer=new oe({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer);const i=this._editGeometryOperations;ue(i),this._snappingContext=new Ht({editGeometryOperations:i,elevationInfo:{mode:"on-the-ground",offset:0},pointer:t.viewEvent?.pointerType||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new ft(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(e)})}_reset(){this._clearSelection(),this._highlightHelper?.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover?.destroy(),this._mover=null,this.removeHandles(ie)}_resetSnappingStateVars(){this.snappingManager!=null&&this.snappingManager.doneSnapping(),this._snappingGraphicsLayer!=null&&(this.view?.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=$(this._editGeometryOperations),this._snappingTask=ve(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(e){this._removeMidpointGraphics(e),this._removeVertexGraphics(e),this._removeCurveGraphics(e),this._updateTooltip()}_removeMidpointGraphics(e=this.layer){const{midpointGraphics:t}=this;e?.removeMany(t.items),t.drain($)}_removeVertexGraphics(e=this.layer){const{vertexGraphics:t}=this;e?.removeMany(t.items),t.drain($)}_removeCurveGraphics(e=this.layer){const{curveControlPointGraphics:t,constructionLineGraphics:i}=this;e?.removeMany(t.items),e?.removeMany(i.items),t.drain($),i.drain($)}_setupGraphics(){const e=this.graphic.geometry;if(e!=null&&(e.type==="polyline"||e.type==="polygon"||e.type==="multipoint")){const t=fe(e);this.enableMidpoints&&e.type!=="multipoint"&&this._setUpMidpointGraphics(t),this.enableVertices&&(this._setUpVertexGraphics(t),this._setupCurveGraphics(t))}}_setUpMidpointGraphics(e){this._removeMidpointGraphics();const t=ei(e,this.symbols,this._coordinateHelper,this.graphic.geometry?.type==="polygon");this.midpointGraphics.addMany(t),this.layer.addMany(t)}_setUpVertexGraphics(e){this._removeVertexGraphics();const t=Yt(e,this.symbols,this._coordinateHelper);this.vertexGraphics.addMany(t),this._storeRelatedVertexIndices(),this.layer.addMany(t)}_setupCurveGraphics(e){this._removeCurveGraphics();const t=Qt(e,this.symbols,this._coordinateHelper),i=Wt(e,this.symbols,this._coordinateHelper);this.curveControlPointGraphics.addMany(t),this.constructionLineGraphics.addMany(i),this.layer.addMany(i),this.layer.addMany(t)}_updateSymbolsForTheme(){const e=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",e),hover:this.symbols.vertices.hover?.clone().set("color",e)},controlPoints:{...this.symbols.controlPoints,default:this.symbols.controlPoints.default.clone().set("color",e),hover:this.symbols.controlPoints.hover?.clone().set("color",e)},midpoints:{...this.symbols.midpoints},constructionLines:this.symbols.constructionLines.clone().set("color",e)};for(const t of this.vertexGraphics)this._isSelected(t)?t.symbol=this.symbols.vertices.selected:this._hoverGraphic===t?t.symbol=this.symbols.vertices.hover:t.symbol=this.symbols.vertices.default;for(const t of this.curveControlPointGraphics)this._isSelected(t)?t.symbol=this.symbols.controlPoints.selected:this._hoverGraphic===t?t.symbol=this.symbols.controlPoints.hover:t.symbol=this.symbols.controlPoints.default;for(const t of this.constructionLineGraphics)t.symbol=this.symbols.constructionLines}_storeRelatedVertexIndices(){const e=this.vertexGraphics.items;if(!e)return;const t=e.map(({geometry:i})=>({x:i.x,y:i.y}));for(let i=0;i<t.length;i++){const s=[];for(let n=0;n<t.length;n++){if(i===n)continue;const o=t[i],r=t[n];o.x===r.x&&o.y===r.y&&s.push(n)}e[i].attributes[d.relatedGraphicIndices]=s}}_setupMover(){const{enableMovement:e,graphic:t,midpointGraphics:i,vertexGraphics:s,view:n}=this,o=s.concat(i,this.curveControlPointGraphics).items;e&&t.geometry?.type!=="multipoint"&&o.push(t),this._mover=new Ct({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:o,view:n,callbacks:{onGraphicClick:r=>this._onGraphicClickCallback(r),onGraphicMoveStart:r=>this._onGraphicMoveStartCallback(r),onGraphicMove:r=>this._onGraphicMoveCallback(r),onGraphicMoveStop:r=>this._onGraphicMoveStopCallback(r),onGraphicPointerOver:r=>this._onGraphicPointerOverCallback(r),onGraphicPointerOut:r=>this._onGraphicPointerOutCallback(r)}})}_setupConnectedReshapeManager(){const{connectedReshapeProviders:e}=this;e!=null&&e.length!==0&&(this._connectedReshapeManager=new H({providerFactories:e,view:this.view}))}_onGraphicClickCallback(e){e.viewEvent.stopPropagation();const t=e.graphic,i=this._isCurveControlPoint(t);if(t===this.graphic)this.clearSelection(),this.emit("graphic-click",e),this.callbacks.onGraphicClick?.(e);else if(this._isMidpoint(t)){if(e.viewEvent.button===2)return;const s=this.graphic.clone(),n=this._handleMidpointClickOrStartMove(e);this.refresh(),n.length&&this._emitVertexAddEvent([t],s,n)}else if(this._isVertex(t)||i){if(e.viewEvent.stopPropagation(),e.viewEvent.button===2)return void(i||this._removeVertices(t));e.viewEvent.native.shiftKey||this._clearSelection(),this.selectedManipulators.includes(t)?this._removeFromSelection(t,!0):this._addToSelection(t)}}_setUpOperation(e){const{graphic:t,dx:i,dy:s}=e,n=t===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(t,e),this._activeOperationInfo={target:this.graphic,mover:t,operationType:n?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(e){const{dx:t,dy:i,graphic:s}=e,n=this._connectedReshapeManager,o=n?ni(this.graphic):null;if(s===this.graphic){const{geometry:c}=s;return this._setUpOperation(e),this._emitMoveStartEvent(t,i),o&&n?.startFeatureMove([o]),void(c!=null&&c.type==="point"&&this._onHandleMove(s,t,i,e,()=>{this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(t,i)}))}const{selectedManipulators:r}=this;if(!r.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const c=this.graphic.clone(),a=this._handleMidpointClickOrStartMove(e);a.length&&(this._emitVertexAddEvent([s],c,a),this._refreshGraphicIndicesAttributes(a[0]))}this._addToSelection(s)}if(this._setUpOperation(e),o){const c=r.filter(a=>this._isVertex(a));n?.startVertexMove(o,ai(c))}this._emitReshapeStartEvent(s),this._onHandleMove(s,t,i,e,()=>{this._updateTooltip(s,e.viewEvent),this._emitReshapeEvent(s)})}_onGraphicMoveCallback(e){const t=this._activeOperationInfo;if(!t)return;const{dx:i,dy:s,graphic:n}=e;t.totalDx+=i,t.totalDy+=s;const{operationType:o}=t,{geometry:r}=n;if(r!=null){if(o!=="move")this._onHandleMove(n,i,s,e,()=>{this._updateTooltip(n,e.viewEvent),this._emitReshapeEvent(n)});else if(r.type==="point")this._onHandleMove(n,i,s,e,()=>{this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(i,s)});else if(r.type==="polyline"||r.type==="polygon"){const c=fe(r);this._updateVertexGraphicLocations(c);const{dxMap:a,dyMap:h}=bt(i,s,this.view);this._connectedReshapeManager?.translate(a,h,0),this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(i,s)}}}_onGraphicMoveStopCallback(e){const t=this._activeOperationInfo;if(!t)return;const{dx:i,dy:s,graphic:n}=e,{operationType:o}=t;t.totalDx+=i,t.totalDy+=s,this._onHandleMove(n,i,s,e,()=>o==="move"?this._emitMoveStopEvent():this._emitReshapeStopEvent(n)),this._isMidpoint(n)||n.getAttribute(d.curveFromStraightEdgeFlag)?this.refresh():(this._updateTooltip(this._isVertex(n)?n:null),this._resetSnappingStateVars(),this._connectedReshapeManager?.finish(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(e){const{_coordinateHelper:t}=this;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:n}=i.attributes;i.geometry=t.arrayToPoint(_(e[s][n]))}this._updateMidpointGraphicLocations(e),this._updateCurveGraphicLocations(e)}_updateMidpointGraphicLocations(e){const{_coordinateHelper:t}=this;for(const i of this.midpointGraphics){const{pathIndex:s,pointIndexStart:n,pointIndexEnd:o}=i.attributes,r=e[s];i.geometry=ke(r[n],r[o],t)}}_updateCurveGraphicLocations(e){const{spatialReference:t}=this._coordinateHelper,i=new Map;for(const s of this.selectedManipulators){const[n,o]=S(s);n!=null&&o!=null&&s.getAttribute(d.controlPointKind)&&Ce(i,n,()=>new Set)?.add(o)}for(const s of this.curveControlPointGraphics){const[n,o]=S(s);if(i.get(n)?.has(o))continue;const r=e[n][o];if(C(r)||L(r)){const c=_(e[n][o-1]),a=C(r)?U(c,r):D(c,r),[h,p]=B(a,.25);s.geometry=new M({x:h,y:p,spatialReference:this._coordinateHelper.spatialReference})}else if(A(r)){const c=s.getAttribute(d.controlPointKind),[a,h]=c===w.bezier.cp1?r.b[1]:r.b[2];s.geometry=new M({x:a,y:h,spatialReference:this._coordinateHelper.spatialReference})}}for(const s of this.constructionLineGraphics){const n=s.getAttribute(d.controlPointKind),[o,r]=S(s),c=e[o],a=_(c[r-1]),h=_(c[r]),p=e[o][r];n===w.bezier.line1?s.geometry=new j({paths:[[[a[0],a[1]],[...p.b[1]]]],spatialReference:t}):s.geometry=new j({paths:[[[h[0],h[1]],[...p.b[2]]]],spatialReference:t})}}_refreshGraphicIndicesAttributes(e){const{componentIndex:t,vertexIndex:i}=e,s=n=>{const[o,r]=S(n);o===t&&r>=i&&n.setAttribute(d.pointIndex,r+1)};this.vertexGraphics.forEach(s),this.curveControlPointGraphics.forEach(s),this.constructionLineGraphics.forEach(s);for(const n of this.midpointGraphics){if(n.getAttribute(d.pathIndex)!==t)continue;const o=n.getAttribute(d.pointIndexStart);o>=i&&(n.setAttribute(d.pointIndexStart,o+1),n.setAttribute(d.pointIndexEnd,n.getAttribute(d.pointIndexEnd)+1))}}_getVertexFromEditGeometry(e){const[t,i]=S(e);return ue(this._editGeometryOperations),this._editGeometryOperations.data.parts[t].vertices[i]}_onHandleMove(e,t,i,s,n){ve(this._snappingTask);const o=this._snappingContext;if(!o)return;const r=e.geometry,c=s.type==="graphic-move-stop";if(r&&dt(r))if(this.snappingManager!=null&&this.selectedManipulators.length<2&&!c){const a=this.snappingManager;this._stagedVertex=a.update({point:r,context:o}),this._syncGeometryAfterVertexMove(e,new M(this._stagedVertex),t,i,c),n(),this._snappingTask=Ie(async h=>{const p=await a.snap({point:r,context:o,signal:h});p.valid&&(this._stagedVertex=p.apply(),this._syncGeometryAfterVertexMove(e,new M(this._stagedVertex),t,i,c),n())})}else{const a=this._stagedVertex!=null?new M(this._stagedVertex):r;this._syncGeometryAfterVertexMove(e,a,t,i,c),n()}else n()}_syncGeometryAfterVertexMove(e,t,i,s,n=!1){const o=this._editGeometryOperations?.data.geometry;if(!o)return;const{_coordinateHelper:r}=this,c=r.pointToVector(t),a=this._getVertexFromEditGeometry(e);if(a){const h=r.getZ(c),p=c[0]-a.pos[0],y=c[1]-a.pos[1],l=h!=null?h-a.pos[2]:0;o.type!=="point"&&o.type!=="mesh"||this._editGeometryOperations?.moveVertices([a],p,y,l),this._connectedReshapeManager?.translate(p,y,l)}if(o.type==="point")e.geometry=t;else if(o.type==="mesh")e.geometry=o.centerAt(t);else{if(e!==this.graphic){const h=r.spatialReference,[p,y]=S(e);let l=N(o);const v=r.pointToArray(t);this._updateGeometryFromGraphic(e,l,p,y,v,h,o.type==="polygon"),this._isVertex(e)||this._isCurveControlPoint(e)?(l=this._moveRelatedCoordinates(l,e,v),l=this._moveSelectedHandleCoordinates(l,e,i,s,o.type==="polygon"),this._updateMidpointGraphicLocations(l),this._updateCurveGraphicLocations(l)):this._isMidpoint(e)&&this._updateCurveGraphicLocations(l),te(o,l)}this._updateGraphicGeometry(o.clone()),this._editGeometryOperations=ye.fromGeometry(o,2,{allowCurves:!0}),n&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(e),t):e.geometry=t)}}_moveRelatedCoordinates(e,t,i){const{relatedGraphicIndices:s}=t.attributes,n=this._coordinateHelper.spatialReference;if(!s?.length)return e;for(const o of s){const r=this.vertexGraphics.at(o),[c,a]=S(r);q(e,c,a,i,n),r.geometry=t.geometry}return e}_moveSelectedHandleCoordinates(e,t,i,s,n){const o=this._coordinateHelper.spatialReference;for(const r of this.selectedManipulators)if(r!==t){const[c,a]=S(r),h=r.getAttribute(d.relatedGraphicIndices),p=Mt(r.geometry,i,s,this.view),y=me(p);if(r.geometry=p,this._updateGeometryFromGraphic(r,e,c,a,y,o,n),h?.length)for(const l of h){const v=this.vertexGraphics.at(l),[x,G]=S(v);q(e,x,G,y,o),v.geometry=p}}return e}_updateGeometryFromGraphic(e,t,i,s,n,o,r){const c=t[i].length-1;this._isCurveControlPoint(e)?ri(t,i,s,[n[0],n[1]],e.getAttribute(d.controlPointKind)):(q(t,i,s,n,o),r&&(s===0?q(t,i,c,n,o):s===c&&(t[i][0]=n)))}_onGraphicPointerOverCallback(e){const t=e.graphic;this._hoverGraphic=t;const i=this._isVertex(t);i&&!this._isSelected(t)?t.symbol=this.symbols.vertices.hover:this._isCurveControlPoint(t)&&!this._isSelected(t)&&(t.symbol=this.symbols.controlPoints.hover),this._updateTooltip(i?t:null),this._updateHoverCursor(t)}_onGraphicPointerOutCallback(e){const t=e.graphic;this._hoverGraphic=null,this._isVertex(t)&&!this._isSelected(t)&&(t.symbol=this.symbols.vertices.default),this._isCurveControlPoint(t)&&!this._isSelected(t)&&(t.symbol=this.symbols.controlPoints.default),this.removeHandles(ie),this._updateTooltip()}_handleMidpointClickOrStartMove(e){const{graphic:t}=e,i=this.graphic.geometry;if(i==null||i.type!=="polygon"&&i.type!=="polyline")return[];const s=i.clone(),n=[],{[d.pathIndex]:o,[d.pointIndexStart]:r,[d.pointIndexEnd]:c}=t.attributes,a=me(t.geometry),h=c===0?r+1:c;t.attributes={[d.tool]:Z,[d.pathIndex]:o,[d.pointIndex]:h,[d.relatedGraphicIndices]:[]};const p=N(s),y=p[o][c];if(O(y))if(this.enableCurveOnMidpoint&&e.viewEvent.native.shiftKey){const l=_(p[o][h]);p[o].splice(h,1,{c:[l,[a[0],a[1]]]}),t.setAttribute(d.controlPointKind,w.circle.interior),t.setAttribute(d.curveFromStraightEdgeFlag,!0),this.midpointGraphics.remove(t),this.curveControlPointGraphics.push(t),te(s,p)}else p[o].splice(h,0,a),n.push({coordinates:p[o][h],componentIndex:o,vertexIndex:h});else{const l=_(p[o][r]),v=oi(l,y,.5,this._coordinateHelper);p[o].splice(c,1,...v),n.push({coordinates:_(p[o][h]),componentIndex:o,vertexIndex:h})}return this._updateGraphicGeometry(s),n}_addToSelection(e){const t=we(e);for(const i of t)this._isCurveControlPoint(i)?i.symbol=this.symbols.controlPoints.selected:i.symbol=this.symbols.vertices.selected,this.selectedManipulators.add(i),this._updateTooltip(i);this._emitSelectEvent(t)}_removeFromSelection(e,t){if(this._isVertex(e)){const{vertices:i}=this.symbols;e.symbol=t?i.hover:i.default}else if(this._isCurveControlPoint(e)){const{controlPoints:i}=this.symbols;e.symbol=t?i.hover:i.default}this.selectedManipulators.remove(e),this._emitDeselectEvent([e]),this._updateTooltip()}_clearSelection(){const e=this.selectedManipulators.toArray(),{controlPoints:t,vertices:i}=this.symbols;if(e.length>0){for(const s of e)this._isVertex(s)?s.symbol=i.default:this._isCurveControlPoint(s)&&(s.symbol=t.default);this.selectedManipulators.removeAll(),this._emitDeselectEvent(e),this._updateTooltip()}}_keyDownHandler(e){this._activeOperationInfo==null&&Lt(e,this.tooltip)||ut.delete.includes(e.key)&&!e.repeat&&this.selectedManipulators.length&&this._removeVertices(this.selectedManipulators)}_removeVertices(e){const t=this.graphic.geometry,i=this.vertexGraphics.length;if(t==null||t.type!=="polygon"&&t.type!=="polyline"&&t.type!=="multipoint"||t.type==="polygon"&&i<4||t.type==="multipoint"&&i<2||t.type==="polyline"&&i<3)return;const s=this.graphic.clone(),n=t.clone();let o=N(n);const r=[],c=we(e);for(const a of c){if(this._isCurveControlPoint(a))continue;const{x:h,y:p}=a.geometry;for(let y=0;y<o.length;y++){const l=o[y];for(let v=0;v<l.length;v++){const[x,G]=_(l[v]);if(h===x&&p===G){r.push({coordinates:_(o[y][v]),componentIndex:y,vertexIndex:v}),o[y].splice(Number(v),1);const b=o[y][v];b&&!O(b)&&(o[y][v]=_(b))}}}}if(n.type==="polygon")o=o.filter(a=>{if(a.length<2)return!1;const[h,p]=_(a[0]),[y,l]=_(a[a.length-1]);return(a.length!==2||h!==y||p!==l)&&(h===y&&p===l||a.push(a[0]),!0)});else if(n.type==="polyline")for(const a of o)a.length===1&&o.splice(o.indexOf(a),1);te(n,o),this._updateGraphicGeometry(n),this.refresh(),this._emitVertexRemoveEvent(c,s,r)}_isVertex(e){return this.vertexGraphics.includes(e)}_isCurveControlPoint(e){return this.curveControlPointGraphics.includes(e)}_isConstructionLine(e){return this.constructionLineGraphics.includes(e)}_isSelected(e){return(this._isVertex(e)||this.curveControlPointGraphics.includes(e))&&this.selectedManipulators.includes(e)}_isMidpoint(e){return this.midpointGraphics.includes(e)}_updateHoverCursor(e){const t=this._isMidpoint(e)?"copy":"move";this.addHandles(this.view.acquireCursor(t,"high"),ie)}_updateTooltip(e,t){let i=null;const{graphic:s,view:n,tooltipInfos:o}=this,r=s?.geometry;r?.type==="point"?i=o.movePoint:this._selectedManipulator?i=o.selectedVertex:e===this.graphic?(i=o.translateGraphic,Bt(i,n,this._tooltipsContext,t)):e&&this.selectedManipulators.length>1&&(i=o.translateVertices,Xt(i,n,r,this._tooltipsContext,t)),this.activeTooltipInfo=i}_updateGraphicGeometry(e){this._updateHandlesOnExternalGeometryChange?.pause(),this.graphic.geometry=e,this._updateHandlesOnExternalGeometryChange?.resume()}_emitMoveStartEvent(e,t){const i={type:"move-start",mover:this.graphic,dx:e,dy:t};this.emit("move-start",i),this.callbacks.onMoveStart?.(i)}_emitMoveEvent(e,t){const i={type:"move",mover:this.graphic,dx:e,dy:t};this.emit("move",i),this.callbacks.onMove?.(i)}_emitMoveStopEvent(e,t){if(e==null||t==null){const s=this._activeOperationInfo;if(!s)return;e=s.totalDx,t=s.totalDy}const i={type:"move-stop",mover:this.graphic,dx:e,dy:t};this.emit("move-stop",i),this.callbacks.onMoveStop?.(i)}_emitReshapeStartEvent(e){const t={type:"reshape-start",graphic:this.graphic,mover:e,selected:this.selectedManipulators.toArray()};this.emit("reshape-start",t),this.callbacks.onReshapeStart?.(t)}_emitReshapeEvent(e){const t={type:"reshape",graphic:this.graphic,mover:e,selected:this.selectedManipulators.toArray()};this.emit("reshape",t),this.callbacks.onReshape?.(t)}_emitReshapeStopEvent(e){const t={type:"reshape-stop",graphic:this.graphic,mover:e,selected:this.selectedManipulators.toArray()};this.emit("reshape-stop",t),this.callbacks.onReshapeStop?.(t)}_emitSelectEvent(e){const t={type:"vertex-select",added:e};this.emit("select",t),this.callbacks.onVertexSelect?.(t)}_emitDeselectEvent(e){const t={type:"vertex-deselect",removed:e};this.emit("deselect",t),this.callbacks.onVertexDeselect?.(t)}_emitVertexAddEvent(e,t,i){const s={type:"vertex-add",added:e,graphic:this.graphic,oldGraphic:t,vertices:i};this.emit("vertex-add",s),this.callbacks.onVertexAdd?.(s)}_emitVertexRemoveEvent(e,t,i){const s={type:"vertex-remove",removed:e,graphic:this.graphic,oldGraphic:t,vertices:i};this.emit("vertex-remove",s),this.callbacks.onVertexRemove?.(s)}_logGeometryTypeError(){Se.getLogger(this).error(new vt("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};function fe(e){const t=N(e.clone());if(e.type==="polygon")for(const i of t){const s=i[i.length-1];if(!O(s))continue;const n=i[0];n[0]===s[0]&&n[1]===s[1]&&i.length>2&&i.pop()}return t}function N(e){return e.type==="polygon"?e.curveRings?.slice()??e.rings.slice():e.type==="polyline"?e.curvePaths?.slice()??e.paths.slice():e.points.map(t=>[t])}function si(e,t,i,s){const n=e[t][i];if(C(n))n.c[1]=s;else if(L(n)){const o=_(e[t][i]);e[t][i]={c:[o,s]}}}function ri(e,t,i,s,n){switch(n){case w.circle.interior:si(e,t,i,s);break;case w.bezier.cp1:e[t][i].b[1]=s;break;case w.bezier.cp2:e[t][i].b[2]=s}}function xe(e,t){return e<1e-8*t}function Ge(e,{cx:t,cy:i,isInvalid:s,thetaStart:n,thetaEnd:o},r,c){const[a,h]=e,[p,y]=r,l=p-a,v=y-h;t-=a,i-=h;const x=c?n>o:n<o,[G,b]=s?[t,i]:x?[-i,t]:[i,-t],[V,R]=[l,v],[z,he]=[G,b],J=V*he-R*z,Y=(l**2+v**2)/2;if(xe(Math.abs(J),Y))return[(a+p)/2,(h+y)/2];const[k,T]=[he/J*Y,-z/J*Y],He=k**2+T**2,[Q,W]=[l/2-k,v/2-T];if(xe(Q**2+W**2,He)){const[Fe,Ae]=x?[-T,k]:[T,-k];return[Fe+k+a,Ae+T+h]}const pe=Math.sqrt((k**2+T**2)/(Q**2+W**2))*Math.sign(l*G+v*b);return[Q*pe+k+a,W*pe+T+h]}function be(e,t,i){const s=gt(new j({curvePaths:[[e,t]],spatialReference:i})),{curvePaths:n}=_t(s,i),o=n[0][1];return X(o)?o:yt(e,o)}function q(e,t,i,s,n){const o=e[t][i],r=e[t].at(i+1);if(Te(e,t)){const a=e[t][1];return e[t][0]=[...s],void(e[t][1]={a:[[...s],[...a.a[1]],0,0]})}if(ti(e,t)){const a=e[t][1],[h,p]=a.a[1],[y,l]=s,v=Math.hypot(y-h,l-p),[x,G]=[y-h,l-p],b=mt(G,x);return e[t][0]=[...s],void(e[t][1]={a:[[...s],[...a.a[1]],0,0,b,v,a.a[6]]})}const c=_(o);if(O(o))o.splice(0,o.length,...s);else if(A(o))o.b[0].splice(0,o.b[0].length,...s);else if(C(o)||L(o)){const a=_(e[t][i-1]),h=C(o)?U(a,o):D(a,o);e[t].splice(i,1,{c:[[...s],Ge(a,h,s,!0)]})}else if(X(o)){o.a[0].splice(0,o.a[0].length,...s);const a=_(e[t][i-1]);o.a=be(a,o,n).a}if(r&&!O(r)&&!A(o)){if(C(r)||L(r)){const a=_(r),h=C(r)?U(c,r):D(c,r);e[t].splice(i+1,1,{c:[a,Ge(a,h,s,!1)]})}else if(X(r)){const a=_(o);r.a=be(a,r,n).a}}}function S({attributes:e}){return[e?.[d.pathIndex]||0,e?.[d.pointIndex]||0]}function Me({attributes:e}){return`${e?.[d.pathIndex]}-${e?.[d.pointIndex]}`}function we(e){return e instanceof F?[e]:[...e]}function ni(e){const t=e.sourceLayer??e.layer;return It(t)?{graphic:e,layer:t}:null}function ai(e){return e.toArray().map(({attributes:t})=>({pathIndex:t[d.pathIndex],vertexIndex:t[d.pointIndex]}))}u([m()],g.prototype,"_activeOperationInfo",void 0),u([m()],g.prototype,"_connectedReshapeManager",void 0),u([m()],g.prototype,"_coordinateHelper",null),u([m()],g.prototype,"_editGeometryOperations",void 0),u([m()],g.prototype,"tooltip",void 0),u([m()],g.prototype,"tooltipInfos",void 0),u([m()],g.prototype,"activeTooltipInfo",void 0),u([m({constructOnly:!0})],g.prototype,"automaticAreaMeasurementUtils",void 0),u([m({constructOnly:!0})],g.prototype,"automaticLengthMeasurementUtils",void 0),u([m()],g.prototype,"_selectedManipulator",null),u([m()],g.prototype,"_tooltipsContext",null),u([m()],g.prototype,"callbacks",void 0),u([m()],g.prototype,"connectedReshapeProviders",void 0),u([m()],g.prototype,"enableMidpoints",void 0),u([m()],g.prototype,"enableCurveOnMidpoint",void 0),u([m()],g.prototype,"enableMovement",void 0),u([m()],g.prototype,"enableVertices",void 0),u([m()],g.prototype,"graphic",void 0),u([m()],g.prototype,"highlightName",void 0),u([m()],g.prototype,"highlightsEnabled",void 0),u([m()],g.prototype,"layer",void 0),u([m()],g.prototype,"snappingManager",void 0),u([m({readOnly:!0})],g.prototype,"state",null),u([m()],g.prototype,"symbols",void 0),u([m({type:Le})],g.prototype,"sketchOptions",void 0),u([m({readOnly:!0})],g.prototype,"type",void 0),u([m({readOnly:!0})],g.prototype,"vertexGraphics",void 0),u([m({readOnly:!0})],g.prototype,"curveControlPointGraphics",void 0),u([m({readOnly:!0})],g.prototype,"constructionLineGraphics",void 0),u([m({readOnly:!0})],g.prototype,"midpointGraphics",void 0),u([m({readOnly:!0})],g.prototype,"selectedManipulators",void 0),u([m()],g.prototype,"view",void 0),g=u([ae("esri.views.draw.support.Reshape")],g);const Wi=g;export{Wi as default};
