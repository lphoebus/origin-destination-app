import{fm as z,bu as L,ib as S,aR as T,ay as u,eK as x,cF as P,kp as C,aO as M,ea as k,dV as A,di as I,kq as U,kr as j,j6 as E,eF as F,cA as H,cC as R,hh as K,bb as y,bc as b,bd as N}from"./index-C2z3vZ9k.js";function J(i,e=!1){return i<=z?e?new Array(i).fill(0):new Array(i):new Uint32Array(i)}class g{constructor(e){G(e);const{location:a,data:l}=e;this.location=Object.freeze(L(a));const t=this.location.width,s=this.location.height;let r=!0,h=!0;const o=Math.ceil(t*s/32),n=J(o);let f=0;for(let c=0;c<l.length;c++){const m=c%32;l[c]?(h=!1,n[f]|=1<<m):r=!1,m===31&&++f}h?(this._availability="unavailable",this.byteSize=40):r?(this._availability="available",this.byteSize=40):(this._availability=n,this.byteSize=40+S(n))}getAvailability(e,a){if(this._availability==="unavailable"||this._availability==="available")return this._availability;const l=(e-this.location.top)*this.location.width+(a-this.location.left),t=l%32,s=l>>5,r=this._availability;return s<0||s>r.length?"unknown":r[s]&1<<t?"available":"unavailable"}static fromDefinition(e,a){const l=e.service.request||T,{row:t,col:s,width:r,height:h}=e,o={query:{f:"json"}};return a=a?{...o,...a}:o,l(B(e),a).then((n=>n.data)).catch((n=>{var f;if(((f=n==null?void 0:n.details)==null?void 0:f.httpStatus)===422)return{location:{top:t,left:s,width:r,height:h},valid:!0,data:new Array(r*h).fill(0)};throw n})).then((n=>{if(n.location&&(n.location.top!==t||n.location.left!==s||n.location.width!==r||n.location.height!==h))throw new u("tilemap:location-mismatch","Tilemap response for different location than requested",{response:n,definition:{top:t,left:s,width:r,height:h}});return g.fromJSON(n)}))}static fromJSON(e){return Object.freeze(new g(e))}}function O(i){return`${i.level}/${i.row}/${i.col}/${i.width}/${i.height}`}function B(i){var l;let e;if((l=i.service.tileServers)!=null&&l.length){const t=i.service.tileServers;e=`${t&&t.length?t[i.row%t.length]:i.service.url}/tilemap/${i.level}/${i.row}/${i.col}/${i.width}/${i.height}`}else e=`${i.service.url}/tilemap/${i.level}/${i.row}/${i.col}/${i.width}/${i.height}`;const a=i.service.query;return a&&(e=`${e}?${a}`),e}function G(i){if(!(i!=null&&i.location))throw new u("tilemap:missing-location","Location missing from tilemap response");if(i.valid===!1)throw new u("tilemap:invalid","Tilemap response was marked as invalid");if(!i.data)throw new u("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(i.data))throw new u("tilemap:data-mismatch","Data must be an array of numbers");if(i.data.length!==i.location.width*i.location.height)throw new u("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}var d;function D(i,e,a){return new u("tile-map:tile-unavailable","Tile is not available",{level:i,row:e,col:a})}var p;let v=(p=class extends x{constructor(e){super(e),this._pendingTilemapRequests={},this.request=T,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new P(2*C.MEGABYTES),this.addHandles(M((()=>{const{layer:e}=this;return[e==null?void 0:e.parsedUrl,e==null?void 0:e.tileServers,e==null?void 0:e.apiKey,e==null?void 0:e.customParameters]}),(()=>this._initializeTilemapDefinition()),k))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,a,l){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const t=this._tilemapFromCache(e,a,l,this._tmpTilemapDefinition);return t?t.getAvailability(a,l):"unknown"}fetchAvailability(e,a,l,t){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(D(e,a,l)):this._fetchTilemap(e,a,l,t).catch((s=>s)).then((s=>{if(s instanceof g){const r=s.getAvailability(a,l);if(r==="unavailable")throw D(e,a,l);return r}if(A(s))throw s;return"unknown"}))}fetchAvailabilityUpsample(e,a,l,t,s){t.level=e,t.row=a,t.col=l;const r=this.layer.tileInfo;r.updateTileInfo(t);const h=this.fetchAvailability(e,a,l,s).catch((o=>{if(A(o))throw o;if(r.upsampleTile(t))return this.fetchAvailabilityUpsample(t.level,t.row,t.col,t,s);throw o}));return this._fetchAvailabilityUpsamplePrefetch(t.id,e,a,l,s,h),h}async _fetchAvailabilityUpsamplePrefetch(e,a,l,t,s,r){if(!this._prefetchingEnabled||e==null)return;const h=`prefetch-${e}`;if(this.hasHandles(h))return;const o=new AbortController;r.then((()=>o.abort()),(()=>o.abort()));let n=!1;const f=I((()=>{n||(n=!0,o.abort())}));if(this.addHandles(f,h),await U(10,o.signal).catch((()=>{})),n||(n=!0,this.removeHandles(h)),j(o))return;const c=new E(e,a,l,t),m={...s,signal:o.signal},w=this.layer.tileInfo;for(let q=0;d._prefetches.length<d._maxPrefetch&&w.upsampleTile(c);++q){const _=this.fetchAvailability(c.level,c.row,c.col,m);d._prefetches.push(_);const $=()=>{d._prefetches.removeUnordered(_)};_.then($,$)}}_fetchTilemap(e,a,l,t){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new u("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const s=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,a,l,s);if(r)return Promise.resolve(r);const h=t==null?void 0:t.signal;return t={...t,signal:null},new Promise(((o,n)=>{H(h,(()=>n(R())));const f=O(s);let c=this._pendingTilemapRequests[f];if(!c){c=g.fromDefinition(s,t).then((w=>(this._tilemapCache.put(f,w,w.byteSize),w)));const m=()=>{delete this._pendingTilemapRequests[f]};this._pendingTilemapRequests[f]=c,c.then(m,m)}c.then(o,n)}))}_initializeTilemapDefinition(){var t;if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:a,customParameters:l}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:K({...e.query,...l,token:a??((t=e.query)==null?void 0:t.token)}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,a,l,t){t.level=e,t.row=a-a%this.size,t.col=l-l%this.size;const s=O(t);return this._tilemapCache.get(s)}get test(){}},d=p,p._maxPrefetch=4,p._prefetches=new F({initialSize:d._maxPrefetch}),p);y([b({constructOnly:!0})],v.prototype,"layer",void 0),y([b({constructOnly:!0})],v.prototype,"minLOD",void 0),y([b({constructOnly:!0})],v.prototype,"maxLOD",void 0),y([b({constructOnly:!0})],v.prototype,"request",void 0),y([b({constructOnly:!0})],v.prototype,"size",void 0),v=d=y([N("esri.layers.support.TilemapCache")],v);export{v as T};
