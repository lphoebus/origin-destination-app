const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/editingSupport-D_nDe5ru.js","assets/index-Bkom2Sdc.js","assets/index-CkucmIUh.css","assets/AttributeBinsQuery-DrwEkP8m.js","assets/queryUtils-CyiURm7K.js","assets/FixedIntervalBinParameters-9QRDBkMs.js"])))=>i.map(i=>d[i]);
import{kY as N,mL as J,mM as j,kZ as R,bC as q,bD as P,f8 as T,bN as F,b4 as m,dR as k,fe as D,bF as G,h5 as S,bf as f,b8 as r,ba as s,bb as _,mP as L,mQ as A,hw as Z,mR as z,mS as Q,hF as C,hW as V,mT as B,hu as W,hG as U,hs as Y,ht as H,hv as M,aY as E,bU as X,mU as g,mV as K,dj as b,aH as v,mW as ee,bX as h,mX as te,hy as re,mY as se,i2 as ie,hA as oe,fg as ne,mZ as ae,hH as le,m_ as ue,m$ as de,n0 as pe,hI as he,n1 as ce,n2 as ye,fY as me,n3 as fe,n4 as ge,n5 as be,n6 as ve,hz as Oe}from"./index-Bkom2Sdc.js";import{y as Ie}from"./clientSideDefaults-I-4nPcub.js";import"./QueryEngineCapabilities-DJC_YILC.js";const Fe=Symbol("isGeoJSONGraphicOrigin");var O;class Se extends N{get[(O=Fe,J)](){return this.layer}get[j](){return this.layer}get[R](){return this.layer}constructor(t){super(),this[O]=!0,this.type="geojson",this.layer=t}get id(){return this.layer.id}}let u=class extends q{constructor(){super(...arguments),this.type="geojson",this.refresh=P(async e=>{await this.load();const{extent:t,timeExtent:o}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=t,o&&(this.sourceJSON.timeInfo.timeExtent=[o.start,o.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}applyEdits(e){return this.load().then(()=>this._applyEdits(e))}openPorts(){return this.load().then(()=>this._connection.openPorts())}queryFeatures(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)).then(o=>T.fromJSON(o))}queryFeaturesJSON(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))}queryFeatureCount(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t))}queryObjectIds(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t))}queryExtent(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t)).then(o=>({count:o.count,extent:F.fromJSON(o.extent)}))}querySnapping(e,t={}){return this.load(t).then(()=>this._connection.invoke("querySnapping",e,t))}async queryAttributeBins(e,t={}){return await this.load(),this._connection.invoke("queryAttributeBins",e?.toJSON(),t)}_applyEdits(e){if(!this._connection)throw new m("geojson-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField,o=[],a=[],d=[];if(e.addFeatures)for(const n of e.addFeatures)o.push(this._serializeFeature(n));if(e.deleteFeatures)for(const n of e.deleteFeatures)"objectId"in n&&n.objectId!=null?a.push(n.objectId):"attributes"in n&&n.attributes[t]!=null&&a.push(n.attributes[t]);if(e.updateFeatures)for(const n of e.updateFeatures)d.push(this._serializeFeature(n));return this._connection.invoke("applyEdits",{adds:o,updates:d,deletes:a}).then(({extent:n,timeExtent:l,featureEditResults:c})=>(this.sourceJSON.extent=n,l&&(this.sourceJSON.timeInfo.timeExtent=[l.start,l.end]),this._createEditsResult(c)))}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:""};return{objectId:e.objectId,globalId:e.globalId,error:t?new m("geojson-layer-source:edit-failure",t.description,{code:t.code}):null}}_serializeFeature(e){const{attributes:t}=e,o=this._geometryForSerialization(e);return o?{geometry:o.toJSON(),attributes:t}:{attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return t==null?null:t.type==="mesh"||t.type==="extent"?k.fromExtent(t.extent):t}async _startWorker(e){this._connection=await D("GeoJSONSourceWorker",{strategy:G("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:o,hasZ:a,geometryType:d,objectIdField:n,url:l,timeInfo:c,customParameters:x}=this.layer,$=this.layer.originOf("spatialReference")==="defaults",w={url:l,customParameters:x,fields:t&&t.map(y=>y.toJSON()),geometryType:S.toJSON(d),hasZ:a,objectIdField:n,timeInfo:c?c.toJSON():null,spatialReference:$?null:o&&o.toJSON()},p=await this._connection.invoke("load",w,{signal:e});for(const y of p.warnings)f.getLogger(this.layer).warn("#load()",`${y.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:y});p.featureErrors.length&&f.getLogger(this.layer).warn("#load()",`Encountered ${p.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:p.featureErrors}),this.sourceJSON=p.layerDefinition,this.capabilities=Ie(this.sourceJSON.hasZ,!0)}};r([s()],u.prototype,"capabilities",void 0),r([s()],u.prototype,"type",void 0),r([s({constructOnly:!0})],u.prototype,"layer",void 0),r([s()],u.prototype,"sourceJSON",void 0),u=r([_("esri.layers.graphics.sources.GeoJSONSource")],u);const I=ae();let i=class extends L(A(Z(z(Q(C(V(B(W(U(Y(H(M(re))))))))))))){constructor(e){super(e),this.attributeTableTemplate=null,this.copyright=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.editingEnabled=!1,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.graphicOrigin=new Se(this),this.hasZ=void 0,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="GeoJSON",this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new u({layer:this}),this.spatialReference=E.WGS84,this.templates=null,this.title="GeoJSON",this.type="geojson"}destroy(){this.source?.destroy()}load(e){const t=this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},e).catch(X).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo"],"service"),g(this.renderer,this.fieldsIndex),K(this.timeInfo,this.fieldsIndex)});return this.addResolvingPromise(t),Promise.resolve(this)}set portalItem(e){super.portalItem=e}set timeInfo(e){super.timeInfo=e}get capabilities(){return this.source?this.source.capabilities:null}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&this.geometryType==null}get parsedUrl(){return b(this.url)}set renderer(e){g(e,this.fieldsIndex),this._set("renderer",e)}set url(e){if(!e)return void this._set("url",e);const t=b(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async applyEdits(e,t){const{applyEdits:o}=await v(()=>import("./editingSupport-D_nDe5ru.js"),__vite__mapDeps([0,1,2]));await this.load();const a=await o(this,this.source,e,t);return this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},{origin:"service",ignoreDefaults:!0}),a}createPopupTemplate(e){return ee(this,e)}createQuery(){const e=new h,t=this.capabilities?.data;e.returnGeometry=!0,t&&t.supportsZ&&(e.returnZ=!0),e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:o,timeExtent:a}=this;return e.timeExtent=o!=null&&a!=null?a.offset(-o.value,o.unit):a||null,e}getFieldDomain(e,t){return this.getField(e)?.domain}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,t){return this.load().then(()=>this.source.queryFeatures(h.from(e)||this.createQuery(),t)).then(o=>{if(o?.features)for(const a of o.features)a.layer=a.sourceLayer=this,a.origin=this.graphicOrigin;return o})}queryObjectIds(e,t){return this.load().then(()=>this.source.queryObjectIds(h.from(e)||this.createQuery(),t))}queryFeatureCount(e,t){return this.load().then(()=>this.source.queryFeatureCount(h.from(e)||this.createQuery(),t))}queryExtent(e,t){return this.load().then(()=>this.source.queryExtent(h.from(e)||this.createQuery(),t))}async queryAttributeBins(e,t){const{source:o,capabilities:a}=await this.load();te(e,a,"GeoJSONLayer");const d=await v(()=>import("./AttributeBinsQuery-DrwEkP8m.js"),__vite__mapDeps([3,1,2,4,5])),n=await o.queryAttributeBins(d.default.from(e),t);if(n.features)for(const l of n.features)l.layer=l.sourceLayer=this;return n}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return t!=null&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};r([s(se)],i.prototype,"attributeTableTemplate",void 0),r([s({readOnly:!0,json:{read:!1,write:!1}})],i.prototype,"capabilities",null),r([s({type:String})],i.prototype,"copyright",void 0),r([s({readOnly:!0})],i.prototype,"createQueryVersion",null),r([s(ie("dateFieldsTimeReference"))],i.prototype,"dateFieldsTimeZone",void 0),r([s({readOnly:!0})],i.prototype,"defaultPopupTemplate",null),r([s({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),r([s({type:String})],i.prototype,"displayField",void 0),r([s({type:Boolean})],i.prototype,"editingEnabled",void 0),r([s(oe)],i.prototype,"elevationInfo",void 0),r([s({type:[ne],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],i.prototype,"fields",void 0),r([s(I.fieldsIndex)],i.prototype,"fieldsIndex",void 0),r([s({type:F,json:{name:"extent"}})],i.prototype,"fullExtent",void 0),r([s({type:["point","polygon","polyline","multipoint"],json:{read:{reader:S.read}}})],i.prototype,"geometryType",void 0),r([s({readOnly:!0,clonable:!1})],i.prototype,"graphicOrigin",void 0),r([s({type:Boolean})],i.prototype,"hasZ",void 0),r([s(le)],i.prototype,"id",void 0),r([s({type:Boolean,readOnly:!0})],i.prototype,"isTable",null),r([s(ue)],i.prototype,"labelsVisible",void 0),r([s({type:[pe],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:de},write:!0}})],i.prototype,"labelingInfo",void 0),r([s(he)],i.prototype,"legendEnabled",void 0),r([s({type:["show","hide"]})],i.prototype,"listMode",void 0),r([s({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],i.prototype,"objectIdField",void 0),r([s(ce)],i.prototype,"opacity",void 0),r([s({type:["GeoJSON"]})],i.prototype,"operationalLayerType",void 0),r([s(I.outFields)],i.prototype,"outFields",void 0),r([s({readOnly:!0})],i.prototype,"parsedUrl",null),r([s(ye)],i.prototype,"popupEnabled",void 0),r([s({type:me,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),r([s({types:ge,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:fe}}}})],i.prototype,"renderer",null),r([s(be)],i.prototype,"screenSizePerspectiveEnabled",void 0),r([s({readOnly:!0})],i.prototype,"source",void 0),r([s({type:E})],i.prototype,"spatialReference",void 0),r([s({type:[ve]})],i.prototype,"templates",void 0),r([s()],i.prototype,"title",void 0),r([s({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),r([s(Oe)],i.prototype,"url",null),i=r([_("esri.layers.GeoJSONLayer")],i);const $e=i;export{$e as default};
