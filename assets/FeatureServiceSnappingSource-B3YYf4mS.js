const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/WhereClause-GpJYBgPS.js","assets/index-Bkom2Sdc.js","assets/index-CkucmIUh.css"])))=>i.map(i=>d[i]);
import{ha as W,cc as Z,g8 as H,ka as T,bE as O,hP as J,b8 as n,ba as a,bb as m,d_ as G,bu as Q,hN as K,c7 as N,eQ as M,qk as V,ql as B,cn as X,qm as Y,qn as ee,qo as te,qp as ie,lD as se,ff as ne,dR as re,jd as oe,fy as U,bD as ae,l1 as le,bn as R,h5 as de,d2 as ue,fb as pe,i4 as he,a$ as ce,kr as ye,iQ as ge,b_ as L,gc as f,f$ as S,fA as fe,gd as A,g1 as D,qq as _e,ga as we,aH as ve}from"./index-Bkom2Sdc.js";import{t as me,P as be}from"./elevationInfoUtils-9Dliwvku.js";import{a as Se,Z as Ie,z as Oe}from"./boundedPlane-CAPZ6MT7.js";import{r as He}from"./layerViewUtils-CKJQaxCu.js";import{x as ke}from"./hitTestSelectUtils-ID6ADgkK.js";import{i as $e,o as Te}from"./queryEngineUtils-BJSpjnOh.js";import{o as Pe}from"./WorkerHandle-CMJptQKX.js";import{t as Fe}from"./projectVectorToVector-Un_2LyvX.js";import"./sphere-DYgRQGlT.js";import"./vectorStacks-CNkTMSGr.js";import"./quatf64-aQ5IuZRd.js";import"./lineSegment-D1HJwPUS.js";import"./plane-B-4Z4GK_.js";import"./geodesicUtils-DQpNsZcr.js";import"./spatialReferenceEllipsoidUtils-BXlmM8F6.js";import"./SketchViewModel-Dt_N4A8A.js";import"./geodeticLengthOperator-DbGP2SKX.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-jd78RGb7.js";import"./VertexSnappingCandidate-CxbpcpSm.js";import"./PointSnappingHint-cT9n0xfP.js";import"./projectPointToVector-DMoufHKJ.js";function C(e,t){return Ie(t.extent,j),Se(j,W(Ce,e.x,e.y,0))}const j=Oe(),Ce=Z();let c=class extends H{get tiles(){const e=this.tilesCoveringView,t=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return e.sort((i,r)=>C(t,i)-C(t,r)),e}_scaleEnabled(){return He(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:i}=t,r=[];for(const{row:s,colFrom:o,colTo:l}of e)for(let d=o;d<=l;d++){const v=t.normalizeCol(d),h=new T(i,s,v);this.tileInfo.updateTileInfo(h),r.push(h)}return r}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null,this.updating=!1}initialize(){this.addHandles(O(()=>this.view?.state?.viewpoint,()=>this.notifyChange("tilesCoveringView"),J))}};n([a({readOnly:!0})],c.prototype,"tiles",null),n([a({readOnly:!0})],c.prototype,"_scaleEnabled",null),n([a({readOnly:!0})],c.prototype,"tilesCoveringView",null),n([a({readOnly:!0})],c.prototype,"tileInfo",null),n([a({readOnly:!0})],c.prototype,"tileSize",null),n([a({constructOnly:!0})],c.prototype,"view",void 0),n([a({constructOnly:!0})],c.prototype,"layer",void 0),n([a()],c.prototype,"pointOfInterest",void 0),n([a()],c.prototype,"updating",void 0),c=n([m("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],c);let _=class extends H{get _sortedTilesCoveringView(){const t=(this.view.featureTiles?.tiles?.toArray()??[]).map(Me),i=this._effectivePointOfInterest;return i!=null&&t.sort((r,s)=>C(i,r)-C(i,s)),t}get tileInfo(){return this.view.featureTiles?.tilingScheme?.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){const t=this.pointOfInterest;return t??this.view.pointsOfInterest?.focus.location}get updating(){return!this.view.featureTiles}constructor(t){super(t),this.tiles=[],this.pointOfInterest=null}initialize(){this.addHandles([this.view.enableFeatureTiles(),O(()=>this._sortedTilesCoveringView,t=>this._set("tiles",t),{initial:!0,equals:(t,i)=>Q(t,i,(r,s)=>r.id===s.id)})])}};function Me({lij:[e,t,i],extent:r}){return new T(e,t,i,r??G())}n([a({readOnly:!0})],_.prototype,"tiles",void 0),n([a({readOnly:!0})],_.prototype,"_sortedTilesCoveringView",null),n([a({readOnly:!0})],_.prototype,"tileInfo",null),n([a({readOnly:!0})],_.prototype,"tileSize",null),n([a({constructOnly:!0})],_.prototype,"view",void 0),n([a()],_.prototype,"pointOfInterest",void 0),n([a()],_.prototype,"_effectivePointOfInterest",null),n([a()],_.prototype,"updating",null),_=n([m("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],_);const Ee=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let I=class extends H{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._symbols=Ee.map(t=>new K({color:[t[0],t[1],t[2],.6],outline:{color:"black",width:1}})),this._enabled=!0}initialize(){this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=o=>{if(o.label!=null)return o.label;let l=o.lij.toString();return o.loadPriority!=null&&(l+=` (${o.loadPriority})`),o.measures&&(l+=`[${o.measures.lodLevel}]`),l},t=this.getTiles(),i=new Array,r=new Set(this._labels.size>0?this._labels.keys():this._polygons.keys());t.forEach((o,l)=>{const d=o.lij.toString();r.delete(d);const v=o.measures?.lodLevel??o.level,h=o.geometry;if(this.enablePolygons&&!this._polygons.has(d)){const u=o.polygonSymbol??this._symbols[v%this._symbols.length],g=new N({geometry:h,symbol:u});this._polygons.set(d,g),i.push(g)}if(this.enableLabels){const u=e(o),g=l/(t.length-1),b=V(0,200,g),k=V(20,6,g)/.75,E=o.loadPriority!=null&&o.loadPriority>=t.length,x=new M([b,E?0:b,E?0:b]),z=this.view.type==="3d"?()=>new B({verticalOffset:new ee({screenLength:40/.75}),callout:new Y({color:new M("white"),border:new ie({color:new M("black")})}),symbolLayers:new X([new te({text:u,halo:{color:"white",size:1/.75},material:{color:x},size:k})])}):()=>new se({text:u,haloColor:"white",haloSize:1/.75,color:x,size:k}),P=this._labels.get(d);if(P){const $=z();P.symbol!=null&&JSON.stringify($)===JSON.stringify(P.symbol)||(P.symbol=$)}else{const $=new N({geometry:h.extent.center,symbol:z()});this._labels.set(d,$),i.push($)}}});const s=new Array;r.forEach(o=>{const l=this._polygons.get(o);l!=null&&(s.push(l),this._polygons.delete(o));const d=this._labels.get(o);d!=null&&(s.push(d),this._labels.delete(o))}),this.view.graphics.removeMany(s),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};n([a({constructOnly:!0})],I.prototype,"view",void 0),n([a({readOnly:!0})],I.prototype,"updating",void 0),n([a()],I.prototype,"enabled",null),I=n([m("esri.views.support.TileTreeDebugger")],I);let F=class extends I{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(ne(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(s=>e.set(T.fromJSON(s.key).id,s.featureCount)),this._debugInfo.pendingTiles.forEach(s=>{e.set(s.key.id,s.featureCount),t.set(s.key.id,s.state)});const i=s=>{const o=t.get(s),l=e.get(s)??"?";return o?`${o}:${l}
${s}`:`store:${l}
${s}`},r=new Map;return this._debugInfo.storedTiles.forEach(s=>{const o=T.fromJSON(s.key);r.set(o.id,o)}),this._debugInfo.pendingTiles.forEach(s=>{r.set(s.key.id,s.key)}),Array.from(r.values()).map(s=>({lij:[s.level,s.row,s.col],level:s.level,geometry:re.fromExtent(oe(s.extent,this.view.spatialReference)),label:i(s.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};n([a({constructOnly:!0})],F.prototype,"handle",void 0),F=n([m("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],F);let y=class extends H{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new U,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:r}of t.pointsInFeatures)for(const{z:s}of r)i.push(s);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=ae(async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))})}destroy(){this._suspendController=le(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new ze(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){const i=xe(e.layer);if(i==null)return;const r={configuration:q(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",r,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=q(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:r,coordinateHelper:s}=e,o={...e,point:Fe(i[0],i[1],i[2],s.spatialReference.toJSON()),filter:r?.toJSON()};return this._workerHandle.invoke(o,t)}async updateTiles(e,t){const i={tiles:e.tiles.map(r=>r.toJSON()),tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:r},s){const o={historicMoment:e,addedFeatures:t?.map(({objectId:l})=>l).filter(R)??[],deletedFeatures:i?.map(({objectId:l,globalId:d})=>({objectId:l,globalId:d}))??[],updatedFeatures:r?.map(({objectId:l})=>l).filter(R)??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",o,s)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},s))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){this._suspendController?.abort(),this._suspendController=new AbortController,await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal))}};function q(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function xe(e){return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:e.parsedUrl?.path??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:de.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}n([a({constructOnly:!0})],y.prototype,"schedule",void 0),n([a({constructOnly:!0})],y.prototype,"hasZ",void 0),n([a({constructOnly:!0})],y.prototype,"elevationAlignPointsInFeatures",void 0),n([a({constructOnly:!0})],y.prototype,"queryForSymbologySnapping",void 0),n([a({readOnly:!0})],y.prototype,"updating",null),n([a({readOnly:!0})],y.prototype,"availability",void 0),n([a()],y.prototype,"_workerHandleUpdating",void 0),y=n([m("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],y);class ze extends Pe{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let w=class extends H{get tiles(){return[new T(0,0,0,ue(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new pe({origin:new ce({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new he({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null,this.updating=!1}};n([a({readOnly:!0})],w.prototype,"tiles",null),n([a({readOnly:!0})],w.prototype,"tileInfo",null),n([a({readOnly:!0})],w.prototype,"tileSize",null),n([a({constructOnly:!0})],w.prototype,"layer",void 0),n([a()],w.prototype,"pointOfInterest",void 0),n([a()],w.prototype,"updating",void 0),w=n([m("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],w);let p=class extends H{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){return this.view?.allLayerViews.find(e=>e.layer===this._layer)}get _isSuspended(){return ye(this._layer)&&!this.layerSource.sublayerSources.some(e=>e.enabled&&e.layer.visible)?!0:this._snappingComplexityExceeded||!!this.view&&(this._layerView?.suspended!==!1||!this.layerSource.enabled)}get _snappingComplexityExceeded(){return!(!this._layerView||!("snappingComplexityExceeded"in this._layerView))&&this._layerView.snappingComplexityExceeded}get updating(){return this._workerHandle?.updating||this._updatingHandles.updating||this._tilesOfInterest.updating}get _outFields(){const{view:e,_layerView:t,layerSource:i}=this,{layer:r}=i,{fieldsIndex:s,timeInfo:o,floorInfo:l,subtypeField:d}=r,v=t&&"filter"in t?t.filter:null,h=v?.where&&v.where!=="1=1"?this._getOrLoadWhereFields(v.where,s):[];if(v?.timeExtent&&o){const{startField:u,endField:g}=o,b=s.get(u)?.name??u,k=s.get(g)?.name??g;b&&h.push(b),k&&h.push(k)}if(e?.map&&ke(e.map)&&e.map.utilityNetworks?.find(u=>u.isUtilityLayer(r))){const u=r.fieldsIndex.get("assetGroup")?.name,g=r.fieldsIndex.get("assetType")?.name;u&&g&&(h.push(u),h.push(g))}if(r&&l?.floorField&&e?.floors?.length){const u=s.get(l.floorField)?.name??l.floorField;u&&h.push(u)}if(d){const u=s.get(d)?.name??d;u&&h.push(u)}return new Set(h)}get configuration(){const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,r=e!=null?e.type:"2d",s=this._layer.createQuery();return this._layerView&&"effectiveDisplayFilter"in this._layerView&&(s.where=ge(s.where,this._layerView.effectiveDisplayFilter?.where)),{filter:s,customParameters:t?{...i,token:t}:i,viewType:r}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new U,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=me($e)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new w({layer:this._layer}),e=this._workerHandle=new y;else switch(t.type){case"2d":this._tilesOfInterest=new c({view:t,layer:this._layer}),e=this._workerHandle=new y;break;case"3d":{const{resourceController:i}=t,r=this._layer;this._tilesOfInterest=new _({view:t}),e=this._workerHandle=new y({schedule:s=>i.immediate.schedule(s),hasZ:r.hasZ&&(r.returnZ??!0),elevationAlignPointsInFeatures:async(s,o)=>{const l=await t.whenLayerView(r);return L(o),l.elevationAlignPointsInFeatures(s,o)},queryForSymbologySnapping:async(s,o)=>{const l=await t.whenLayerView(r);return L(o),l.queryForSymbologySnapping(s,o)}}),this._updatingHandles.add(()=>r.elevationInfo,()=>f(e.notifyElevationSourceChange()),S),this._updatingHandles.add(()=>this._layerView?.layer?.renderer,()=>f(e.notifySymbologyChange()),S),this._updatingHandles.add(()=>this._layerView?.symbologySnappingSupported??!1,s=>f(e.setSymbologySnappingSupported(s)),S),this.addHandles([t.elevationProvider.on("elevation-change",({context:s})=>{const{elevationInfo:o}=r;be(s,o)&&f(e.notifyElevationSourceChange())}),fe(()=>this._layerView?.layer,["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}this.addHandles([A(e)]),f(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>f(e.updateTiles(this._updateTilesParameters,null)),S),this.addHandles([O(()=>this.configuration,i=>f(e.configure(i,null)),J),O(()=>this._layer.historicMoment,i=>f(e.setHistoricMoment(i)),D),O(()=>this._isSuspended,i=>f(e.setSuspended(i)),D)]),this._updatingHandles.add(()=>this._outFields,i=>f(e.updateOutFields(i)),S),t!=null&&this.addHandles(O(()=>_e.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new F({view:t,handle:e}),this.addHandles(A(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")},S)),this.addHandles([this.layerSource.layer.on("edits",i=>f(e.handleEdits(i,null))),this.layerSource.layer.on("apply-edits",i=>this._updatingHandles.addPromise(i.result))])}destroy(){this._updatingHandles.destroy(),this._tilesOfInterest.destroy()}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){if(this._isSuspended)return[];const{coordinateHelper:i,point:r}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(r);const s=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(o=>Te(o,s))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const r=we(async()=>{const s=await ve(()=>import("./WhereClause-GpJYBgPS.js").then(o=>o.W),__vite__mapDeps([0,1,2]));return this._whereModule=s.default,this._whereModule});return this._loadWhereModuleTask=r,this._updatingHandles.addPromise(r.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};n([a({constructOnly:!0})],p.prototype,"spatialReference",void 0),n([a({constructOnly:!0})],p.prototype,"layerSource",void 0),n([a({constructOnly:!0})],p.prototype,"view",void 0),n([a()],p.prototype,"_tilesOfInterest",void 0),n([a({readOnly:!0})],p.prototype,"_updateTilesParameters",null),n([a()],p.prototype,"_layerView",null),n([a()],p.prototype,"_isSuspended",null),n([a()],p.prototype,"_snappingComplexityExceeded",null),n([a({readOnly:!0})],p.prototype,"updating",null),n([a()],p.prototype,"_outFields",null),n([a({readOnly:!0})],p.prototype,"configuration",null),n([a({readOnly:!0})],p.prototype,"availability",null),n([a()],p.prototype,"_loadWhereModuleTask",void 0),n([a()],p.prototype,"_whereModule",void 0),p=n([m("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],p);export{p as FeatureServiceSnappingSource};
