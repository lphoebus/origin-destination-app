const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/streamLayerUtils-DW4dCHkt.js","assets/utils-B1xfry1O.js","assets/index-Bkom2Sdc.js","assets/index-CkucmIUh.css","assets/originUtils-CUyL9ZOO.js","assets/saveUtils-DSRPRt58.js","assets/createConnection-CO2yaLT0.js"])))=>i.map(i=>d[i]);
import{kY as O,mL as _,mM as P,kZ as k,b6 as D,b8 as t,ba as s,bb as $,mQ as E,mR as A,mS as U,hF as L,hW as N,mT as C,hu as G,hG as V,hr as z,hs as J,ht as M,hv as W,hw as Y,bd as q,hy as H,aY as x,bD as Q,aH as f,b4 as d,bU as Z,mU as g,ng as X,bf as B,nh as K,h5 as m,je as ee,mW as te,bX as ie,bH as se,fg as re,dp as oe,mV as ne,ni as ae,hY as le,mZ as de,bN as pe,m_ as ce,m$ as ue,n0 as he,hI as me,i3 as v,nj as ye,nk as fe,n2 as ge,fY as ve,n3 as be,n4 as we,eC as b,cb as Ie,n5 as Se,hz as $e}from"./index-Bkom2Sdc.js";const xe=Symbol("isStreamGraphicOrigin");var w;class je extends O{get[(w=xe,_)](){return this.layer}get[P](){return this.layer}get[k](){return this.layer}constructor(r){super(),this[w]=!0,this.type="stream",this.layer=r}get id(){return this.layer.id}}var y,p;let a=(p=class extends D{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new y({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}},y=p,p);t([s({type:Number,json:{write:!0}})],a.prototype,"age",void 0),t([s({type:Number,json:{write:!0}})],a.prototype,"ageReceived",void 0),t([s({type:Number,json:{write:!0}})],a.prototype,"displayCount",void 0),t([s({type:Number,json:{write:!0}})],a.prototype,"maxObservations",void 0),a=y=t([$("esri.layers.support.PurgeOptions")],a);const I=de();function S(e,r){return new d("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${r}`,{layer:e})}let i=class extends E(A(U(L(N(C(G(V(z(J(M(W(Y(q(H)))))))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.graphicOrigin=new je(this),this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.outFields=["*"],this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new a,this.refreshInterval=0,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=x.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.useViewTime=!0,this.webSocketUrl=null,this._debouncedSaveOperations=Q(async(r,o,n)=>{const{save:l,saveAs:u}=await f(()=>import("./streamLayerUtils-DW4dCHkt.js"),__vite__mapDeps([0,1,2,3,4,5]));switch(r){case 0:return l(this,o);case 1:return u(this,n,o)}})}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new d("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(Z).then(()=>this._fetchService(r))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set featureReduction(e){const r=this._normalizeFeatureReduction(e);this._set("featureReduction",r)}set renderer(e){g(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,r,o){r=r.layerDefinition||r;const n=r.drawingInfo?.renderer;if(n){const l=X(n,r,o)||void 0;return l||B.getLogger(this).error("Failed to create renderer",{rendererDefinition:r.drawingInfo.renderer,layer:this,context:o}),l}return K(r,o)}async connect(e){const[{createConnection:r}]=await Promise.all([f(()=>import("./createConnection-CO2yaLT0.js"),__vite__mapDeps([6,2,3])),this.load()]),o=this.geometryType?m.toJSON(this.geometryType):null,{customParameters:n=null,definitionExpression:l=null,geometryDefinition:u=null,maxReconnectionAttempts:j=0,maxReconnectionInterval:R=20,spatialReference:T=this.spatialReference}=e||this.createConnectionParameters(),c=r(this.parsedUrl,this.spatialReference,T,o,l,u,j,R,n??void 0),F=ee([this.on("send-message-to-socket",h=>c.sendMessageToSocket(h)),this.on("send-message-to-client",h=>c.sendMessageToClient(h))]);return c.once("destroy",F.remove),c}createConnectionParameters(){return{spatialReference:this.spatialReference,customParameters:this.customParameters,definitionExpression:this.definitionExpression,geometryDefinition:this.geometryDefinition,maxReconnectionAttempts:this.maxReconnectionAttempts,maxReconnectionInterval:this.maxReconnectionInterval}}createPopupTemplate(e){return te(this,e)}createQuery(){const e=new ie;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,r){if(!this.fields)return null;let o=null;return this.fields.some(n=>(n.name===e&&(o=n.domain),!!o)),o}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}sendMessageToSocket(e){this.emit("send-message-to-socket",e)}sendMessageToClient(e){this.emit("send-message-to-client",e)}async save(e){return this._debouncedSaveOperations(0,e)}async saveAs(e,r){return this._debouncedSaveOperations(1,r,e)}write(e,r){const o=r?.messages;return this.webSocketUrl?(o?.push(S(this,"using a custom websocket connection cannot be written to web scenes and web maps")),null):this.parsedUrl?super.write(e,r):(o?.push(S(this,"using a client-side only connection without a url cannot be written to web scenes and web maps")),null)}async _fetchService(e){if(!this.webSocketUrl&&this.parsedUrl){if(!this.sourceJSON){const{data:r}=await se(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=r}}else{if(!this.timeInfo?.trackIdField)throw new d("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField){const r=this.fields.find(o=>o.type==="oid")?.name;if(!r)throw new d("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");this.objectIdField=r}if(!this.fields)throw new d("stream-layer:missing-metadata","The stream layer fields must be specified.");if(this.fields.some(r=>r.name===this.objectIdField)||this.fields.push(new re({name:this.objectIdField,alias:this.objectIdField,type:"oid"})),!this.geometryType)throw new d("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.webSocketUrl&&(this.url=this.webSocketUrl)}return this.read(this.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}),g(this.renderer,this.fieldsIndex),ne(this.timeInfo,this.fieldsIndex),this.objectIdField||(this.objectIdField=ae),oe(this,{origin:"service"})}};t([s({type:String})],i.prototype,"copyright",void 0),t([s({readOnly:!0})],i.prototype,"defaultPopupTemplate",null),t([s({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),t([s({type:String})],i.prototype,"displayField",void 0),t([s({type:le})],i.prototype,"elevationInfo",void 0),t([s({json:{origins:{"web-map":{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],i.prototype,"featureReduction",null),t([s(I.fields)],i.prototype,"fields",void 0),t([s(I.fieldsIndex)],i.prototype,"fieldsIndex",void 0),t([s({type:pe,json:{name:"layerDefinition.definitionGeometry",write:!0}})],i.prototype,"geometryDefinition",void 0),t([s({type:m.apiValues,json:{read:{reader:m.read}}})],i.prototype,"geometryType",void 0),t([s({readOnly:!0,clonable:!1})],i.prototype,"graphicOrigin",void 0),t([s(ce)],i.prototype,"labelsVisible",void 0),t([s({type:[he],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:ue},write:!0}})],i.prototype,"labelingInfo",void 0),t([s(me)],i.prototype,"legendEnabled",void 0),t([s({type:["show","hide"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],i.prototype,"listMode",void 0),t([s({type:v})],i.prototype,"maxReconnectionAttempts",void 0),t([s({type:v})],i.prototype,"maxReconnectionInterval",void 0),t([s(ye)],i.prototype,"maxScale",void 0),t([s(fe)],i.prototype,"minScale",void 0),t([s({type:String})],i.prototype,"objectIdField",void 0),t([s({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],i.prototype,"operationalLayerType",void 0),t([s({readOnly:!0})],i.prototype,"outFields",void 0),t([s(ge)],i.prototype,"popupEnabled",void 0),t([s({type:ve,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),t([s({type:a})],i.prototype,"purgeOptions",void 0),t([s({json:{read:!1,write:!1}})],i.prototype,"refreshInterval",void 0),t([s({types:we,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:be,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],i.prototype,"renderer",null),t([b("service","renderer",["drawingInfo.renderer","defaultSymbol"]),b("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],i.prototype,"readRenderer",null),t([s((()=>{const e=Ie(Se);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],i.prototype,"screenSizePerspectiveEnabled",void 0),t([s()],i.prototype,"sourceJSON",void 0),t([s({type:x,json:{origins:{service:{read:{source:"spatialReference"}}}}})],i.prototype,"spatialReference",void 0),t([s({json:{read:!1}})],i.prototype,"type",void 0),t([s($e)],i.prototype,"url",void 0),t([s({type:Number})],i.prototype,"updateInterval",void 0),t([s({json:{read:!1,write:!1}})],i.prototype,"useViewTime",void 0),t([s({type:String})],i.prototype,"webSocketUrl",void 0),i=t([$("esri.layers.StreamLayer")],i);const Te=i;export{Te as default};
