const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-Bkom2Sdc.js","assets/index-CkucmIUh.css"])))=>i.map(i=>d[i]);
import{b8 as a,ba as n,eC as b,bN as ie,hH as ue,n2 as ye,aY as se,bb as Q,no as pe,q0 as H,b_ as G,bP as K,bH as C,bm as W,fi as de,kY as ae,kZ as le,hv as ce,fv as he,q1 as fe,dF as be,q2 as me,bF as ge,mU as Se,q3 as we,bf as O,q4 as k,bl as ve,cn as J,i5 as Ie,k9 as j,mW as xe,bX as Oe,aH as Le,b4 as h,cb as q,nR as Fe,q5 as _e,eG as Te,iQ as Pe,q6 as qe,h5 as V,hT as R,bC as De,o6 as Ee,fg as je,q7 as $e,i3 as M,n0 as Ae,eD as x,q8 as Me,nL as Ne,fY as Ce,q9 as ke,n3 as Ve,n4 as Re,m1 as z,dP as Y,hk as Be,nf as Qe,g0 as Je,bE as X,hP as Z,qa as Ue,hS as ee}from"./index-Bkom2Sdc.js";import{S as He}from"./QueryTask-CnbIf4V8.js";const rt=y=>{const e=y;let t=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(r,i){const s=i.capabilities&&i.capabilities.split(",").map(ne=>ne.toLowerCase().trim());if(!s)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const o=this.type,u=o!=="tile"&&!!i.supportsDynamicLayers,p=s.includes("query"),c=s.includes("map"),m=!!i.exportTilesAllowed,I=s.includes("tilemap"),g=s.includes("data"),w=o!=="tile"&&(!i.tileInfo||u),F=o!=="tile"&&(!i.tileInfo||u),_=o!=="tile",d=o!=="tile"&&u&&i.currentVersion>=11.1,f=i.cimVersion?pe.parse(i.cimVersion):null,T=f?.greaterEqual(1,4)??!1,P=f?.greaterEqual(2,0)??!1;return{operations:{supportsExportMap:c,supportsExportTiles:m,supportsIdentify:p,supportsQuery:g,supportsTileMap:I},exportMap:c?{supportsArcadeExpressionForLabeling:T,supportsCIMSymbols:P,supportsDynamicLayers:u,supportsSublayerOrderBy:d,supportsSublayerDefinitionExpression:F,supportsSublayerVisibility:w,supportsSublayersChanges:_}:null,exportTiles:m?{maxExportTilesCount:+i.maxExportTilesCount}:null}}readVersion(r,i){let s=i.currentVersion;return s||(s=i.hasOwnProperty("capabilities")||i.hasOwnProperty("tables")?10:i.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),s}async fetchRelatedService(r){const i=this.portalItem;if(!i||!H(i))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=i.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},r).then(o=>o.find(u=>u.type==="Feature Service")??null,()=>null));const s=await this._relatedFeatureServicePromise;return G(r),s?{itemId:s.id,url:s.url}:null}async fetchSublayerInfo(r,i){const{source:s}=r;if(this?.portalItem&&this.type==="tile"&&s?.type==="map-layer"&&H(this.portalItem)&&r.originIdOf("url")<2){const p=await this.fetchRelatedService(i);p&&(r.url=K(p.url,s.mapLayerId.toString()),r.layerItemId=p.itemId)}const{url:o}=r;let u;if(s.type==="data-layer")u=(await C(o,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...i})).data;else if(o&&r.originIdOf("url")>2)try{const p=await this._fetchAllLayersAndTablesFromService(o),c=W(o)?.sublayer??s.mapLayerId;u=p.get(c)}catch{}else{let p=r.id;s?.type==="map-layer"&&(p=s.mapLayerId);try{u=(await this.fetchAllLayersAndTables(i)).get(p)}catch{}}return u}async fetchAllLayersAndTables(r){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,r)}async _fetchAllLayersAndTablesFromService(r,i){await this.load(i),this._allLayersAndTablesMap||=new Map;const s=W(r),o=de(this._allLayersAndTablesMap,s?.url.path,()=>C(K(s?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(p=>{const c=new Map,{layers:m,tables:I}=p.data,g=[...m??[],...I??[]];for(const w of g)c.set(w.id,w);return{result:c}},p=>({error:p}))),u=await o;if(G(i),"result"in u)return u.result;throw u.error}};return a([n({readOnly:!0})],t.prototype,"capabilities",void 0),a([b("service","capabilities",["capabilities","cimVersion","currentVersion","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],t.prototype,"readCapabilities",null),a([n({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),a([n({type:ie})],t.prototype,"fullExtent",void 0),a([n(ue)],t.prototype,"id",void 0),a([n({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],t.prototype,"legendEnabled",void 0),a([n(ye)],t.prototype,"popupEnabled",void 0),a([n({type:se})],t.prototype,"spatialReference",void 0),a([n({readOnly:!0})],t.prototype,"version",void 0),a([b("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],t.prototype,"readVersion",null),t=a([Q("esri.layers.mixins.ArcGISMapService")],t),t},Ge=Symbol("isMapImageGraphicOriginSymbol");var te;let Ke=class extends ae{get[(te=Ge,le)](){return this.layer}constructor(e,t){super(),this[te]=!0,this.type="map-image",this.layer=e,this.sublayer=t}get id(){return`${this.layer.id}:__${this.sublayer.id}__`}};const We=Symbol("isTileGraphicOriginSymbol");var re;class ze extends ae{get[(re=We,le)](){return this.layer}constructor(e,t){super(),this[re]=!0,this.type="tile",this.layer=e,this.sublayer=t}get id(){return`${this.layer.id}:__${this.sublayer.id}__`}}var $;function N(y){return y?.type==="esriSMS"}function U(y,e,t){const r=t.minimumWritableOrigin||t.origin;return!!r&&y.originIdOf(e)>=R(r)}function L(y,e,t){const r=U(this,e,t);return{ignoreOrigin:!0,allowNull:r,enabled:!!t&&t.layer?.type==="map-image"&&(t.writeSublayerStructure||r)}}function B(y,e,t){return{enabled:!!t&&t.layer?.type==="tile"&&(U(this,e,t)||this._isOverridden(e))}}function S(y,e,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function A(y,e,t){return{ignoreOrigin:!0,enabled:!!t?.writeSublayerStructure&&this.originIdOf(e)>2}}function D(y,e,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||U(this,e,t))}}let Ye=0;const Xe=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]);var v;let l=(v=class extends ce(he(De)){constructor(e){super(e),this.attributeTableTemplate=null,this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise(this.reload(e)),this}readCapabilities(e,t){t=t.layerDefinition||t;const{attachment:r,operations:{supportsQuery:i,supportsQueryAttachments:s},query:{supportsFormatPBF:o,supportsOrderBy:u,supportsPagination:p},data:{supportsAttachment:c},queryRelated:m}=fe(t,this.url);return{attachment:{supportsOrderByFields:r?.supportsOrderByFields??!1,supportsResize:r?.supportsResize??!1,supportsTypeWildcard:r?.supportsTypeWildcard??!1},exportMap:{supportsModification:!!t.canModifyLayer},operations:{supportsQuery:i,supportsQueryAttachments:s},data:{supportsAttachment:c},query:{supportsFormatPBF:o,supportsOrderBy:u,supportsPagination:p},queryRelated:m}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){const{minScale:e,maxScale:t}=this;return{minScale:e,maxScale:t}}readMaxScaleRange(e,t){return{minScale:(t=t.layerDefinition||t).minScale??0,maxScale:t.maxScale??0}}get fieldsIndex(){return new be(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,t){if((t=t.layerDefinition||t).globalIdField)return t.globalIdField;if(t.fields){for(const r of t.fields)if(r.type==="esriFieldTypeGlobalID")return r.name}}get graphicOrigin(){if(!this.layer)return null;switch(this.layer.type){case"tile":return new ze(this.layer,this);case"map-image":return new Ke(this.layer,this)}}get id(){return this._get("id")??Ye++}set id(e){this._get("id")!==e&&(this.layer?.capabilities?.exportMap?.supportsDynamicLayers!==!1?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(e,t){return t.type==="Table"}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,t,r,i){e&&e.length&&(t.layerDefinition={drawingInfo:{labelingInfo:e.map(s=>s.write({},i))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers?.forEach(t=>t.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,t){return t.minScale||t.layerDefinition?.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,t){return t.maxScale||t.layerDefinition?.maxScale||0}readObjectIdFieldFromService(e,t){return(t=t.layerDefinition||t).objectIdField?t.objectIdField:t.fields?.find(i=>i.type==="esriFieldTypeOID")?.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,t){const{layerDefinition:r}=t;return 1-.01*(r?.transparency??r?.drawingInfo?.transparency??0)}writeOpacity(e,t,r,i){t.layerDefinition={drawingInfo:{transparency:100-100*e}}}set orderBy(e){this._setAndNotifyLayer("orderBy",e)}writeParent(e,t){this.parent&&this.parent!==this.layer?t.parentLayerId=me(this.parent.id):t.parentLayerId=-1}get queryTask(){if(!this.layer)return null;const{capabilities:e,fieldsIndex:t,layer:r,url:i}=this,{spatialReference:s}=r,o="gdbVersion"in r?r.gdbVersion:void 0,u=ge("featurelayer-pbf")&&e?.query.supportsFormatPBF;return new He({fieldsIndex:t,gdbVersion:o,pbfSupported:u,queryAttachmentsSupported:e?.operations?.supportsQueryAttachments??!1,sourceSpatialReference:s,url:i})}set renderer(e){if(Se(e,this.fieldsIndex),e){for(const t of e.symbols)if(we(t)){O.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new k({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return ve(J.ofType($),e)}writeSublayers(e,t,r){this.sublayers?.length&&(t[r]=this.sublayers.map(i=>i.id).toArray().reverse())}readTitle(e,t){return t.layerDefinition?.name??t.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const i=t.fields.find(s=>s.name.toLowerCase()===r);i&&(r=i.name)}return r}get url(){const e=this.layer?.parsedUrl??this._lastParsedUrl,t=this.source;if(!e)return null;if(this._lastParsedUrl=e,t?.type==="map-layer")return`${e.path}/${t.mapLayerId}`;const r={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${Ie(r)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,t,r,i){t[r]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=j(this),t=new $;return j(t).store=e.clone(Xe),this.commitProperty("url"),t._lastParsedUrl=this._lastParsedUrl,t}createPopupTemplate(e){return xe(this,e)}createQuery(){return new Oe({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const e=(await Le(async()=>{const{default:s}=await import("./index-Bkom2Sdc.js").then(o=>o.zC);return{default:s}},__vite__mapDeps([0,1]))).default,{layer:t,url:r}=this;let i;if(r&&this.originIdOf("url")>2)i=new e({url:r});else{if(!t?.parsedUrl)throw new h("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const s=t.parsedUrl;i=new e({url:s.path}),s&&this.source&&(this.source.type==="map-layer"?i.layerId=this.source.mapLayerId:i.dynamicDataSource=this.source)}}return t?.refreshInterval!=null&&(i.refreshInterval=t.refreshInterval),this.definitionExpression&&(i.definitionExpression=this.definitionExpression),this.floorInfo&&(i.floorInfo=q(this.floorInfo)),this.originIdOf("labelingInfo")>2&&(i.labelingInfo=q(this.labelingInfo)),this.originIdOf("labelsVisible")>0&&(i.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>0&&(i.legendEnabled=this.legendEnabled),this.originIdOf("visible")>0&&(i.visible=this.visible),this.originIdOf("minScale")>0&&(i.minScale=this.minScale),this.originIdOf("maxScale")>0&&(i.maxScale=this.maxScale),this.originIdOf("opacity")>0&&(i.opacity=this.opacity),this.originIdOf("popupTemplate")>0&&(i.popupTemplate=q(this.popupTemplate)),this.originIdOf("renderer")>2&&(i.renderer=q(this.renderer)),this.source?.type==="data-layer"&&(i.dynamicDataSource=this.source.clone()),this.originIdOf("title")>0&&(i.title=this.title),t?.type==="map-image"&&t.originIdOf("customParameters")>0&&(i.customParameters=t.customParameters),t?.type==="tile"&&t.originIdOf("customParameters")>0&&(i.customParameters=t.customParameters),i}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){return Fe(this.types,this.typeIdField,e)}getFieldDomain(e,t){const r=t?.feature,i=this.getFeatureType(r);if(i){const s=i.domains&&i.domains[e];if(s&&s.type!=="inherited")return s}return this._getLayerDomain(e)}async queryAttachments(e,t){await this.load(),e=_e.from(e);const r=this.capabilities;if(!r?.data?.supportsAttachment)throw new h("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:s,globalIds:o,num:u,size:p,start:c,where:m}=e;if(!r?.operations?.supportsQueryAttachments&&(i?.length>0||o?.length>0||p?.length>0||u||c||m))throw new h("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(s?.length||o?.length||m))throw new h("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return!r?.attachment?.supportsOrderByFields&&e.orderByFields?.length&&((e=e.clone()).orderByFields=null),this.queryTask.executeAttachmentQuery(e,t)}async queryFeatureCount(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryFeatureCount:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeForCount(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryFeatures(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryFeatures:not-supported","this layer has no url.");const r=await this.queryTask.execute(e,{...t,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(r?.features){const i=this.graphicOrigin;for(const s of r.features)s.sourceLayer=this,s.origin=i}return r}async queryObjectIds(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryObjectIds:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeForIds(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryRelatedFeatures(e,t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryRelatedFeatures:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeRelationshipQuery(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new h("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new h("queryRelatedFeaturesCount:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeRelationshipQueryForCount(e,{...t,query:{...this.layer?.customParameters,token:r}})}async reload(e){if(this.loadStatus==="not-loaded")return this.load(e).then(()=>{});const{layer:t,url:r}=this;if(!t&&!r)throw new h("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=t?await t.fetchSublayerInfo(this,e):(await C(r,{query:{f:"json"},...e})).data;if(this.loaded&&this.originIdOf("url")>2){const s=new Set(["drawingInfo","maxScale","minScale","name"]);if(i!=null)for(const o of Object.keys(i))s.has(o)&&delete i[o]}i&&(this.sourceJSON={...this.sourceJSON,...i},this.read({layerDefinition:i},{origin:"service",layer:t,url:Te(r)}))}toExportImageJSON(e){const t={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},r=Pe(e,this.definitionExpression);r!=null&&(t.definitionExpression=r);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((o,u)=>(o[u]=this.originIdOf(u),o),{});if(Object.keys(i).some(o=>i[o]>2)){const o=t.drawingInfo={};if(i.renderer>2&&(o.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>2&&(o.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>2)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some(p=>!p.labelPlacement)&&O.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let u=this.labelingInfo;this.geometryType!=null&&(u=qe(this.labelingInfo,V.toJSON(this.geometryType))),o.showLabels=!0,o.labelingInfo=u.filter(p=>p.labelPlacement).map(p=>p.toJSON({origin:"service",layer:this.layer}))}else o.showLabels=!1;i.opacity>2&&(o.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(o.renderer)}return(this.layer?.capabilities?.exportMap?.supportsSublayerOrderBy??!1)&&this.originIdOf("orderBy")>2&&(t.orderBy=this.orderBy?.map(o=>o.toJSON())??null),t}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,t=>{t.color||t.style!=="esriSMSX"&&t.style!=="esriSMSCross"||(t.outline?.color?t.color=t.outline.color:t.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,t){if(e){const r=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const i of r)N(i.symbol)&&t(i.symbol);"symbol"in e&&N(e.symbol)&&t(e.symbol),"defaultSymbol"in e&&N(e.defaultSymbol)&&t(e.defaultSymbol)}}_setAndNotifyLayer(e,t){const r=this.layer,i=this._get(e);let s,o;switch(e){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",o="supportsModification";break;case"orderBy":s="supportsSublayerOrderBy",o="supportsModification"}const u=j(this).getDefaultOrigin();if(u!=="service"){if(s&&this.layer?.capabilities?.exportMap?.[s]===!1)return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${s}'`);if(o&&this.capabilities?.exportMap[o]===!1)return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${o}'`)}e!=="source"||this.loadStatus==="not-loaded"?(this._set(e,t),u!=="service"&&i!==t&&r?.emit&&r.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,t){t&&(t.forEach(r=>{r.parent=null,r.layer=null}),this.removeAllHandles()),e&&(e.forEach(r=>{r.parent=this,r.layer=this.layer}),this.addHandles([e.on("after-add",({item:r})=>{r.parent=this,r.layer=this.layer}),e.on("after-remove",({item:r})=>{r.parent=null,r.layer=null}),e.on("before-changes",r=>{(this.layer?.capabilities?.exportMap?.supportsSublayersChanges??1)||(O.getLogger(this).error(new h("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),r.preventDefault())})]))}_logLockedError(e,t){const{layer:r,declaredClass:i}=this;O.getLogger(i).error(new h("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${r?.id}'`,{reason:t,sublayer:this,layer:r}))}_getLayerDomain(e){return this.fieldsIndex.get(e)?.domain??null}},$=v,v.test={isMapImageLayerOverridePolicy:e=>e===A||e===S||e===L,isTileImageLayerOverridePolicy:e=>e===B},v);a([n({type:Ee,json:{name:"attributeTableInfo",write:{overridePolicy:L},origins:{"web-scene":{write:!1}}}})],l.prototype,"attributeTableTemplate",void 0),a([n({readOnly:!0})],l.prototype,"capabilities",void 0),a([b("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],l.prototype,"readCapabilities",null),a([n()],l.prototype,"defaultPopupTemplate",null),a([n({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:L}}})],l.prototype,"definitionExpression",null),a([n({readOnly:!0})],l.prototype,"effectiveScaleRange",null),a([b("service","maxScaleRange",["minScale","maxScale"])],l.prototype,"readMaxScaleRange",null),a([n({type:[je],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],l.prototype,"fields",void 0),a([n({readOnly:!0})],l.prototype,"fieldsIndex",null),a([n({type:$e,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:L},origins:{"web-scene":{read:!1,write:!1}}}})],l.prototype,"floorInfo",null),a([n({type:ie,json:{read:{source:"layerDefinition.extent"}}})],l.prototype,"fullExtent",void 0),a([n({type:V.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:V.read}}}}})],l.prototype,"geometryType",void 0),a([n({type:String})],l.prototype,"globalIdField",void 0),a([b("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],l.prototype,"readGlobalIdFieldFromService",null),a([n({readOnly:!0})],l.prototype,"graphicOrigin",null),a([n({type:M,json:{write:{ignoreOrigin:!0}}})],l.prototype,"id",null),a([n({readOnly:!0})],l.prototype,"isTable",void 0),a([b("service","isTable",["type"])],l.prototype,"readIsTable",null),a([n({value:null,type:[Ae],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:A}}})],l.prototype,"labelingInfo",null),a([x("labelingInfo")],l.prototype,"writeLabelingInfo",null),a([n({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:S}}})],l.prototype,"labelsVisible",null),a([n({value:null})],l.prototype,"layer",null),a([n({type:String,json:{write:{overridePolicy:B}}})],l.prototype,"layerItemId",void 0),a([n({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:D}}})],l.prototype,"legendEnabled",void 0),a([n({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],l.prototype,"listMode",null),a([n({type:Number,value:0,json:{write:{overridePolicy:S}}})],l.prototype,"minScale",null),a([b("minScale",["minScale","layerDefinition.minScale"])],l.prototype,"readMinScale",null),a([n({type:Number,value:0,json:{write:{overridePolicy:S}}})],l.prototype,"maxScale",null),a([b("maxScale",["maxScale","layerDefinition.maxScale"])],l.prototype,"readMaxScale",null),a([n()],l.prototype,"objectIdField",void 0),a([b("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],l.prototype,"readObjectIdFieldFromService",null),a([n({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:S}}})],l.prototype,"opacity",null),a([b("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],l.prototype,"readOpacity",null),a([x("opacity")],l.prototype,"writeOpacity",null),a([n({value:null,type:[Ne],json:{name:"layerDefinition.orderBy",read:{reader:Me},write:{overridePolicy:L},origins:{"web-scene":{read:!1,write:!1}}}})],l.prototype,"orderBy",null),a([n({json:{type:M,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:S}}})],l.prototype,"parent",void 0),a([x("parent")],l.prototype,"writeParent",null),a([n({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(y,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy:D,writer(y,e,t){e[t]=!y}}}})],l.prototype,"popupEnabled",void 0),a([n({type:Ce,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:D}}})],l.prototype,"popupTemplate",void 0),a([n({readOnly:!0})],l.prototype,"queryTask",null),a([n({type:[ke],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],l.prototype,"relationships",void 0),a([n({types:Re,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:A},origins:{"web-scene":{types:Ve,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:A}}}}})],l.prototype,"renderer",null),a([n({types:{key:"type",base:null,typeMap:{"data-layer":z,"map-layer":k}},cast(y){if(y){if("mapLayerId"in y)return Y(k,y);if("dataSource"in y)return Y(z,y)}return y},json:{name:"layerDefinition.source",write:{overridePolicy:S}}})],l.prototype,"source",null),a([n()],l.prototype,"sourceJSON",void 0),a([n({type:se,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],l.prototype,"spatialReference",void 0),a([n({value:null,json:{type:[M],write:{target:"subLayerIds",allowNull:!0,overridePolicy:S}}})],l.prototype,"sublayers",null),a([Be("sublayers")],l.prototype,"castSublayers",null),a([x("sublayers")],l.prototype,"writeSublayers",null),a([n({type:String,json:{name:"name",write:{overridePolicy:D}}})],l.prototype,"title",void 0),a([b("service","title",["name","layerDefinition.name"])],l.prototype,"readTitle",null),a([n({type:String})],l.prototype,"typeIdField",void 0),a([n({json:{read:!1},readOnly:!0,value:"sublayer"})],l.prototype,"type",void 0),a([b("typeIdField",["layerDefinition.typeIdField"])],l.prototype,"readTypeIdField",null),a([n({type:[Qe],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],l.prototype,"types",void 0),a([n({type:String,json:{name:"layerUrl",write:{overridePolicy:B}}})],l.prototype,"url",null),a([n({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:S}}})],l.prototype,"visible",null),a([x("visible")],l.prototype,"writeVisible",null),l=$=a([Q("esri.layers.support.Sublayer")],l);function Ze(y,e){const t=[],r={};return y&&y.forEach(i=>{const s=new l;if(s.read(i,e),r[s.id]=s,i.parentLayerId!=null&&i.parentLayerId!==-1){const o=r[i.parentLayerId];o.sublayers||(o.sublayers=[]),o.sublayers.unshift(s)}else t.unshift(s)}),t}const E=J.ofType(l);function oe(y,e){y&&y.forEach(t=>{e(t),t.sublayers&&t.sublayers.length&&oe(t.sublayers,e)})}const st=y=>{const e=y;let t=class extends e{constructor(...r){super(...r),this.allSublayers=new Je({getCollections:()=>[this.sublayers],getChildrenFunction:i=>i.sublayers}),this.sublayersSourceJSON={2:{},3:{},4:{},5:{},6:{}},this.subtables=null,this.addHandles([X(()=>this.sublayers,(i,s)=>this._handleSublayersChange(i,s),Z),X(()=>this.subtables,(i,s)=>this._handleSublayersChange(i,s),Z)])}destroy(){this.allSublayers.destroy()}readSublayers(r,i){if(!i||!r)return;const{sublayersSourceJSON:s}=this,o=R(i.origin);if(o<2||(s[o]={context:i,visibleLayers:r.visibleLayers||s[o].visibleLayers,layers:r.layers||s[o].layers},o>2))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:u,origin:p}=this.createSublayersForOrigin("web-document"),c=j(this);c.setDefaultOrigin(p),this._set("sublayers",new E(u)),c.setDefaultOrigin("user")}findSublayerById(r){return this.allSublayers.find(i=>i.id===r)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(r){let i;const s=R(r==="web-document"?"web-map":r);let o=2,u=this.sublayersSourceJSON[2].layers,p=this.sublayersSourceJSON[2].context,c=null;const m=[3,4,5].filter(d=>d<=s);for(const d of m){const f=this.sublayersSourceJSON[d];Ue(f.layers)&&(o=d,u=f.layers,p=f.context,f.visibleLayers&&(c={visibleLayers:f.visibleLayers,context:f.context}))}const I=[3,4,5].filter(d=>d>o&&d<=s);let g=null;for(const d of I){const{layers:f,visibleLayers:T,context:P}=this.sublayersSourceJSON[d];f&&(g={layers:f,context:P},i??=d),T&&(c={visibleLayers:T,context:P})}const w=Ze(u,p),F=new Map,_=new Set;if(g)for(const d of g.layers)F.set(d.id,d);if(c?.visibleLayers)for(const d of c.visibleLayers)_.add(d);return oe(w,d=>{g&&d.read(F.get(d.id),g.context),c&&d.read({defaultVisibility:_.has(d.id)},c.context)}),{origin:ee(o),originWithPartialOverrides:i?ee(i):null,sublayers:new E({items:w})}}read(r,i){super.read(r,i),this.readSublayers(r,i)}_handleSublayersChange(r,i){i&&(i.forEach(s=>{s.parent=null,s.layer=null}),this.removeHandles("sublayers-owner")),r&&(r.forEach(s=>{s.parent=this,s.layer=this}),this.addHandles([r.on("after-add",({item:s})=>{s.parent=this,s.layer=this}),r.on("after-remove",({item:s})=>{s.parent=null,s.layer=null})],"sublayers-owner"),this.type==="tile"&&this.addHandles(r.on("before-changes",s=>{O.getLogger("esri.layers.TileLayer").error(new h("tilelayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),s.preventDefault()}),"sublayers-owner"))}};return a([n({readOnly:!0})],t.prototype,"allSublayers",void 0),a([n({readOnly:!0,type:J.ofType(l)})],t.prototype,"serviceSublayers",void 0),a([n({value:null,type:E,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],t.prototype,"sublayers",void 0),a([n({readOnly:!0})],t.prototype,"sublayersSourceJSON",void 0),a([n({type:E,json:{read:{source:"tables"}}})],t.prototype,"subtables",void 0),t=a([Q("esri.layers.mixins.SublayersOwner")],t),t};export{rt as h,l,st as m};
