import{cR as O}from"./index-Bkom2Sdc.js";import{c as V}from"./PixelBlock-CD7TNHcL.js";function P({distance:s,yaw:e,horizontalFieldOfView:o,pitch:i,verticalFieldOfView:f,origin:n=[0,0,0],positionLength:t=25}){const h=t-1,w=t*t,g=new Float32Array(2*w),p=new Float64Array(3*w),m=new Float32Array(3*w).fill(0),a=new Uint32Array(h**2*6);for(let r=0,c=0;r<w;r++){const A=Math.floor(r/t),b=r%t,d=1-b/h,y=A/h,F=2*r,l=3*r;g[F]=d,g[F+1]=y;const v=i+f/2-y*f,M=O(e-o/2+d*o),D=O(v),L=Math.sin(D),x=Math.cos(D),u=[L*Math.sin(M),Math.cos(M)*L,-x];p[l]=n[0]+s*u[0],p[l+1]=n[1]+s*u[1],p[l+2]=n[2]+s*u[2],m[l]=-u[0],m[l+1]=-u[1],m[l+2]=-u[2],A!==h&&b!==h&&(a[c++]=r,a[c++]=r+t,a[c++]=r+t+1,a[c++]=r,a[c++]=r+t+1,a[c++]=r+1)}return{result:{position:p,uv:g,normal:m,faces:a},transferList:[p.buffer,g.buffer,m.buffer,a?.buffer]}}function R(s){const e=V.fromJSON(s);e.premultiplyAlpha=!0;const o=e.getAsRGBA(),i=e.width,f=e.height,n=new ImageData(o,i,f);return{result:n,transferList:[n.data.buffer]}}function j({oldDistance:s,newDistance:e,position:o,origin:i=[0,0,0]}){const f=o.length/3;for(let n=0;n<f;n+=3){const t=3*n;o[t]=i[0]+(o[t]-i[0])*(e/s),o[t+1]=i[1]+(o[t+1]-i[1])*(e/s),o[t+2]=i[2]+(o[t+2]-i[2])*(e/s)}return{result:o,transferList:[o.buffer]}}export{R as convertPixelBlockToImageData,P as getFacesWithVertexAttributes,j as recomputePositions};
