const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/CatalogLayer-fYk32S3K.js","assets/index-C2z3vZ9k.js","assets/index-DaKHjF4b.css","assets/utils-D9T8729Q.js","assets/ClassBreaksDefinition-BlEYQF17.js","assets/FeatureLayerSource-BbTXeXfz.js","assets/MeshLocalVertexSpace-uNUkTZgz.js","assets/meshVertexSpaceUtils-U6J9mgCD.js","assets/External-Bu-UrccC.js","assets/applyEditsUtils-CGZAJTZj.js","assets/MeshTransform-KvsOM_nY.js","assets/mat4f64-q_b6UJoq.js","assets/quat-DvekskYU.js","assets/mat3f64-B5o_lm6j.js","assets/quatf64-aQ5IuZRd.js","assets/axisAngleDegrees-mQYP6ZH9.js","assets/editingSupport-BwnDPjiC.js","assets/clientSideDefaults-BuFZO1Ac.js","assets/QueryEngineCapabilities-CsRUnGk7.js","assets/QueryTask-CoccR26o.js","assets/executeForIds-DwobaMPS.js","assets/featureConversionUtils-BHcwWift.js","assets/OrientedImageryLayer-DvCBukYQ.js"])))=>i.map(i=>d[i]);
import{av as m,aw as V,ax as O,ay as y,az as k,aA as f,aB as K,aC as u,aD as z,aE as H,aF as j,al as E,aG as q}from"./index-C2z3vZ9k.js";import{i as w}from"./originUtils-av9iyGZ9.js";import{P as Q,w as g,d as W,v as X,$ as Z,p as x,f as aa,I as N,m as L}from"./utils-C7umzGDt.js";import{n as ea,l as ta}from"./fetchService-DEjjtKAE.js";import"./saveUtils-CiwNsJLd.js";const T="Feature Service",v="feature-layer-utils",ra=`${v}-save`,na=`${v}-save-as`,p=`${v}-saveall`,d=`${v}-saveall-as`;function S(a){return{isValid:q(a)&&(!("dynamicDataSource"in a)||!a.dynamicDataSource),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}function b(a,e){const t=k(a,"portal-item");return e!=null&&e.isTable&&(t.layerContainerType="tables"),t}function R(a){const e=b(a),t=b(a);return t.layerContainerType="tables",{forLayers:e,forTables:t}}function D(a){const e=[],t=[];for(const{layer:r,layerJSON:o}of a)sa(r)?t.push(o):e.push(o);return{layers:e,tables:t}}function sa(a,e){return a.isTable}function G(a){return D([a])}async function J(a,e){return/\/\d+\/?$/.test(a.url)?G(e[0]):C(e,a)}async function C(a,e){if(a.reverse(),!e)return D(a);const t=await oa(e,a);for(const r of a)U(r.layer,r.layerJSON,t);return ca(t,a),t}async function oa(a,e){let t=await a.fetchData("json");if(la(t)&&!K(a,u.HOSTED_SERVICE))return t;t||(t={}),ia(t);const{layer:{url:r,customParameters:o,apiKey:s}}=e[0];return await ua(t,{url:r??"",customParameters:o,apiKey:s},e.map((n=>n.layer.layerId))),t}function la(a){return!!(a&&Array.isArray(a.layers)&&Array.isArray(a.tables))}function ia(a){a.layers||(a.layers=[]),a.tables||(a.tables=[])}function ca(a,e){const t=[],r=[];for(const{layer:o}of e){const{isTable:s,layerId:n}=o;s?r.push(n):t.push(n)}P(a.layers,t),P(a.tables,r)}function P(a,e){if(a.length<2)return;const t=[];for(const{id:r}of a)t.push(r);H(t.sort($),e.slice().sort($))&&a.sort(((r,o)=>{const s=e.indexOf(r.id),n=e.indexOf(o.id);return s<n?-1:s>n?1:0}))}function $(a,e){return a<e?-1:a>e?1:0}async function ua(a,e,t){const{url:r,customParameters:o,apiKey:s}=e,{serviceJSON:n,layersJSON:l}=await ea(r,{customParameters:o,apiKey:s}),i=_(a.layers,n.layers,t),c=_(a.tables,n.tables,t);a.layers=i.itemResources,a.tables=c.itemResources;const h=[...i.added,...c.added],B=l?[...l.layers,...l.tables]:[];await ya(a,h,r,B)}function _(a,e,t){const r=j(a,e,((s,n)=>s.id===n.id));a=a.filter((s=>!r.removed.some((n=>n.id===s.id))));const o=r.added;return o.forEach((({id:s})=>{a.push({id:s})})),{itemResources:a,added:o.filter((({id:s})=>!t.includes(s)))}}async function ya(a,e,t,r){const o=await fa(e),s=e.map((({id:n,type:l})=>new(o.get(l))({url:t,layerId:n,sourceJSON:r.find((({id:i})=>i===n))})));await Promise.allSettled(s.map((n=>n.load()))),s.forEach((n=>{const{layerId:l,loaded:i,defaultPopupTemplate:c}=n;if(!i||c==null)return;const h={id:l,popupInfo:c.toJSON()};U(n,n.operationalLayerType==="ArcGISFeatureLayer"?h:{...h,layerType:n.operationalLayerType},a)}))}async function fa(a){const e=[];a.forEach((({type:o})=>{switch(ta(o)){case"CatalogLayer":e.push(E(()=>import("./CatalogLayer-fYk32S3K.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])).then((s=>s.default)));break;case"FeatureLayer":e.push(E(()=>import("./index-C2z3vZ9k.js").then(s=>s.yh),__vite__mapDeps([1,2])).then((s=>s.default)));break;case"OrientedImageryLayer":e.push(E(()=>import("./OrientedImageryLayer-DvCBukYQ.js"),__vite__mapDeps([22,1,2])).then((s=>s.default)))}}));const t=await Promise.all(e),r=new Map;return a.forEach((({type:o},s)=>{r.set(o,t[s])})),r}function U(a,e,t){a.isTable?A(t.tables,e):A(t.layers,e)}function A(a,e){const t=a.findIndex((({id:r})=>r===e.id));t===-1?a.push(e):a[t]=e}function F(a,e){if(!a.length)throw new y(`${e}:missing-parameters`,"'layers' array should contain at least one feature layer")}function pa(a,e){const t=a.map((r=>r.portalItem.id));if(new Set(t).size>1)throw new y(`${e}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item")}function M(a,e){const t=a.map((r=>r.layerId));if(new Set(t).size!==t.length)throw new y(`${e}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service")}async function da(a){F(a,p),await Promise.all(a.map((e=>e.load())));for(const e of a)x(e,p,S),aa({layer:e,itemType:T,errorNamePrefix:p});pa(a,p),M(a,p)}function ma(a){var e,t,r,o;if(!("layerType"in a))return!!((e=a.charts)!=null&&e.length);switch(a.layerType){case"OrientedImageryLayer":return!!((t=a.charts)!=null&&t.length);case"SubtypeGroupLayer":return!!a.layers.some((s=>{var n;return!!((n=s.charts)!=null&&n.length)}));case"SubtypeGroupTable":return!!a.tables.some((s=>{var n;return!!((n=s.charts)!=null&&n.length)}));case"CatalogLayer":return!!((o=(r=a.footprintLayer)==null?void 0:r.charts)!=null&&o.length)}}function I(a,e){let t=0,r=0,o=0,s=0;for(const n of[...e.layers,...e.tables])if(ma(n)&&s++,"layerType"in n)switch(n.layerType){case"OrientedImageryLayer":t++;break;case"SubtypeGroupLayer":r++;break;case"SubtypeGroupTable":o++}f(a,u.ORIENTED_IMAGERY_LAYER,t>0),f(a,u.SUBTYPE_GROUP_LAYER,r>0),f(a,u.SUBTYPE_GROUP_TABLE,o>0),f(a,u.CHARTS,s>0)}function Y(a,e,t){z(e,u.METADATA),f(e,u.MULTI_LAYER,a.length>1),f(e,u.SINGLE_LAYER,a.length===1),f(e,u.TABLE,t.tables.length>0&&t.layers.length===0),I(e,t)}async function ha(a,e,t){I(e,t)}async function wa(a,e,t){const{url:r,layerId:o,title:s,fullExtent:n,isTable:l}=a,i=m(r);e.url=((i==null?void 0:i.serverType)==="FeatureServer"?r:`${r}/${o}`)??null,e.title||(e.title=s),e.extent=null,l||n==null||(e.extent=await O(n)),Y([a],e,t)}function ba(a,e){for(const s of a){const n=s.parsedUrl.path,l=m(n);if(!(l==null?void 0:l.url.path))throw new y(`${e}:invalid-parameters`,L(s,`has unsupported url pattern: ${n}`),{layer:s});const c=l==null?void 0:l.serverType;if(c!=="FeatureServer"&&c!=="MapServer")throw new y(`${e}:invalid-parameters`,L(s,`has unsupported server type: ${c}`),{layer:s});if(c==="MapServer"&&a.length>1)throw new y(`${e}:invalid-parameters`,"Only one layer or table in a map service can be saved")}const t=m(a[0].parsedUrl.path),r=t==null?void 0:t.url.path;if(!a.every((s=>{const n=m(s.parsedUrl.path);return(n==null?void 0:n.url.path)===r})))throw new y(`${e}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service")}async function Ta(a){F(a,d),await Promise.all(a.map((e=>e.load())));for(const e of a)x(e,d,S);ba(a,d),M(a,d)}function va(a,e){I(a,e),N(a)}async function Sa(a,e,t){let r=0;for(const{isTable:n}of a)n||r++;const o=a[0].parsedUrl.path,s=m(o);if(e.url=(s==null?void 0:s.serverType)==="FeatureServer"?s.url.path:o,e.title||(e.title=s.title),e.extent=null,r>0){const n=a.map((l=>l.fullExtent)).filter(V).reduce(((l,i)=>l.clone().union(i)));n&&(e.extent=await O(n))}Y(a,e,t),N(e)}async function _a(a,e){return Q({layer:a,itemType:T,validateLayer:S,createJSONContext:t=>b(t,a),createItemData:(t,r)=>J(r,[t]),errorNamePrefix:ra,setItemProperties:ha},e)}async function Aa(a,e){await da(a);const t=a[0].portalItem,r=R(t),o=await Promise.all(a.map((n=>g(n,n.isTable?r.forTables:r.forLayers,e)))),s=await J(t,a.map(((n,l)=>({layer:n,layerJSON:o[l]}))));return va(t,s),await t.update({data:s}),await Promise.all(a.slice(1).map((n=>n.portalItem.reload()))),w(r.forLayers),w(r.forTables),t.clone()}async function Oa(a,e,t){return Z({layer:a,itemType:T,validateLayer:S,createJSONContext:r=>b(r,a),createItemData:(r,o)=>Promise.resolve(G(r)),errorNamePrefix:na,newItem:e,setItemProperties:wa},t)}async function ga(a,e,t){await Ta(a);const r=W({itemType:T,errorNamePrefix:d,newItem:e}),o=R(r),s=await Promise.all(a.map((l=>g(l,l.isTable?o.forTables:o.forLayers,t)))),n=await C(a.map(((l,i)=>({layer:l,layerJSON:s[i]}))));await Sa(a,r,n),await X(r,n,t);for(const l of a)l.portalItem=r.clone();return w(o.forLayers),w(o.forTables),r}export{_a as save,Aa as saveAll,ga as saveAllAs,Oa as saveAs};
