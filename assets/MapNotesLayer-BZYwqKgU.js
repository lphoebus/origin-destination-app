import{kY as F,kZ as B,hF as k,hu as z,hs as W,ht as A,hv as K,aY as h,cn as O,hN as Y,hJ as q,hL as v,lD as H,ex as Q,cb as w,gC as C,lE as N,l5 as b,jd as M,lF as $,c7 as U,b4 as X,bT as Z,c1 as V,c3 as ee,im as te,io as re,gh as ie,co as le,fg as I,g_ as L,it as oe,bN as ae,lG as _,hy as ne,b8 as i,ba as a,eC as c,eD as se,bb as D}from"./index-Bkom2Sdc.js";import{n as ye}from"./objectIdUtils-BmFjqQA3.js";const pe=Symbol("isMapNotesGraphicOriginSymbol");var T;class ue extends F{get[(T=pe,B)](){return this.layer}constructor(e,r){super(),this[T]=!0,this.type="map-notes",this.layer=e,this.sublayer=r}get id(){return`${this.layer.id}:__${this.sublayer.id}__`}}function g(t){return t.featureCollectionType==="markup"||t.layers.some(e=>e.layerDefinition.visibilityField!=null||!E(e))}function E({layerDefinition:t,featureSet:e}){const r=t.geometryType??e.geometryType;return J.find(l=>r===l.geometryTypeJSON&&t.drawingInfo?.renderer?.symbol?.type===l.identifyingSymbol.type)}function R(){return new ae({xmin:-180,ymin:-90,xmax:180,ymax:90})}const x=new I({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),de=new I({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0,length:255}),J=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:new Y().toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:new q().toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:new v().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:new v().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:new H().toJSON()}];let o=class extends k(z(W(A(K(ne))))){constructor(t){super(t),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=h.WGS84,this.sublayers=new O(J.map(e=>new u({id:e.id,layerId:e.layerId,title:e.title,layer:this}))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(t,e,r){return{operations:{supportsMapNotesEditing:!g(e)&&r?.origin!=="portal-item"}}}readFeatureCollections(t,e,r){if(!g(e))return null;const l=e.layers.map(s=>{const n=new Q;return n.read(s,r),n});return new O({items:l})}readLegacyfeatureCollectionJSON(t,e){return g(e)?w(e.featureCollection):null}get fullExtent(){const t=this.spatialReference,e=C();return this.sublayers!=null?this.sublayers.forEach(({fullBounds:r})=>r!=null?N(e,r,e):e,e):this.featureCollectionJSON?.layers.some(r=>r.layerDefinition.extent)&&this.featureCollectionJSON.layers.forEach(r=>{const l=b(r.layerDefinition.extent,t).geometry;l!=null&&N(e,l,e)}),$(e,_)?b(R(),t).geometry:M(e,t)}readMinScale(t,e){for(const r of e.layers)if(r.layerDefinition.minScale!=null)return r.layerDefinition.minScale;return 0}readMaxScale(t,e){for(const r of e.layers)if(r.layerDefinition.maxScale!=null)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(t,e){return e.layers.length?h.fromJSON(e.layers[0].layerDefinition.spatialReference):h.WGS84}readSublayers(t,e,r){if(g(e))return null;const l=[];let s=e.layers.reduce((n,y)=>Math.max(n,y.layerDefinition.id??-1),-1)+1;for(const n of e.layers){const{layerDefinition:y,featureSet:p}=n,m=y.id??s++,d=E(n);if(d!=null){const f=new u({id:d.id,title:y.name,layerId:m,layer:this,graphics:p.features.map(({geometry:S,symbol:j,attributes:G,popupInfo:P})=>U.fromJSON({attributes:G,geometry:S,symbol:j,popupTemplate:P}))});l.push(f)}}return new O(l)}writeSublayers(t,e,r,l){const{minScale:s,maxScale:n}=this;if(t==null)return;const y=t.some(d=>d.graphics.length>0);if(!this.capabilities.operations.supportsMapNotesEditing)return void(y&&l?.messages?.push(new X("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer")));const p=[];let m=this.spatialReference.toJSON();e:for(const d of t)for(const f of d.graphics)if(f.geometry!=null){m=f.geometry.spatialReference.toJSON();break e}for(const d of J){const f=t.find(S=>d.id===S.id);this._writeMapNoteSublayer(p,f,d,s,n,m,l)}Z("featureCollection.layers",p,e)}get textLayer(){return this._findSublayer("textLayer")}load(t){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},t)),Promise.resolve(this)}read(t,e){"featureCollection"in t&&(t=w(t),Object.assign(t,t.featureCollection)),super.read(t,e)}async beforeSave(){if(this.sublayers==null)return;let t=null;const e=[];for(const l of this.sublayers)for(const s of l.graphics)if(s.geometry!=null){const n=s.geometry;t?V(n.spatialReference,t)||(ee(n.spatialReference,t)||te()||await re(),s.geometry=ie(n,t)):t=n.spatialReference,e.push(s)}const r=await le(e.map(l=>l.geometry));e.forEach((l,s)=>l.geometry=r[s])}_findSublayer(t){return this.sublayers==null?null:this.sublayers?.find(e=>e.id===t)??null}_writeMapNoteSublayer(t,e,r,l,s,n,y){const p=[];if(e!=null){for(const m of e.graphics)this._writeMapNote(p,m,r.geometryType,y);this._normalizeObjectIds(p,x),t.push({layerDefinition:{name:e.title,drawingInfo:{renderer:{type:"simple",symbol:w(r.identifyingSymbol)}},id:e.layerId,geometryType:r.geometryTypeJSON,minScale:l,maxScale:s,objectIdField:"OBJECTID",fields:[x.toJSON(),de.toJSON()],spatialReference:n},featureSet:{features:p,geometryType:r.geometryTypeJSON}})}}_writeMapNote(t,e,r,l){if(e==null)return;const{geometry:s,symbol:n,popupTemplate:y}=e;if(s==null)return;if(s.type!==r)return void l?.messages?.push(new L("map-notes-layer:invalid-geometry-type",`Geometry "${s.type}" cannot be saved in "${r}" layer`,{graphic:e}));if(n==null)return void l?.messages?.push(new L("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:e}));const p={attributes:{...e.attributes},geometry:s.toJSON(),symbol:n.toJSON()};y!=null&&(p.popupInfo=y.toJSON()),t.push(p)}_normalizeObjectIds(t,e){const r=e.name;let l=ye(r,t)+1;const s=new Set;for(const n of t){n.attributes||(n.attributes={});const{attributes:y}=n;(y[r]==null||s.has(y[r]))&&(y[r]=l++),s.add(y[r])}}};i([a({readOnly:!0})],o.prototype,"capabilities",void 0),i([c(["portal-item","web-map"],"capabilities",["layers"])],o.prototype,"readCapabilities",null),i([a({readOnly:!0})],o.prototype,"featureCollections",void 0),i([c(["web-map","portal-item"],"featureCollections",["layers"])],o.prototype,"readFeatureCollections",null),i([a({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],o.prototype,"featureCollectionJSON",void 0),i([c(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],o.prototype,"readLegacyfeatureCollectionJSON",null),i([a({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],o.prototype,"featureCollectionType",void 0),i([a({readOnly:!0})],o.prototype,"fullExtent",null),i([a({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:this.featureCollectionJSON!=null}}}}}}})],o.prototype,"legendEnabled",void 0),i([a({type:["show","hide","hide-children"]})],o.prototype,"listMode",void 0),i([a({type:Number,nonNullable:!0,json:{write:!1}})],o.prototype,"minScale",void 0),i([c(["web-map","portal-item"],"minScale",["layers"])],o.prototype,"readMinScale",null),i([a({type:Number,nonNullable:!0,json:{write:!1}})],o.prototype,"maxScale",void 0),i([c(["web-map","portal-item"],"maxScale",["layers"])],o.prototype,"readMaxScale",null),i([a({readOnly:!0})],o.prototype,"multipointLayer",null),i([a({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],o.prototype,"operationalLayerType",void 0),i([a({readOnly:!0})],o.prototype,"pointLayer",null),i([a({readOnly:!0})],o.prototype,"polygonLayer",null),i([a({readOnly:!0})],o.prototype,"polylineLayer",null),i([a({type:h})],o.prototype,"spatialReference",void 0),i([c(["web-map","portal-item"],"spatialReference",["layers"])],o.prototype,"readSpatialReference",null),i([a({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],o.prototype,"sublayers",void 0),i([c("web-map","sublayers",["layers"])],o.prototype,"readSublayers",null),i([se("web-map","sublayers")],o.prototype,"writeSublayers",null),i([a({readOnly:!0})],o.prototype,"textLayer",null),i([a()],o.prototype,"title",void 0),i([a({readOnly:!0,json:{read:!1}})],o.prototype,"type",void 0),o=i([D("esri.layers.MapNotesLayer")],o);let u=class extends oe{constructor(t){super(t),this.visibilityMode="inherited"}initialize(){for(const t of this.graphics)t.sourceLayer=this.layer;this.graphics.on("after-add",t=>{t.item.sourceLayer=this.layer,t.item.origin=this.graphicOrigin}),this.graphics.on("after-remove",t=>{t.item.sourceLayer=null,t.item.origin=null})}get fullExtent(){const t=this.layer?.spatialReference,e=this.fullBounds;return t?e==null?b(R(),t).geometry:M(e,t):null}get fullBounds(){const t=this.layer?.spatialReference;if(!t)return null;const e=C();return this.graphics.forEach(r=>{const l=r.geometry!=null?b(r.geometry,t).geometry:null;l!=null&&N(e,l.type==="point"?l:l.extent,e)}),$(e,_)?null:e}get graphicOrigin(){return new ue(this.layer,this)}get sublayers(){return this.graphics}};i([a({readOnly:!0})],u.prototype,"fullExtent",null),i([a({readOnly:!0})],u.prototype,"fullBounds",null),i([a({readOnly:!0})],u.prototype,"graphicOrigin",null),i([a({readOnly:!0})],u.prototype,"sublayers",null),i([a()],u.prototype,"layer",void 0),i([a()],u.prototype,"layerId",void 0),i([a({readOnly:!0})],u.prototype,"visibilityMode",void 0),u=i([D("esri.layers.MapNotesLayer.MapNotesSublayer")],u);const fe=o;export{fe as default};
