import{aH as Q,j1 as W,b4 as i,lS as Z,cr as ee,lR as te,dv as u,qf as _,fi as re,qg as oe,jI as ne,cg as V,qh as R,qi as se,qj as ae,jE as ie,gV as ue,no as k,iR as B,bf as v,kJ as x}from"./index-Bkom2Sdc.js";import{v as le}from"./quat-B12ICwBr.js";import{e as ce}from"./quatf64-aQ5IuZRd.js";import{y as z,S as fe,L as de,J as pe,j as me,C as he,v as Te,w as we,I as ge,o as C,T as G,g as be,M as ye,O as xe,V as _e}from"./BufferView-w_yOhrVp.js";import{n as Se,e as Oe,r as Ne,t as ve}from"./resourceUtils-BfK3vLCY.js";function N(s,e){const r=s.count;e||(e=new s.TypedArrayConstructor(r));for(let n=0;n<r;n++)e[n]=s.get(n);return e}Object.freeze(Object.defineProperty({__proto__:null,makeDense:N},Symbol.toStringTag,{value:"Module"}));function Ce(s={}){return{color:[1,1,1],opacity:1,alphaMode:"OPAQUE",alphaCutoff:.5,doubleSided:!1,castShadows:!0,receiveShadows:!0,receiveAmbientOcclusion:!0,colorTexture:null,normalTexture:null,occlusionTexture:null,emissiveTexture:null,metallicRoughnessTexture:null,colorTextureTransform:null,normalTextureTransform:null,occlusionTextureTransform:null,emissiveTextureTransform:null,metallicRoughnessTextureTransform:null,emissiveFactor:[0,0,0],metallicFactor:1,roughnessFactor:1,colorMixMode:"multiply",...s}}function Re(s,e={}){return{data:s,parameters:{wrap:{s:10497,t:10497,...e.wrap},noUnpackFlip:!0,mipmap:!1,...e}}}let $;function Ae(){return $??=(async()=>{const{default:s}=await Q(()=>import("./draco_mesh_decoder-D5bxxV4w.js"),[]);return await s({locateFile:e=>W(`esri/libs/dracoMeshDecoder/${e}`)})})(),$}let P=class{constructor(e){this._data=e,this._offset4=0,this._dataUint32=new Uint32Array(this._data,0,Math.floor(this._data.byteLength/4))}readUint32(){const e=this._offset4;return this._offset4+=1,this._dataUint32[e]}readUint8Array(e){const r=4*this._offset4;return this._offset4+=e/4,new Uint8Array(this._data,r,e)}remainingBytes(){return this._data.byteLength-4*this._offset4}};const K={baseColorFactor:[1,1,1,1],metallicFactor:1,roughnessFactor:1},Ee={pbrMetallicRoughness:K,emissiveFactor:[0,0,0],alphaMode:"OPAQUE",alphaCutoff:.5,doubleSided:!1},Ie={ESRI_externalColorMixMode:"tint",ESRI_receiveShadows:!0,ESRI_receiveAmbientOcclusion:!0},j=(s={})=>{const e={...K,...s.pbrMetallicRoughness},r=Le({...Ie,...s.extras});return{...Ee,...s,pbrMetallicRoughness:e,extras:r}};function Le(s){switch(s.ESRI_externalColorMixMode){case"multiply":case"tint":case"ignore":case"replace":break;default:s.ESRI_externalColorMixMode="tint"}return s}const Me={magFilter:9729,minFilter:9987,wrapS:10497,wrapT:10497},Fe=s=>({...Me,...s});function De(s){let e,r;return s.replace(/^(.*\/)?([^/]*)$/,(n,o,t)=>(e=o||"",r=t||"","")),{dirPart:e,filePart:r}}const S={MAGIC:1179937895,CHUNK_TYPE_JSON:1313821514,CHUNK_TYPE_BIN:5130562};class T{constructor(e,r,n,o){if(this._context=e,this.uri=r,this.json=n,this._glbBuffer=o,this._bufferLoaders=new Map,this._textureLoaders=new Map,this._dracoBuffersSize=0,this._textureCache=new Map,this._materialCache=new Map,this._nodeParentMap=new Map,this._nodeTransformCache=new Map,this._supportedExtensions=["KHR_texture_basisu","KHR_texture_transform","KHR_draco_mesh_compression"],this._baseUri=De(this.uri).dirPart,this._checkVersionSupported(),this._checkRequiredExtensionsSupported(),n.scenes==null)throw new i("gltf-loader-unsupported-feature","Scenes must be defined.");if(n.meshes==null)throw new i("gltf-loader-unsupported-feature","Meshes must be defined");if(n.nodes==null)throw new i("gltf-loader-unsupported-feature","Nodes must be defined.");this._computeNodeParents()}static async load(e,r,n){if(Z(r)){const a=ee(r);if(a&&a.mediaType!=="model/gltf-binary")try{const c=JSON.parse(a.isBase64?atob(a.data):a.data);return new T(e,r,c)}catch{}const l=te(r);if(T._isGLBData(l))return this._fromGLBData(e,r,l)}if(je.test(r)||n?.expectedType==="gltf"){const a=await e.loadJSON(r,n);return new T(e,r,a)}const o=await e.loadBinary(r,n);if(T._isGLBData(o))return this._fromGLBData(e,r,o);if(He.test(r)||n?.expectedType==="glb")throw new i("gltf-loader-invalid-glb","This is not a valid glb file.");const t=await e.loadJSON(r,n);return new T(e,r,t)}static _isGLBData(e){if(e==null)return!1;const r=new P(e);return r.remainingBytes()>=4&&r.readUint32()===S.MAGIC}static async _fromGLBData(e,r,n){const o=await T._parseGLBData(n);return new T(e,r,o.json,o.binaryData)}static async _parseGLBData(e){const r=new P(e);if(r.remainingBytes()<12)throw new i("gltf-loader-error","glb binary data is insufficiently large.");const n=r.readUint32(),o=r.readUint32(),t=r.readUint32();if(n!==S.MAGIC)throw new i("gltf-loader-error","Magic first 4 bytes do not fit to expected glb value.");if(e.byteLength<t)throw new i("gltf-loader-error","glb binary data is smaller than header specifies.");if(o!==2)throw new i("gltf-loader-unsupported-feature","An unsupported glb container version was detected. Only version 2 is supported.");let a,l,c=0;for(;r.remainingBytes()>=8;){const d=r.readUint32(),p=r.readUint32();if(c===0){if(p!==S.CHUNK_TYPE_JSON)throw new i("gltf-loader-error","First glb chunk must be JSON.");if(d<0)throw new i("gltf-loader-error","No JSON data found.");a=await Se(r.readUint8Array(d))}else if(c===1){if(p!==S.CHUNK_TYPE_BIN)throw new i("gltf-loader-unsupported-feature","Second glb chunk expected to be BIN.");l=r.readUint8Array(d)}else v.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] More than 2 glb chunks detected. Skipping.");c+=1}if(!a)throw new i("gltf-loader-error","No glb JSON chunk detected.");return{json:a,binaryData:l}}async getBuffer(e,r){const n=this.json.buffers[e];if(n.uri==null){if(this._glbBuffer==null)throw new i("gltf-loader-error","glb buffer not present");return this._glbBuffer}const o=await this._getBufferLoader(e,r);if(o.byteLength!==n.byteLength)throw new i("gltf-loader-error","Buffer byte lengths should match.");return o}async _getBufferLoader(e,r){const n=this._bufferLoaders.get(e);if(n)return n;const o=this.json.buffers[e].uri,t=this._context.loadBinary(this._resolveUri(o),r).then(a=>new Uint8Array(a));return this._bufferLoaders.set(e,t),t}_validateAccessor(e){if(!this.json.accessors)throw new i("gltf-loader-unsupported-feature","Accessors missing.");const r=this.json.accessors[e];if(r.type in["MAT2","MAT3","MAT4"])throw new i("gltf-loader-unsupported-feature",`AttributeType ${r.type} is not supported`);return r}_getComponentInfo(e,r){const n=Ge[e.type],o=r?.componentType||e.componentType,t=$e[o];return{componentType:o,componentCount:n,componentByteSize:t,denseByteStride:n*t}}getDracoAccessor(e,r){const n=this._validateAccessor(e),o=r.accessorInfos.get(e),{componentType:t,componentCount:a,componentByteSize:l,denseByteStride:c}=this._getComponentInfo(n,o);return{raw:r.data.buffer,byteStride:c,byteOffset:r.data.byteOffset+(o?.byteOffset||0),entryCount:o?.count??n.count,isDenselyPacked:!0,componentCount:a,componentByteSize:l,componentType:t,min:n.min,max:n.max,normalized:!!n.normalized}}async getAccessor(e,r){const n=this._validateAccessor(e);if(n?.bufferView==null)throw new i("gltf-loader-unsupported-feature","Some accessor does not specify a bufferView.");const{componentCount:o,componentByteSize:t,denseByteStride:a}=this._getComponentInfo(n),l=this.json.bufferViews[n.bufferView],c=await this.getBuffer(l.buffer,r),d=l.byteStride||a;return{raw:c.buffer,byteStride:d,byteOffset:c.byteOffset+(l.byteOffset||0)+(n.byteOffset||0),entryCount:n.count,isDenselyPacked:d===a,componentCount:o,componentByteSize:t,componentType:n.componentType,min:n.min,max:n.max,normalized:!!n.normalized}}async getIndexData(e,r,n){if(e.indices==null)return;const o=e.indices,t=n?this.getDracoAccessor(o,n):await this.getAccessor(o,r);if(t.isDenselyPacked)switch(t.componentType){case u.UNSIGNED_BYTE:return new Uint8Array(t.raw,t.byteOffset,t.entryCount);case u.UNSIGNED_SHORT:return new Uint16Array(t.raw,t.byteOffset,t.entryCount);case u.UNSIGNED_INT:return new Uint32Array(t.raw,t.byteOffset,t.entryCount)}else switch(t.componentType){case u.UNSIGNED_BYTE:return N(h(ge,t));case u.UNSIGNED_SHORT:return N(h(we,t));case u.UNSIGNED_INT:return N(h(Te,t))}}async getPositionData(e,r,n){if(e.attributes.POSITION==null)throw new i("gltf-loader-unsupported-feature","No POSITION vertex data found.");const o=e.attributes.POSITION,t=n?this.getDracoAccessor(o,n):await this.getAccessor(o,r);if(t.componentType!==u.FLOAT)throw new i("gltf-loader-unsupported-feature","Expected type FLOAT for POSITION vertex attribute, but found "+_(u,t.componentType));if(t.componentCount!==3)throw new i("gltf-loader-unsupported-feature","POSITION vertex attribute must have 3 components, but found "+t.componentCount.toFixed());return h(C,t)}async getNormalData(e,r,n){if(e.attributes.NORMAL==null)throw new i("gltf-loader-error","No NORMAL vertex data found.");const o=e.attributes.NORMAL,t=n?this.getDracoAccessor(o,n):await this.getAccessor(o,r);if(t.componentType!==u.FLOAT)throw new i("gltf-loader-unsupported-feature","Expected type FLOAT for NORMAL vertex attribute, but found "+_(u,t.componentType));if(t.componentCount!==3)throw new i("gltf-loader-unsupported-feature","NORMAL vertex attribute must have 3 components, but found "+t.componentCount.toFixed());return h(C,t)}async getTangentData(e,r,n){if(e.attributes.TANGENT==null)throw new i("gltf-loader-error","No TANGENT vertex data found.");const o=e.attributes.TANGENT,t=n?this.getDracoAccessor(o,n):await this.getAccessor(o,r);if(t.componentType!==u.FLOAT)throw new i("gltf-loader-unsupported-feature","Expected type FLOAT for TANGENT vertex attribute, but found "+_(u,t.componentType));if(t.componentCount!==4)throw new i("gltf-loader-unsupported-feature","TANGENT vertex attribute must have 4 components, but found "+t.componentCount.toFixed());return h(G,t)}async getTextureCoordinates(e,r,n){if(e.attributes.TEXCOORD_0==null)throw new i("gltf-loader-error","No TEXCOORD_0 vertex data found.");const o=e.attributes.TEXCOORD_0,t=n?this.getDracoAccessor(o,n):await this.getAccessor(o,r);if(t.componentCount!==2)throw new i("gltf-loader-unsupported-feature","TEXCOORD_0 vertex attribute must have 2 components, but found "+t.componentCount.toFixed());if(t.componentType===u.FLOAT)return h(z,t);if(!t.normalized)throw new i("gltf-loader-unsupported-feature","Integer component types are only supported for a normalized accessor for TEXCOORD_0.");return Pe(t)}async getVertexColors(e,r,n){if(e.attributes.COLOR_0==null)throw new i("gltf-loader-error","No COLOR_0 vertex data found.");const o=e.attributes.COLOR_0,t=n?this.getDracoAccessor(o,n):await this.getAccessor(o,r);if(t.componentCount!==4&&t.componentCount!==3)throw new i("gltf-loader-unsupported-feature","COLOR_0 attribute must have 3 or 4 components, but found "+t.componentCount.toFixed());if(t.componentCount===4){if(t.componentType===u.FLOAT)return h(G,t);if(t.componentType===u.UNSIGNED_BYTE)return h(be,t);if(t.componentType===u.UNSIGNED_SHORT)return h(ye,t)}else if(t.componentCount===3){if(t.componentType===u.FLOAT)return h(C,t);if(t.componentType===u.UNSIGNED_BYTE)return h(xe,t);if(t.componentType===u.UNSIGNED_SHORT)return h(_e,t)}throw new i("gltf-loader-unsupported-feature","Unsupported component type for COLOR_0 attribute: "+_(u,t.componentType))}hasPositions(e){return e.attributes.POSITION!==void 0}hasNormals(e){return e.attributes.NORMAL!==void 0}hasVertexColors(e){return e.attributes.COLOR_0!==void 0}hasTextureCoordinates(e){return e.attributes.TEXCOORD_0!==void 0}hasTangents(e){return e.attributes.TANGENT!==void 0}async getMaterial(e,r,n){let o=e.material?this._materialCache.get(e.material):void 0;if(!o){const t=e.material!=null?j(this.json.materials[e.material]):j(),a=t.pbrMetallicRoughness,l=this.hasVertexColors(e),c=this.getTexture(a.baseColorTexture,r),d=this.getTexture(t.normalTexture,r),p=n?this.getTexture(t.occlusionTexture,r):void 0,m=n?this.getTexture(t.emissiveTexture,r):void 0,f=n?this.getTexture(a.metallicRoughnessTexture,r):void 0,b=e.material!=null?e.material:-1;o={alphaMode:t.alphaMode,alphaCutoff:t.alphaCutoff,color:a.baseColorFactor,doubleSided:!!t.doubleSided,colorTexture:await c,normalTexture:await d,name:t.name,id:b,occlusionTexture:await p,emissiveTexture:await m,emissiveFactor:t.emissiveFactor,metallicFactor:a.metallicFactor,roughnessFactor:a.roughnessFactor,metallicRoughnessTexture:await f,hasVertexColors:l,ESRI_externalColorMixMode:t.extras.ESRI_externalColorMixMode,colorTextureTransform:a?.baseColorTexture?.extensions?.KHR_texture_transform,normalTextureTransform:t.normalTexture?.extensions?.KHR_texture_transform,occlusionTextureTransform:t.occlusionTexture?.extensions?.KHR_texture_transform,emissiveTextureTransform:t.emissiveTexture?.extensions?.KHR_texture_transform,metallicRoughnessTextureTransform:a?.metallicRoughnessTexture?.extensions?.KHR_texture_transform,receiveAmbientOcclusion:t.extras.ESRI_receiveAmbientOcclusion,receiveShadows:t.extras.ESRI_receiveShadows}}return o}async decode(e,r){const n=e.extensions?.KHR_draco_mesh_compression;if(!n)return;if(e.indices==null)throw new i("gltf-loader-error","Found Draco compressed primitive without indices.");const o=this.json.bufferViews[n.bufferView],t=await this.getBuffer(o.buffer,r),a=(await Ae()).decode(new Uint8Array(t.buffer,t.byteOffset+(o.byteOffset||0),o.byteLength));this._bufferLoaders.delete(o.buffer);const l=new Map([[e.indices,a.indices],[e.attributes.POSITION,a.positions]]);return e.attributes.TEXCOORD_0&&l.set(e.attributes.TEXCOORD_0,a.uvs),e.attributes.NORMAL&&l.set(e.attributes.NORMAL,a.normals),e.attributes.COLOR_0&&l.set(e.attributes.COLOR_0,a.colors),e.attributes.TANGENT&&l.set(e.attributes.TANGENT,a.tangents),this._dracoBuffersSize+=a.buffer.byteLength,{data:a.buffer,accessorInfos:l}}async getTexture(e,r){if(!e)return;if((e.texCoord||0)!==0)throw new i("gltf-loader-unsupported-feature","Only TEXCOORD with index 0 is supported.");const n=e.index,o=this.json.textures[n],t=Fe(o.sampler!=null?this.json.samplers[o.sampler]:{}),a=H(o),l=this.json.images[a],c=await this._loadTextureImageData(n,o,r);return re(this._textureCache,n,()=>{const d=m=>m===33071||m===33648||m===10497,p=m=>{throw new i("gltf-loader-error",`Unexpected TextureSampler WrapMode: ${m}`)};return{data:c,wrapS:d(t.wrapS)?t.wrapS:p(t.wrapS),wrapT:d(t.wrapT)?t.wrapT:p(t.wrapT),minFilter:t.minFilter,name:l.name,id:n}})}getNodeTransform(e){if(e===void 0)return Ue;let r=this._nodeTransformCache.get(e);if(!r){const n=this.getNodeTransform(this._getNodeParent(e)),o=this.json.nodes[e];o.matrix?r=ne(V(),n,o.matrix):o.translation||o.rotation||o.scale?(r=R(n),o.translation&&se(r,r,o.translation),o.rotation&&(O[3]=le(O,o.rotation),ae(r,r,O[3],O)),o.scale&&ie(r,r,o.scale)):r=R(n),this._nodeTransformCache.set(e,r)}return r}_resolveUri(e){return ue(e,this._baseUri)}_getNodeParent(e){return this._nodeParentMap.get(e)}_checkVersionSupported(){const e=k.parse(this.json.asset.version,"glTF");Be.validate(e)}_checkRequiredExtensionsSupported(){const e=this.json;if(e.extensionsRequired&&!e.extensionsRequired.every(r=>this._supportedExtensions.includes(r)))throw new i("gltf-loader-unsupported-feature","gltf loader was not able to load unsupported feature. Required extensions: "+e.extensionsRequired.join(", "))}_computeNodeParents(){this.json.nodes.forEach((e,r)=>{e.children&&e.children.forEach(n=>{this._nodeParentMap.set(n,r)})})}async _loadTextureImageData(e,r,n){const o=this._textureLoaders.get(e);if(o)return o;const t=this._createTextureLoader(r,n);return this._textureLoaders.set(e,t),t}async _createTextureLoader(e,r){const n=H(e),o=this.json.images[n];if(o.uri){if(o.uri.endsWith(".ktx2")){const c=await this._context.loadBinary(this._resolveUri(o.uri),r);return new Oe(new Uint8Array(c))}return this._context.loadImage(this._resolveUri(o.uri),r)}if(o.bufferView==null)throw new i("gltf-loader-unsupported-feature","Image bufferView must be defined.");if(o.mimeType==null)throw new i("gltf-loader-unsupported-feature","Image mimeType must be defined.");const t=this.json.bufferViews[o.bufferView],a=await this.getBuffer(t.buffer,r);if(t.byteStride!=null)throw new i("gltf-loader-unsupported-feature","byteStride not supported for image buffer");const l=a.byteOffset+(t.byteOffset||0);return Ne(new Uint8Array(a.buffer,l,t.byteLength),o.mimeType)}async getLoadedBuffersSize(){if(this._glbBuffer)return this._glbBuffer.byteLength;const e=await B(Array.from(this._bufferLoaders.values())),r=await B(Array.from(this._textureLoaders.values()));return e.reduce((n,o)=>n+(o?.byteLength??0),0)+this._dracoBuffersSize+r.reduce((n,o)=>n+(o?ve(o)?o.data.byteLength:o.width*o.height*4:0),0)}}const Ue=oe(V(),Math.PI/2),Be=new k(2,0,"glTF"),O=ce(),Ge={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},$e={[u.BYTE]:1,[u.UNSIGNED_BYTE]:1,[u.SHORT]:2,[u.UNSIGNED_SHORT]:2,[u.HALF_FLOAT]:2,[u.FLOAT]:4,[u.INT]:4,[u.UNSIGNED_INT]:4};function Pe(s){switch(s.componentType){case u.BYTE:return new he(s.raw,s.byteOffset,s.byteStride,s.byteOffset+s.byteStride*s.entryCount);case u.UNSIGNED_BYTE:return new me(s.raw,s.byteOffset,s.byteStride,s.byteOffset+s.byteStride*s.entryCount);case u.SHORT:return new pe(s.raw,s.byteOffset,s.byteStride,s.byteOffset+s.byteStride*s.entryCount);case u.UNSIGNED_SHORT:return new de(s.raw,s.byteOffset,s.byteStride,s.byteOffset+s.byteStride*s.entryCount);case u.UNSIGNED_INT:return new fe(s.raw,s.byteOffset,s.byteStride,s.byteOffset+s.byteStride*s.entryCount);case u.FLOAT:return new z(s.raw,s.byteOffset,s.byteStride,s.byteOffset+s.byteStride*s.entryCount)}}function h(s,e){return new s(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*(e.entryCount-1)+e.componentByteSize*e.componentCount)}function H(s){if(s.extensions?.KHR_texture_basisu!=null)return s.extensions.KHR_texture_basisu.source;if(s.source!==null)return s.source;throw new i("gltf-loader-unsupported-feature","Source is expected to be defined for a texture. It can also be omitted in favour of an KHR_texture_basisu extension tag.")}const je=/\.gltf$/i,He=/\.glb$/i;let Ve=0;async function tt(s,e,r={},n=!0){const o=await T.load(s,e,r),t="gltf_"+Ve++,a={lods:[],materials:new Map,textures:new Map,meta:ke(o)},l=!(!o.json.asset.extras||o.json.asset.extras.ESRI_type!=="symbolResource"),c=o.json.asset.extras?.ESRI_webstyleSymbol?.webstyle,d=new Map;let p=!1;await ze(o,async(f,b,g,A)=>{const E=d.get(g)??0;d.set(g,E+1);const y=f.mode!==void 0?f.mode:x.TRIANGLES,I=y===x.TRIANGLES||y===x.TRIANGLE_STRIP||y===x.TRIANGLE_FAN?y:null;if(I==null)return void v.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] Unsupported primitive mode ("+_(x,y)+"). Skipping primitive.");if(!o.hasPositions(f))return void v.getLogger("esri.views.3d.glTF").warn("Skipping primitive without POSITION vertex attribute.");const w=await o.decode(f,r);p||=!!w;const q=o.getPositionData(f,r,w),J=o.getMaterial(f,r,n),L=o.hasNormals(f)?o.getNormalData(f,r,w):null,M=o.hasTangents(f)?o.getTangentData(f,r,w):null,F=o.hasTextureCoordinates(f)?o.getTextureCoordinates(f,r,w):null,D=o.hasVertexColors(f)?o.getVertexColors(f,r,w):null,X=o.getIndexData(f,r,w),Y={name:A,transform:R(b),attributes:{position:await q,normal:L?await L:null,texCoord0:F?await F:null,color:D?await D:null,tangent:M?await M:null},indices:await X,primitiveType:I,material:qe(a,await J,t)};let U=null;a.meta?.ESRI_lod!=null&&a.meta.ESRI_lod.metric==="screenSpaceRadius"&&(U=a.meta.ESRI_lod.thresholds[g]),a.lods[g]=a.lods[g]||{parts:[],name:A,lodThreshold:U},a.lods[g].parts[E]=Y});for(const f of a.lods)f.parts=f.parts.filter(b=>!!b);const m=await o.getLoadedBuffersSize();return{model:a,meta:{isEsriSymbolResource:l,uri:o.uri,ESRI_webstyle:c,isDracoDecompressed:p},customMeta:{},usedMemory:m}}function ke(s){const e=s.json;let r=null;return e.nodes.forEach(n=>{const o=n.extras;o!=null&&(o.ESRI_proxyEllipsoid||o.ESRI_lod)&&(r=o)}),r}async function ze(s,e){const r=s.json,n=r.scenes[r.scene||0].nodes,o=n.length>1,t=[];for(const l of n){const c=r.nodes[l];t.push(a(l,0)),Ke(c)&&!o&&c.extensions.MSFT_lod.ids.forEach((d,p)=>a(d,p+1))}async function a(l,c){const d=r.nodes[l],p=s.getNodeTransform(l);if(d.weights!=null&&v.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] Morph targets are not supported."),d.mesh!=null){const m=r.meshes[d.mesh];for(const f of m.primitives)t.push(e(f,p,c,m.name))}for(const m of d.children||[])t.push(a(m,c))}await Promise.all(t)}function Ke(s){return s.extensions?.MSFT_lod&&Array.isArray(s.extensions.MSFT_lod.ids)}function qe(s,e,r){const n=t=>{const a=`${r}_tex_${t&&t.id}${t?.name?"_"+t.name:""}`;if(t&&!s.textures.has(a)){const l=Re(t.data,{wrap:{s:t.wrapS,t:t.wrapT},mipmap:Je.has(t.minFilter),noUnpackFlip:!0});s.textures.set(a,l)}return a},o=`${r}_mat_${e.id}_${e.name}`;if(!s.materials.has(o)){const t=Ce({color:[e.color[0],e.color[1],e.color[2]],opacity:e.color[3],alphaMode:e.alphaMode,alphaCutoff:e.alphaCutoff,doubleSided:e.doubleSided,colorMixMode:e.ESRI_externalColorMixMode,colorTexture:e.colorTexture?n(e.colorTexture):void 0,normalTexture:e.normalTexture?n(e.normalTexture):void 0,occlusionTexture:e.occlusionTexture?n(e.occlusionTexture):void 0,emissiveTexture:e.emissiveTexture?n(e.emissiveTexture):void 0,metallicRoughnessTexture:e.metallicRoughnessTexture?n(e.metallicRoughnessTexture):void 0,emissiveFactor:[e.emissiveFactor[0],e.emissiveFactor[1],e.emissiveFactor[2]],colorTextureTransform:e.colorTextureTransform,normalTextureTransform:e.normalTextureTransform,occlusionTextureTransform:e.occlusionTextureTransform,emissiveTextureTransform:e.emissiveTextureTransform,metallicRoughnessTextureTransform:e.metallicRoughnessTextureTransform,metallicFactor:e.metallicFactor,roughnessFactor:e.roughnessFactor,receiveShadows:e.receiveShadows,receiveAmbientOcclusion:e.receiveAmbientOcclusion});s.materials.set(o,t)}return o}const Je=new Set([9987,9985]);export{tt as loadGLTF};
