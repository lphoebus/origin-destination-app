const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/editingSupport-D_nDe5ru.js","assets/index-Bkom2Sdc.js","assets/index-CkucmIUh.css","assets/Mesh-CgQFQL_7.js","assets/axisAngleDegrees-CiE1BNcG.js","assets/quat-B12ICwBr.js","assets/quatf64-aQ5IuZRd.js","assets/MeshComponent-Dywg-yhM.js","assets/meshProperties-DWLWd_LJ.js","assets/MeshLocalVertexSpace-7X1tyxoy.js","assets/MeshTransform-BjVAZmOC.js","assets/MeshVertexAttributes-DGlW1oXQ.js","assets/meshVertexSpaceUtils-DtTu-9Nz.js","assets/triangulationUtils-hlMhFJe0.js","assets/earcut-D9gy186-.js","assets/Indices-BDmM_RlD.js","assets/plane-B-4Z4GK_.js","assets/vectorStacks-CNkTMSGr.js","assets/deduplicate-B2NEAwii.js","assets/projectPointToVector-DMoufHKJ.js","assets/vertexSpaceConversion-DwXc1pTo.js","assets/spatialReferenceEllipsoidUtils-BXlmM8F6.js","assets/computeTranslationToOriginAndRotation-DEguJhlW.js","assets/vec3-8vIy6u5T.js","assets/BufferView-w_yOhrVp.js","assets/vec4-Cm2F75SQ.js","assets/External-SumGqUUM.js"])))=>i.map(i=>d[i]);
import{kY as J,mL as Y,mM as X,kZ as ee,b8 as s,ba as i,ok as D,bk as R,qt as te,bb as F,mV as U,b6 as P,hR as re,qu as $,eC as w,fA as se,hP as ie,hO as ae,bH as M,cb as oe,b4 as p,bP as ne,aH as E,nP as le,hr as de,hs as pe,ht as ue,hu as ce,hv as ye,hw as he,hx as fe,bd as me,hy as ge,cn as W,fz as ve,qv as we,dF as be,o8 as Ie,mU as N,bf as f,bU as Le,dp as Fe,bX as Se,qw as _e,c7 as $e,mW as Te,bO as C,qx as Oe,f4 as je,b_ as G,qy as xe,qz as Ee,a$ as Ae,qA as Pe,k9 as k,fd as qe,is as De,ej as Re,mp as Ue,qB as Ne,qC as Ce,mZ as Ge,q7 as ke,hA as Qe,m_ as Ve,m$ as Q,n0 as ze,hI as He,qD as Ke,n3 as Me,n2 as We,fY as Ze,mY as Be,n5 as Je,qE as Ye}from"./index-Bkom2Sdc.js";import{i as Xe,m as et,a as tt}from"./meshSpatialReferenceScaleUtils-D1XoM4nV.js";import{_ as rt}from"./SceneService-D7zpszpN.js";import{s as st}from"./associatedFeatureServiceUtils-CVQJZkjt.js";import{t as it}from"./capabilities-Cs4k8cuT.js";import{p as Z,a as at,y as ot,m as nt}from"./I3SLayerDefinitions-Cs-33CYT.js";import{a as lt}from"./lazyLayerLoader-BEdhlPtN.js";import{j as V,$ as dt,R as pt}from"./elevationInfoUtils-9Dliwvku.js";import{$ as ut}from"./I3SUtil-DNNG9tIX.js";import{p as ct,n as yt}from"./popupUtils-C135Psdh.js";import"./MeshTransform-BjVAZmOC.js";import"./quat-B12ICwBr.js";import"./quatf64-aQ5IuZRd.js";import"./axisAngleDegrees-CiE1BNcG.js";import"./originUtils-CUyL9ZOO.js";import"./resourceUtils-BJbNTHRB.js";import"./resourceUtils-DaR9JynL.js";import"./saveUtils-DSRPRt58.js";import"./projectVectorToVector-Un_2LyvX.js";import"./projectPointToVector-DMoufHKJ.js";import"./sphere-DYgRQGlT.js";import"./vectorStacks-CNkTMSGr.js";import"./I3SBinaryReader-DejEFwkX.js";import"./edgeUtils-CmDwfS0_.js";import"./orientedBoundingBox-CA3xdTCx.js";import"./spatialReferenceEllipsoidUtils-BXlmM8F6.js";import"./computeTranslationToOriginAndRotation-DEguJhlW.js";import"./plane-B-4Z4GK_.js";import"./glsl-B5bJgrnA.js";const ht=Symbol("isSceneGraphicOrigin");var z;let ft=class extends J{get[(z=ht,Y)](){return this.layer}get[X](){return this.layer}get[ee](){return this.layer}constructor(t){super(),this[z]=!0,this.type="scene",this.layer=t}get id(){return this.layer.id}};function B({associatedLayer:e,serviceUpdateTimeStamp:t}){const r=e?.editingInfo?.lastEditDate,o=e?.serverGens,n=r!=null,l=t!=null,d=n&&l&&t.lastUpdate!==r.getTime();return n&&(d||!l&&o?.minServerGen!==o?.serverGen)}const mt=e=>{const t=e;let r=class extends t{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){const o=this.associatedLayer?.timeInfo;if(o==null)return null;const n=o.clone();return U(n,this.fieldsIndex),n}set timeInfo(o){U(o,this.fieldsIndex),this._override("timeInfo",o)}get timeExtent(){return this.associatedLayer?.timeExtent}set timeExtent(o){this._override("timeExtent",o)}get timeOffset(){return this.associatedLayer?.timeOffset}set timeOffset(o){this._override("timeOffset",o)}get datesInUnknownTimezone(){return this.associatedLayer?.datesInUnknownTimezone??!1}set datesInUnknownTimezone(o){this._override("datesInUnknownTimezone",o)}async loadTimeInfoFromService(o){const{serviceTimeInfo:n}=this;if(n==null)return;const{startTimeField:l,endTimeField:d}=n;if(l==null&&d==null||B({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const u=async m=>{let c=null;try{c=(await this.fetchStatistics?.(m,o))?.stats}catch{}if(c==null)return null;const{minTimeStr:I,min:T,maxTimeStr:O,max:j}=c,S=m===l?I??T:O??j;return S!=null?new Date(S):null},[y,h]=await Promise.all([u(l),u(d)]);if(l!=null&&y==null||d!=null&&h==null)return;const v=new R({start:y,end:h});this.setAtOrigin("timeInfo",new D({endField:d,startField:l,fullTimeExtent:v}),"service")}};return s([i({type:D,json:{read:!1,write:!1}})],r.prototype,"timeInfo",null),s([i({type:R,json:{read:!1,write:!1}})],r.prototype,"timeExtent",null),s([i({type:te,json:{read:!1,write:!1}})],r.prototype,"timeOffset",null),s([i({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],r.prototype,"datesInUnknownTimezone",null),s([i({type:L,readOnly:!0,json:{read:{source:"timeInfo"}},clonable:!1})],r.prototype,"serviceTimeInfo",void 0),r=s([F("esri.layers.mixins.TemporalSceneLayer")],r),r};let L=class extends P{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};s([i({type:String})],L.prototype,"endTimeField",void 0),s([i({type:String})],L.prototype,"startTimeField",void 0),L=s([F("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],L);let g=class extends P{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};s([i({type:String,json:{read:!0,write:{isRequired:!0}}})],g.prototype,"name",void 0),s([i({type:String,json:{read:!0,write:{isRequired:!0}}})],g.prototype,"field",void 0),s([i({type:[Number],json:{read:!0,write:!0}})],g.prototype,"currentRangeExtent",void 0),s([i({type:[Number],json:{read:!0,write:!0}})],g.prototype,"fullRangeExtent",void 0),s([i({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:{isRequired:!0}}})],g.prototype,"type",void 0),g=s([F("esri.layers.support.RangeInfo")],g);var A;let b=A=class extends P{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new $,this._geometriesSource=null}initialize(){this.addHandles(se(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,ie))}readGeometries(e,t,r){Array.isArray(e)?this.geometries=$.fromJSON(e,r):r.origin!=="web-scene"&&r.origin!=="portal-item"||(this._geometriesSource={url:ae(e,r),context:r})}async loadGeometries(e,t){if(this._geometriesSource==null)return;const{url:r,context:o}=this._geometriesSource,n=await M(r,{responseType:"json",signal:t?.signal}),l=e.toJSON(),d=n.data.map(u=>({...u,spatialReference:l}));this.geometries=$.fromJSON(d,o),this._geometriesSource=null}clone(){const e=new A({geometries:oe(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};s([i({type:["disjoint","contains"],nonNullable:!0,json:{write:{isRequired:!0}}})],b.prototype,"spatialRelationship",void 0),s([i({type:$,nonNullable:!0,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}}),re({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],b.prototype,"geometries",void 0),s([w(["web-scene","portal-item","service"],"geometries")],b.prototype,"readGeometries",null),b=A=s([F("esri.layers.support.SceneFilter")],b);const gt=b;async function vt({fieldName:e,statisticsInfo:t,errorContext:r,fieldsIndex:o,path:n,customParameters:l,apiKey:d,signal:u}){if(t==null)throw new p(`${r}:no-cached-statistics`,"Cached statistics are not available for this layer");const y=o.get(e);if(y==null)throw new p(`${r}:field-unexisting`,`Field '${e}' does not exist on the layer`);const h=t.find(c=>c.name===y.name);if(h==null)throw new p(`${r}:no-cached-statistics`,"Cached statistics for this attribute are not available");const v=ne(n,h.href),{data:m}=await M(v,{query:{f:"json",...l,token:d},responseType:"json",signal:u});return m}async function wt(e){const t=[];for(const r of e)r.name.toLowerCase().endsWith(".zip")?t.push(bt(r)):t.push(Promise.resolve(r));return(await Promise.all(t)).flat()}async function bt(e){const{BlobReader:t,ZipReader:r,BlobWriter:o}=await E(()=>import("./zipjs-wrapper-DlREhPTl.js"),[]),n=[];return(await new r(new t(e)).getEntries()).forEach(d=>{if(d.directory||/^__MACOS/i.test(d.filename))return;const u=new o;n.push(d.getData(u).then(y=>new File([y],d.filename)))}),Promise.all(n)}const It=new Set(["3DObject","Point"]),H=Ge();let a=class extends mt(le(rt(de(pe(ue(ce(ye(he(fe(me(ge))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.graphicOrigin=new ft(this),this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new W,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.attributeTableTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}destroy(){this._set("renderer",null),this.associatedLayer=ve(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const r=this.getField(e)?.domain??null;return this.associatedLayer?we(this.associatedLayer,e,t,r):r}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get fieldsIndex(){return new be(this.fields)}readNodePages(e,t,r){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:Z.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&Ie(this.associatedLayer)}get geometryType(){return Lt[this.profile]||"mesh"}set renderer(e){N(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){e=e??it;const{query:t,queryRelated:r,editing:{supportsGlobalId:o,supportsRollbackOnFailure:n,supportsUploadWithItemId:l,supportsGeometryUpdate:d,supportsReturnServiceEditsInSourceSpatialReference:u},data:{supportsZ:y,supportsM:h,isVersioned:v,supportsAttachment:m},operations:{supportsEditing:c,supportsAdd:I,supportsUpdate:T,supportsDelete:O,supportsQuery:j,supportsQueryAttachments:S,supportsAsyncConvert3D:q}}=e,_=e.operations.supportsChangeTracking,x=!!this.associatedLayer?.infoFor3D;return{query:t,queryRelated:r,editing:{supportsGlobalId:o,supportsReturnServiceEditsInSourceSpatialReference:u,supportsRollbackOnFailure:n,supportsGeometryUpdate:x&&d,supportsUploadWithItemId:l},data:{supportsAttachment:m,supportsZ:y,supportsM:h,isVersioned:v},operations:{supportsQuery:j,supportsQueryAttachments:S,supportsEditing:c&&_,supportsAdd:x&&I&&_,supportsDelete:x&&O&&_,supportsUpdate:T&&_,supportsAsyncConvert3D:q}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.associatedLayer?.editingEnabled??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get relationships(){return this.associatedLayer?.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeOID"&&(e=r.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeGlobalID"&&(e=r.name),!!e)),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const r=t.store.profile;return r!=null&&K[r]?K[r]:(f.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}get useViewTime(){return this.associatedLayer?.useViewTime??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=e?.signal;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(Le),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await Fe(this,{origin:"service"},t),N(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){f.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new Se;return this.geometryType==="mesh"?this.capabilities.query.supportsReturnMesh&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(r=>{if(r?.features)for(const o of r.features)o.layer=this,o.sourceLayer=this,o.origin=this.graphicOrigin;return r})}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const r=_e(this.fieldsIndex,await ct(this,yt(this)));return ut(this.parsedUrl?.path??"",this.attributeStorageInfo??[],e,t,r,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||r.length===0)throw new p("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const o=new $e;return o.attributes=r[0],o.layer=this,o.sourceLayer=this,o.origin=this.graphicOrigin,o}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(f.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return Te(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new p("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const{applyEdits:r}=await E(()=>import("./editingSupport-D_nDe5ru.js"),__vite__mapDeps([0,1,2]));let o=t;await this.load();const n=this.associatedLayer;if(!n)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");await n.load();const{globalIdField:l}=n,d=!!n.infoFor3D,u=o?.globalIdUsed??!0;if(d&&l==null)throw new p(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(d&&!u)throw new p(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return C(n.url)&&d&&e.deleteFeatures!=null&&l!=null&&(o={...o,globalIdToObjectId:await Oe(n,e.deleteFeatures,l)}),r(this,n.source,e,o)}async uploadAssets(e,t){if(await this.load(),this.associatedLayer==null)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}async convertMesh(e,t){t??={},t.location!=null&&je(f.getLogger(this),"The 'location' option of convertMesh() has been deprecated in favour of 'origin'.",{version:"4.34",replacement:"origin",warnOnce:!0});const r=c=>{throw f.getLogger(this).error(".convertMesh()",c.message),c};await this.load(t),this.infoFor3D||r(new p("invalid:layer","SceneLayer has no capability for mesh conversion"));const o=await this.extractAndFilterFiles(e);G(t);const n=o.reduce((c,I)=>xe(this.infoFor3D,I)?c+1:c,0);n===0&&r(new Xe),n>1&&r(new et);const l=this.spatialReference,d=t.origin??t.location,u=await Ee(d??t.defaultOrigin??new Ae({x:0,y:0,z:0,spatialReference:l}),l,t),y=u.spatialReference.isGeographic?"local":"georeferenced",{default:h}=await E(async()=>{const{default:c}=await import("./Mesh-CgQFQL_7.js");return{default:c}},__vite__mapDeps([3,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]));G(t);const v=h.createWithExternalSource(u,{type:"client",files:o},{vertexSpace:y,transform:tt(u.spatialReference),unitConversionDisabled:!0}),[m]=await this.uploadAssets([v],{...t,useAssetOrigin:!d});return m}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;return t?(await wt(e)).filter(r=>Pe(t,r)):e}validateLayer(e){if(e.layerType&&!It.has(e.layerType))throw new p("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new p("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new p("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(r,o){let n=!1,l=!1;if(r==null)n=!0,l=!0;else{const d=o&&o.isGeographic;switch(r){case"east-north-up":case"earth-centered":n=!0,l=d;break;case"vertex-reference-frame":n=!0,l=!d;break;default:n=!1}}if(!n)throw new p("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new p("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new p("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!!this.attributeStorageInfo?.some(n=>n.name===e.name),r=!!this.associatedLayer?.fields?.some(n=>n&&e.name===n.name),o={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=o}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPropertyOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPropertyOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled","attributeTableTemplate"],t=k(this);for(let r=0;r<e.length;r++){const o=e[r],n=this.originIdOf(o),l=this.associatedLayer.originIdOf(o);n<l&&(l===2||l===3)&&t.setAtOrigin(o,this.associatedLayer[o],l)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.getAtOrigin("fullExtent","service");this.associatedLayer?.infoFor3D==null||!e||!C(this.associatedLayer?.url)||!B(this)||k(this).setAtOrigin("fullExtent",e.clone(),2)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:o}=await st(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),n=await lt.FeatureLayer();this.associatedLayer=new n({url:t,customParameters:this.customParameters,layerId:r,portalItem:o}),await this.associatedLayer.load()}catch(t){qe(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){const e=new AbortController;this.addHandles(De(e));try{await Re(()=>this.popupEnabled&&this.popupTemplate!=null,e.signal)}catch(r){return void Ue(r)}const t=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?f.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${t}`):f.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${t}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&V(f.getLogger(this),dt("Mesh scene layers","relative-to-scene",e)),V(f.getLogger(this),pt("Scene layers",e))}async fetchStatistics(e,t){return await vt({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:this.parsedUrl?.path??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t?.signal})}};s([i({types:{key:"type",base:Ce,typeMap:{selection:Ne}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:{allowNull:!0}},"portal-item":{name:"layerDefinition.featureReduction",write:{allowNull:!0}}}}})],a.prototype,"featureReduction",void 0),s([i({type:[g],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}},clonable:!1})],a.prototype,"rangeInfos",void 0),s([i({json:{read:!1}})],a.prototype,"associatedLayer",void 0),s([i({type:["show","hide"]})],a.prototype,"listMode",void 0),s([i({type:["ArcGISSceneServiceLayer"]})],a.prototype,"operationalLayerType",void 0),s([i({json:{read:!1},readOnly:!0})],a.prototype,"type",void 0),s([i({...H.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],a.prototype,"fields",void 0),s([i()],a.prototype,"types",null),s([i()],a.prototype,"typeIdField",null),s([i()],a.prototype,"templates",null),s([i()],a.prototype,"formTemplate",null),s([i({readOnly:!0})],a.prototype,"graphicOrigin",void 0),s([i({readOnly:!0,clonable:!1})],a.prototype,"fieldsIndex",null),s([i({type:ke,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],a.prototype,"floorInfo",void 0),s([i(H.outFields)],a.prototype,"outFields",void 0),s([i({type:Z,readOnly:!0,json:{read:!1},clonable:!1})],a.prototype,"nodePages",void 0),s([w("service","nodePages",["nodePages","pointNodePages"])],a.prototype,"readNodePages",null),s([i({type:[at],readOnly:!0,clonable:!1})],a.prototype,"materialDefinitions",void 0),s([i({type:[ot],readOnly:!0,clonable:!1})],a.prototype,"textureSetDefinitions",void 0),s([i({type:[nt],readOnly:!0,clonable:!1})],a.prototype,"geometryDefinitions",void 0),s([i({readOnly:!0})],a.prototype,"serviceUpdateTimeStamp",void 0),s([i({readOnly:!0})],a.prototype,"attributeStorageInfo",void 0),s([i({readOnly:!0})],a.prototype,"statisticsInfo",void 0),s([i({type:W.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],a.prototype,"excludeObjectIds",void 0),s([i({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],a.prototype,"definitionExpression",void 0),s([i({type:gt,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],a.prototype,"filter",void 0),s([i({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),s([i(Qe)],a.prototype,"elevationInfo",null),s([i({readOnly:!0,json:{read:!1}})],a.prototype,"effectiveCapabilities",null),s([i({readOnly:!0})],a.prototype,"effectiveEditingEnabled",null),s([i({type:String})],a.prototype,"geometryType",null),s([i(Ve)],a.prototype,"labelsVisible",void 0),s([i({type:[ze],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:Q},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:Q},write:!0}})],a.prototype,"labelingInfo",void 0),s([i(He)],a.prototype,"legendEnabled",void 0),s([i({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if(typeof e=="number"&&e>=0&&e<=1)return e;const r=t.layerDefinition?.drawingInfo?.transparency;return r!==void 0?Ke(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],a.prototype,"opacity",void 0),s([i({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],a.prototype,"priority",void 0),s([i({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],a.prototype,"semantic",void 0),s([i({types:Me,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],a.prototype,"renderer",null),s([i({json:{read:!1}})],a.prototype,"cachedDrawingInfo",void 0),s([w("service","cachedDrawingInfo")],a.prototype,"readCachedDrawingInfo",null),s([i({readOnly:!0,json:{read:!1}})],a.prototype,"capabilities",null),s([i({type:Boolean,json:{read:!1}})],a.prototype,"editingEnabled",null),s([i({readOnly:!0,json:{write:!1,read:!1}})],a.prototype,"infoFor3D",null),s([i({readOnly:!0,json:{write:!1,read:!1}})],a.prototype,"relationships",null),s([i(We)],a.prototype,"popupEnabled",void 0),s([i({type:Ze,json:{name:"popupInfo",write:!0}})],a.prototype,"popupTemplate",void 0),s([i({readOnly:!0,json:{read:!1}})],a.prototype,"defaultPopupTemplate",null),s([i(Be)],a.prototype,"attributeTableTemplate",void 0),s([i({type:String,json:{read:!1}})],a.prototype,"objectIdField",void 0),s([w("service","objectIdField",["objectIdField","fields"])],a.prototype,"readObjectIdField",null),s([i({type:String,json:{read:!1}})],a.prototype,"globalIdField",void 0),s([w("service","globalIdField",["globalIdField","fields"])],a.prototype,"readGlobalIdField",null),s([i({readOnly:!0,type:String,json:{read:!1}})],a.prototype,"displayField",null),s([i({type:String,json:{read:!1}})],a.prototype,"profile",void 0),s([w("service","profile",["store.profile"])],a.prototype,"readProfile",null),s([i({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],a.prototype,"normalReferenceFrame",void 0),s([i(Je)],a.prototype,"screenSizePerspectiveEnabled",void 0),s([i({json:{read:!1,origins:{service:{read:!0}}}})],a.prototype,"serviceItemId",void 0),s([i(Ye)],a.prototype,"useViewTime",null),a=s([F("esri.layers.SceneLayer")],a);const K={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},Lt={"mesh-pyramids":"mesh",points:"point"},Xt=a;export{Xt as default};
