const c=Symbol("meshContext");function l(e){return e&&typeof e=="object"&&c in e?e[c]:void 0}function d(e,n){const t=l(e);return{...e,[c]:{...t,...n}}}const u=Symbol("meshMaterialContext");function p(e){return e&&typeof e=="object"&&u in e?e[u]:void 0}function x(e){if(p(e)?.materialMap)return e;const t={materialMap:new Map};return{...e,[u]:t}}const s=Symbol("meshTextureContext");function m(e){return e&&typeof e=="object"&&s in e?e[s]:void 0}function b(e){if(m(e)?.textureMap)return e;const t={textureMap:new Map};return{...e,[s]:t}}function a(e,n,t,i){const{loggerTag:r,stride:o}=n;return e.length%o!==0?(i.error(r,`Invalid array length, expected a multiple of ${o}`),new t([])):e}function g(e,n,t,i,r){if(!e)return e;if(e instanceof n)return a(e,i,n,r);for(const o of t)if(e instanceof o)return a(new n(e),i,n,r);if(Array.isArray(e))return a(new n(e),i,n,r);{const o=t.map(f=>`'${f.name}'`);return r.error(`Failed to set property, expected one of ${o}, but got ${e.constructor.name}`),new n([])}}function $(e,n,t){n[t]=y(e)}function y(e){const n=new Array(e.length);for(let t=0;t<e.length;t++)n[t]=e[t];return n}export{p as a,b,x as c,l as d,d as e,g as n,$ as r,m as u};
