import{aY as C,b4 as f,fg as q,cn as z,bf as $,dF as U,jX as S,f2 as h,gk as O,jY as W,gl as J,dA as v,fV as D,jZ as V,fT as F,bF as Z,gB as H}from"./index-Bkom2Sdc.js";import{QueueProcessor as L}from"./QueueProcessor-DqRCcjoo.js";import{Y,E as I,W as X}from"./QueryEngine-wy14dKBu.js";import{u as K}from"./clientSideDefaults-I-4nPcub.js";import{s as ee,a as te,y as se,f as re,p as A}from"./parquetUtils-BznT7Hbp.js";import{d as Q,w as ae}from"./parquet-B574Roxs.js";import{r as oe}from"./FeatureStoreQueryAdapter-xTIuWByO.js";import{i as T,t as B,n as ie}from"./SourceChunkStore-2dHxfDCf.js";import{i as ne}from"./FeatureMetadata-gkZZdSVQ.js";import"./featureConversionUtils-nye7QKUe.js";import"./WhereClauseCache-Bv0Ws1nb.js";import"./WhereClause-GpJYBgPS.js";import"./timeSupport-CXh2VZCm.js";import"./queryUtils-CyiURm7K.js";import"./QueryEngineCapabilities-DJC_YILC.js";import"./utils-C4ZnkFTC.js";import"./utils-CM17lTaw.js";import"./ClassBreaksDefinition-DLcEIyEO.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-9QRDBkMs.js";import"./locationUtils-BHxEwK9e.js";function ue(a){switch(a.type){case"wkb":return te.fromJSON(a);case"location":return ee.fromJSON(a)}}const w=new oe,le=4,R=8e3,P="__OBJECTID";class Ee{constructor(){this._fileInfos=new Map,this._queue=new L({concurrency:le,process:(e,s)=>this._executeQuery(e,s)})}async load(e){const s=e.spatialReference?C.fromJSON(e.spatialReference):void 0;if(s&&!s.isWGS84&&!s.isWebMercator)throw new f("parquet:unsupported-projection","Only WGS84 and Web Mercator are supported");const t=await se({urls:new z(e.urls),fields:e.fields?.map(o=>q.fromJSON(o)),encoding:e.encoding?ue(e.encoding):e.encoding,geometryType:e.geometryType?re(e.geometryType):null,spatialReference:s},{customParameters:e.customParameters});let r;if(t.geometryType&&t.encoding){if(!t.spatialReference)throw new f("parquet:unsupported","SpatialReference must be defined");if(!t.spatialReference.isGeographic&&!t.spatialReference.isWebMercator)throw new f("parquet:unsupported-projection","Only WGS84 and Web Mercator are supported");t.spatialReference.isGeographic&&!t.spatialReference.isWGS84&&($.getLogger("parquet:unsupported-projection").warn("Found a geographic projection that is not WGS84. Handling as WGS84.",{spatialReference:t.spatialReference}),t.spatialReference=C.WGS84),r={geometryType:A(t.geometryType),spatialReference:t.spatialReference.toJSON(),encoding:t.encoding.toJSON(),displayOptimization:t.displayOptimization}}this.setCustomParameters(e.customParameters),this._geometryInfo=r;const i=e.urls;for(const o of i){const d=await Q(o,{geometryInfo:r,outSpatialReference:null,getCustomParameters:()=>this._customParameters});this._fileInfos.set(o,{index:this._fileInfos.size,file:d})}this._capabilities=G(await this.getFileStatistics());const n=this._fileInfos.values().next().value?.file;if(!n)return{layerDefinition:{},capabilities:G(null)};const{fields:u}=t;if(u==null)throw new f("parquet-layer:missing-metadata","Unable to create parquet source: cannot infer fields",u);u.push(new q({name:P,type:"oid",alias:P}));const l={fields:u.map(o=>({...o.toJSON(),column:n.columnForFieldName(o.name)})),timeZoneByFieldName:null},c=U.fromJSON(l);this._fieldsIndex=c;const p=A(t.geometryType??"point");if(this._metadata=ne.createFeature({fieldsIndex:l,geometryType:p,featureIdInfo:{type:"object-id",fieldName:"rowId"},subtypes:null,subtypeField:null,types:null,typeIdField:null,globalIdField:null,spatialReference:t.spatialReference,outSpatialReference:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null}),this._queryEngineParams={fieldsIndex:this._metadata.fieldsIndex,geometryType:r?.geometryType??"esriGeometryPoint",featureIdInfo:{type:"object-id",fieldName:"rowId"},hasM:!1,hasZ:!1,spatialReference:r?.spatialReference??{wkid:4326},aggregateAdapter:null,timeInfo:null,definitionExpression:null},t.spatialReference&&(this._fullExtent=ce(this._fileInfos.values(),t.spatialReference.toJSON())),this._fullExtent==null&&t.encoding?.type==="location"){const{latitudeFieldName:o,longitudeFieldName:d}=t.encoding,M=this._fieldsIndex.get(o)?.column,j=this._fieldsIndex.get(d)?.column,m=S(h(),F);for(const N of this._fileInfos.values())for(const _ of N.file.rowGroups()){const y={stack:[],error:void 0,hasError:!1};try{const g=O(y,_.columnDescriptorForAttribute(M),!1),b=O(y,_.columnDescriptorForAttribute(j),!1),k=[b.minValue(),g.minValue(),b.maxValue(),g.maxValue()];W(m,k),_.free()}catch(g){y.error=g,y.hasError=!0}finally{J(y)}}this._fullExtent={xmin:m[0],ymin:m[1],xmax:m[3],ymax:m[4],spatialReference:t.spatialReference?.toJSON()}}return{capabilities:this._capabilities,layerDefinition:{fields:t.fields?.map(o=>o.toJSON()),drawingInfo:K(p),extent:this._fullExtent??void 0,geometryType:p,encoding:t.encoding?.toJSON(),displayOptimization:t.displayOptimization}}}destroy(){for(const e of this._fileInfos.values())e.file.free();this._fileInfos.clear(),this._queue.destroy()}setCustomParameters(e){this._customParameters=e}getFileStatistics(){if(!this._fileInfos.size)return null;const e=Array.from(this._fileInfos.values()).reduce((s,t)=>s+t.file.byteLength(),0);return{featureCount:this._getFeatureCount(),byteLength:e}}async updateFiles(e){const s=new Set(e);for(const[t,r]of this._fileInfos.entries())s.has(t)?s.delete(t):(r.file.free(),this._fileInfos.delete(t));for(const t of s){const r=await Q(t,{geometryInfo:this._geometryInfo,outSpatialReference:null,getCustomParameters:()=>this._customParameters});this._fileInfos.set(t,{index:this._fileInfos.size,file:r})}}async queryFeatures(e,s){return this._validateQuery(e),de(e)||(e.resultRecordCount=e.resultRecordCount?Math.min(e.resultRecordCount,8e3):8e3,e.resultOffset=e.resultOffset??0),(e.outStatistics||e.returnDistinctValues)&&delete e.returnGeometry,(await this._enqueueQuery(e,s)).createQueryResponse()}async queryFeatureCount(e,s){return this._validateQuery(e),x(e)?(delete e.outFields,delete e.returnGeometry,(await this._enqueueQuery(e,s)).createQueryResponseForCount()):this._getFeatureCount()}async queryObjectIds(e,s){return this._validateQuery(e),x(e)?(e.resultRecordCount=e.resultRecordCount?Math.min(e.resultRecordCount,8e3):8e3,e.resultOffset=e.resultOffset??0,delete e.returnGeometry,delete e.outFields,(await this._enqueueQuery(e,s)).items.map(t=>t.getObjectId())):Array.from({length:this._getFeatureCount()},(t,r)=>r)}async queryExtent(e,s){if(this._validateQuery(e),this._fullExtent&&!x(e))return{count:this._getFeatureCount(),extent:this._fullExtent};const t=v(this._metadata.spatialReference);e.returnGeometry=!0,delete e.outFields;const r=S(h(),F),i=h(),n=await this._enqueueQuery(e,s);let u=0;for(const l of n.items)l.getBounds(i)&&(D(r,i),u+=1);return{count:u,extent:Y(r,t,e.outSR?v(e.outSR):t,t,!1)}}_getFeatureCount(){return Array.from(this._fileInfos.values()).reduce((e,s)=>e+s.file.numRows(),0)}_validateQuery(e){if(!this._capabilities.query.supportsStatistics&&e.outStatistics)throw new f("parquet:unsupported","Statistics queries are not supported",{query:e});if(!this._capabilities.query.supportsOrderBy&&e.orderByFields?.length)throw new f("parquet:unsupported","Queries using orderBy are not supported",{query:e});if(!this._capabilities.query.supportsDistinct&&e.returnDistinctValues)throw new f("parquet:unsupported","Queries using returnDistinctValues are not supported",{query:e})}async*_fetchChunks(e,s){for(const t of this._fileInfos.values()){const r=t.file.numRows(),i=Math.ceil(r/R);for(let n=0;n<i;n++){const u=n*R,l=await t.file.readChunk(u,R,e.fields,e.returnGeometry,s);for(const c of l){const p=new T(this._metadata,this._fieldsIndex,c,0,t.index);yield E([new B(p,null,0,!1)],this._queryEngineParams)}}}}_enqueueQuery(e,s){return this._queue.push(e,s)}async _executeQuery(e,s){const t=await this._getReadParams(e);if(e.objectIds?.length)for(const u of this._fileInfos.values()){const l=[],c=E((await u.file.readChunksByRowId(new Uint32Array(e.objectIds),t.fields,t.returnGeometry,s)).map((o,d)=>new T(this._metadata,this._fieldsIndex,o,d,u.index)).map((o,d)=>new B(o,null,d,!1)),this._queryEngineParams),p=await c.executeQueryForOpaqueFeatures(e,s);for(const o of p)l.push(o);return new I(l,e,{fieldsIndex:this._fieldsIndex,geometryType:this._metadata.geometryType,spatialReference:this._queryEngineParams.spatialReference,objectIdField:"rowId",hasM:!1,hasZ:!1,featureAdapter:w})}let r=e.resultRecordCount??this._getFeatureCount(),i=e.resultOffset??0;delete e.resultRecordCount,delete e.resultOffset;const n=[];for await(const u of this._fetchChunks(t,s)){const l=await u.executeQueryForOpaqueFeatures(e,s);if(l.length>i){const c=l.slice(i,Math.min(i+r,l.length));for(const p of c)n.push(p);if(i=0,r-=c.length,r===0)return new I(n,e,{fieldsIndex:this._fieldsIndex,geometryType:this._metadata.geometryType,spatialReference:this._queryEngineParams.spatialReference,objectIdField:"rowId",hasM:!1,hasZ:!1,featureAdapter:w})}else i-=l.length}return new I(n,e,{fieldsIndex:this._fieldsIndex,geometryType:this._metadata.geometryType,spatialReference:this._queryEngineParams.spatialReference,objectIdField:"rowId",hasM:!1,hasZ:!1,featureAdapter:w})}async _getReadParams(e){const s=new Set;if(e.where&&await V(s,this._fieldsIndex,e.where),e.outStatistics)for(const t of e.outStatistics)t.onStatisticField!=null&&s.add(t.onStatisticField);if(e.outFields)for(const t of e.outFields)s.add(t);return{fields:this._getAttributeIds(Array.from(s)),returnGeometry:!!e.returnGeometry||!!e.geometry}}_getAttributeIds(e){if(e==null)return new Uint32Array;if(e.includes("*"))return new Uint32Array(this._fieldsIndex.fields.map(t=>t.column).filter(t=>t!=null));const s=[];for(const t of e){const r=this._fieldsIndex.get(t);if(r==null)throw new f("unknown-field",`Field ${t} does not exist`);r.column==null||s.push(r.column)}return new Uint32Array(s)}}function x(a){return Object.keys(a).some(e=>pe(e))}function pe(a){switch(a){case"resultOffset":case"resultRecordCount":case"aggregateIds":case"distance":case"gdbVersion":case"geometry":case"having":case"timeExtent":case"where":case"objectIds":case"historicMoment":return!0;default:return!1}}function E(a,e){const s=new ie;for(const t of a)s.insert(t);return new X({...e,featureStore:s})}function fe(a){switch(a.length){case 4:return H(h(),a);case 6:return a;default:throw new f("parquet:protocol-violation","Invalid Geoparquet file. BoundingBox size must be 4 or 6.",{bbox:a})}}function ce(a,e){const s=S(h(),F);for(const t of a){const r=ae(t.file);if(!r)return null;const i=r.columns[r.primary_column];if(!i.bbox)return null;const n=fe(i.bbox);D(s,n)}return{xmin:s[0],ymin:s[1],xmax:s[3],ymax:s[4],spatialReference:e}}function G(a){const e=a?.featureCount;let s=!1;return e!=null&&e<Z("parquetlayer-full-query-feature-count")&&(s=!0),{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:!1},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryBins:!1,supportsQueryPivot:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:8e3,maxRecordCountFactor:void 0,maxUniqueIDCount:void 0,standardMaxRecordCount:void 0,supportsCacheHint:!1,supportsCentroid:!0,supportsCentroidOnDegeneratedQuantizedGeometry:!1,supportsCurrentUser:!1,supportsDegeneratedQuantizedGeometry:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:s,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:s,supportsPagination:!0,supportsPaginationOnAggregatedQueries:!1,supportsPercentileStatistics:!1,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsStatistics:s,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,supportsSqlExpression:!1,supportsTrueCurve:!1,tileMaxRecordCount:void 0},queryAttributeBins:{supportsDate:!1,supportsFixedInterval:!1,supportsAutoInterval:!1,supportsFixedBoundaries:!1,supportsStackBy:!1,supportsSplitBy:!1,supportsSnapToData:!1,supportsReturnFullIntervalBin:!1,supportsFirstDayOfWeek:!1,supportsNormalization:!1},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUploadWithItemId:!1,supportsUpdateWithoutM:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}function de(a){return!!(a.objectIds?.length||a.outStatistics||a.orderByFields?.length||a.returnDistinctValues)}export{Ee as default};
