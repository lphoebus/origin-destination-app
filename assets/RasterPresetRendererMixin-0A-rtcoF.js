import{eG as Y,eI as _,eH as B,bH as p,bN as T,aY as W,f8 as X,a$ as N,bd as G,b6 as K,b8 as l,ba as u,b9 as Q,i3 as U,bb as P}from"./index-Bkom2Sdc.js";import{l as Z,m as ee}from"./RasterSymbolizer-BQJRaC-o.js";import{p as te,l as ae}from"./RasterJobHandlerMixin-CXgaqaNL.js";async function M(t,r,i){const x=Y(t),{rasterFunction:c,sourceJSON:j}=r||{},O=c?JSON.stringify(c.rasterFunctionDefinition||c):null,H=_({...x.query,renderingRule:O,f:"json"}),d=B(H,i);t=x.path;const e=j||await p(t,d).then(a=>a.data),J=e.hasRasterAttributeTable?p(`${t}/rasterAttributeTable`,d):null,k=e.hasColormap?p(`${t}/colormap`,d):null,z=e.hasHistograms?p(`${t}/histograms`,d):null,C=e.currentVersion>=10.3?p(`${t}/keyProperties`,d):null,q=e.hasMultidimensions?p(`${t}/multidimensionalInfo`,d):null,s=await Promise.allSettled([J,k,z,C,q]);let f=null;if(e.minValues&&e.minValues.length===e.bandCount){f=[];for(let a=0;a<e.minValues.length;a++)f.push({min:e.minValues[a],max:e.maxValues[a],avg:e.meanValues[a],stddev:e.stdvValues[a]})}const R=T.fromJSON(e.extent),S=Math.ceil(R.width/e.pixelSizeX-.1),w=Math.ceil(R.height/e.pixelSizeY-.1),h=W.fromJSON(e.spatialReference||e.extent.spatialReference),V=s[0].status==="fulfilled"?s[0].value?.data:null,F=V?.features?.length?X.fromJSON(V):null,$=s[1].status==="fulfilled"?s[1].value?.data.colormap:null,L=$?.length?$:null,D=s[2].status==="fulfilled"?s[2].value?.data.histograms:null,A=D?.[0]?.counts?.length?D:null,m=s[3].status==="fulfilled"?s[3].value?.data??{}:{},I=s[4].status==="fulfilled"?s[4].value?.data.multidimensionalInfo:null,v=I?.variables?.length?I:null;v&&v.variables.forEach(a=>{a.statistics?.length&&a.statistics.forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),a.dimensions?.forEach(n=>{n.name!=="StdTime"||n.recurring||n.unit||(n.unit="ISO8601")})});const{defaultVariable:y,serviceDataType:b}=e;y&&y!==m.DefaultVariable&&(m.DefaultVariable=y),b?.includes("esriImageServiceDataTypeVector")&&!b.includes(m.DataType)&&(m.DataType=b.replace("esriImageServiceDataType",""));let g=e.noDataValue;e.noDataValues?.length&&e.noDataValues.some(a=>a!==g)&&(g=e.noDataValues);const E=e.transposeInfo?new Z({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new N({x:e.extent.xmin,y:e.extent.ymax,spatialReference:h}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(S,w))/Math.LN2-8)),transposeInfo:e.transposeInfo}):void 0;return new ee({width:S,height:w,bandCount:e.bandCount,extent:T.fromJSON(e.extent),spatialReference:h,pixelSize:new N({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),pixelType:e.pixelType.toLowerCase(),statistics:f,attributeTable:F,colormap:L,histograms:A,keyProperties:m,noDataValue:g,multidimensionalInfo:v,storageInfo:E})}function ne(t,r,i){return M(t,{sourceJSON:r},i)}function le(t,r,i){return M(t,{rasterFunction:r},i)}function oe(t,r){t.attributeTable||(r.hasRasterAttributeTable=!1),t.histograms||(r.hasHistograms=!1),t.colormap||(r.hasColormap=!1),t.multidimensionalInfo||(r.hasMultidimensions=!1)}let o=class extends G(K){constructor(t){super(t),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};l([u({type:String,json:{write:{isRequired:!0}}})],o.prototype,"name",void 0),l([u({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),Q({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],o.prototype,"method",void 0),l([u({type:String,json:{write:{isRequired:!0}}})],o.prototype,"value",void 0),l([u({type:[U],json:{write:{isRequired:!0}}})],o.prototype,"bandIds",void 0),l([u({types:ae,json:{write:!0,origins:{"web-scene":{types:te,write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"})}}}}})],o.prototype,"renderer",void 0),o=l([P("esri.renderers.support.RasterPresetRenderer")],o);const ue=t=>{const r=t;let i=class extends r{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return l([u({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],i.prototype,"activePresetRendererName",void 0),l([u({type:[o],json:{name:"layerDefinition.presetRenderers",write:!0}})],i.prototype,"presetRenderers",void 0),i=l([P("esri.layers.mixins.RasterPresetRendererMixin")],i),i};export{oe as c,ne as f,ue as o,le as p};
