import{aH as S,j1 as b,lz as m}from"./index-Bkom2Sdc.js";function R(){return T??=(async()=>{const t=await S(()=>import("./basis_encoder-UQPmgXGW.js"),[]),e=await t.default({locateFile:n=>b(`esri/libs/basisu/${n}`)});return e.initializeBasis(),e})(),T}let T;function X(){T=null}function M(){return y??=(async()=>await(await S(()=>import("./dxt_encoder-CtpzRCd9.js"),[])).default({locateFile:e=>b(`esri/libs/dxtEncoder/${e}`)}))(),y}let y;function x(){y=null}let A,_,o=null,f=null;class w{constructor(e,n){this.internalFormat=e,this.compressedTexture=n}}function Y(){o=null,A=null,f=null,_=null,X(),x()}async function q(t){let e;e=t.data instanceof ImageBitmap?I(t.data):O(t.data,t.width,t.height,t.components,t.needsFlip);try{if(t.hasS3TC){f||await D();const n=new Uint8Array(e.length);if(f?.encode(e,t.width,t.height,t.preMultiplyAlpha,n)){const a=Q(n,!0),u=[n.buffer];return{result:new w(a?.internalFormat??null,a?.textureData??null),transferList:u}}return{result:new w(null,null)}}if(t.hasETC){if(o||await B(),t.preMultiplyAlpha&&!f&&await D(),t.preMultiplyAlpha){const s=new Uint8ClampedArray(e.length);f?.premultiply(new Uint8Array(e),t.width,t.height,s),e=s}const n=F(e,t.width,t.height,t.hasMipmap),a=n?U(n):null,u=a?.compressedTexture?.levels.map(s=>s.buffer)||[];return{result:new w(a?.internalFormat??null,a?.compressedTexture??null),transferList:u}}return{result:new w(null,null)}}finally{e instanceof ImageBitmap&&e.close()}}async function B(){o||(o=await(A??=R()),A=null)}async function D(){f||(f=await(_??=M()),_=null)}function F(t,e,n,a,u=255,s=0,l=!1,i=!1){if(!o)return null;const r=new o.BasisEncoder;r.setPerceptual(!i),r.setCheckForAlpha(!0),r.setForceAlpha(!1),r.setRenormalize(i),r.setMipGen(a),r.setMipSRGB(!i),r.setCreateKTX2File(!0),r.setKTX2SRGBTransferFunc(!i),r.setQualityLevel(u),r.setCompressionLevel(s);const c=new Uint8Array(t.byteLength);r.setSliceSourceImage(0,new Uint8Array(t),e,n,l);const d=r.encode(c),h=new Uint8Array(c.buffer,0,d),p=new o.KTX2File(new Uint8Array(h));return p.isValid()?(r.delete(),h):(p.close(),p.delete(),r.delete(),null)}function U(t){if(!o)return new w(null,null);const e=new o.KTX2File(new Uint8Array(t));e.startTranscoding();const[n,a]=e.getHasAlpha()?[1,m.COMPRESSED_RGBA8_ETC2_EAC]:[0,m.COMPRESSED_RGB8_ETC2],u=e.getLevels(),s=[];for(let l=0;l<u;l++)s.push(new Uint8Array(e.getImageTranscodedSizeInBytes(l,0,0,n))),e.transcodeImage(s[l],l,0,0,n,0,-1,-1);return e.close(),e.delete(),{internalFormat:a,compressedTexture:{type:"compressed",levels:s}}}function I(t){const e=new OffscreenCanvas(t.width,t.height),n=e.getContext("2d");return n.drawImage(t,0,0),n.getImageData(0,0,e.width,e.height).data}function O(t,e,n,a,u){const s=new Uint8ClampedArray(t).subarray(0,e*n*a);if(!u)return s;const l=new Uint8ClampedArray(s.length),i=e*a;for(let r=0;r<n;r++){const c=r*i,d=(n-r-1)*i;l.set(s.subarray(c,c+i),d)}return l}const v=31,G=1,P=2,L=3,z=4,K=7,k=21,$=131072;function C(t){return t.charCodeAt(0)+(t.charCodeAt(1)<<8)+(t.charCodeAt(2)<<16)+(t.charCodeAt(3)<<24)}const V=C("DXT1"),H=C("DXT3"),j=C("DXT5");function Q(t,e){const n=new Int32Array(t.buffer,t.byteOffset,v);let a,u;switch(n[k]){case V:a=8,u=m.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case H:a=16,u=m.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case j:a=16,u=m.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let s=1,l=n[z],i=n[L];(3&l||3&i)&&(l=l+3&-4,i=i+3&-4);const r=l,c=i;let d,h;n[P]&$&&e!==!1&&(s=Math.max(1,n[K]));let p=t.byteOffset+n[G]+4;const E=[];for(let g=0;g<s;++g)h=(l+3>>2)*(i+3>>2)*a,d=new Uint8Array(t.buffer,p,h),E.push(d),p+=h,l=Math.max(1,l>>1),i=Math.max(1,i>>1);return{textureData:{type:"compressed",levels:E},internalFormat:u,width:r,height:c}}export{w as TextureCompressionWorkerOutput,q as compress,F as compressRGBADataToKTX2,U as createTextureDataKTX2,Y as destroy,B as initializeBasisEncoder,D as initializeDXTEncoder};
