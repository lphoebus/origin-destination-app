import{hr as T,hs as b,ht as S,hu as v,hv as w,hw as L,hx as P,hO as k,fA as I,hP as R,aY as f,bN as m,b4 as d,bz as x,bH as p,bU as c,bf as u,hQ as D,hy as $,b8 as s,ba as a,hR as E,eC as M,hA as O,hz as j,bb as N}from"./index-Bkom2Sdc.js";import{n as g}from"./SceneModifications-yu5fevMd.js";import{E as q}from"./tiles3DUtils-CUX54LqS.js";import{j as y,w as A,R as U}from"./elevationInfoUtils-9Dliwvku.js";let t=class extends T(b(S(v(w(L(P($))))))){readModifications(e,i,o){this._modificationsSource={url:k(e,o),context:o}}initialize(){this.addHandles(I(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,R))}constructor(e){super(e),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.modifications=null,this._modificationsSource=null,this.spatialReference=new f({wkid:4326,vcsWkid:115700}),this.fullExtent=new m(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0,this._rootTilesetJSON=null,this._rootTileset=null,this._key=null,this._session=null,this._rootRequestPromise=null}set elevationInfo(e){e!=null&&e.mode!=="absolute-height"||this._set("elevationInfo",e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}get rootTilesetJSON(){return this._rootTilesetJSON}get rootTileset(){return this._rootTileset}get key(){return this._key}get session(){return this._session}_findSessionParameter(e){const i=[e];for(;i?.length>0;){const o=i.pop();if(!o)return;for(const[n,r]of Object.entries(o)){if(n==="uri")try{const l=new URL("https://tmp"+r).searchParams.get("session");if(l)return l}catch{}typeof r=="object"&&r!==null&&i.push(r)}}return null}async requestRootAndSession(e){const i=(o,n)=>new d("3dtiles-init:"+o,n);return this._rootRequestPromise||(this._rootRequestPromise=new Promise((o,n)=>{this.url||n(i("url-missing","Layer url missing")),this._key=this.customParameters?this.customParameters.key:null,new Promise((r,l)=>{if(this.replacesTerrain&&!this._key){const h=this.portalItem?.portal||this.parent?.portalItem?.portal||x.getDefault();h.signIn().then(()=>{h.g3dTilesEnabled?p(h.restUrl+"/portals/self/modules/g3dtiles",{responseType:"json",query:{f:"json"}}).then(_=>{this._key=_.data.keyString,r()},()=>l(i("g3dtiles-key-error","Error fetching Google 3D Tiles key from portal"))):l(i("g3dTilesEnabled-false","Google 3D Tiles are not enabled on Portal "+h.url))},()=>l(i("sign-in-failed","Error signing in to Portal")))}else r()}).then(()=>{p(this.url,{query:this._key?{key:this._key,token:this.apiKey}:{token:this.apiKey},responseType:"array-buffer",authMode:"anonymous",signal:e}).then(r=>{try{this._rootTilesetJSON=JSON.parse(new TextDecoder().decode(r.data))}catch(l){return void n(i("root-parse-failed","Error parsing root tile, details: "+l))}this._rootTilesetJSON?(this._session=this._findSessionParameter(this._rootTilesetJSON),this._rootTileset=r.data,this.fullExtent=q(this._rootTilesetJSON),o(),this._rootRequestPromise=null):n(i("root-is-null","Root tile is null."))},r=>{c(r),n(i("root-load-failed","Error loading root tile")),this._rootRequestPromise=null,u.getLogger("IntegratedMesh3DTilesLayer").error("Layer loading failed",r)})},r=>n(r))})),this._rootRequestPromise}async _doLoad(e){const i=e!=null?e.signal:null;if(this._isUsedAsGroundLayer)throw new d("3dtiles-init:not-supported-in-groundlayers","Layer is not supported in basemap.");try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{if(o.typeKeywords?.includes("IntegratedMesh"))return!0;throw new d("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},e)}catch(o){c(o)}if(this._modificationsSource!=null){const o=await g.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",o,this._modificationsSource.context.origin),this._modificationsSource=null}await this.requestRootAndSession(i)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}get hasAttributionData(){return!1}async fetchAttributionData(){return{}}_validateElevationInfo(e){const i="Integrated mesh 3d tiles layers";y(u.getLogger(this),A(i,"absolute-height",e)),y(u.getLogger(this),U(i,e))}get replacesTerrain(){return!1}get _isUsedAsGroundLayer(){return D(this.parent)}get hasGoogleUrl(){return!!this.url?.match(/.+\.googleapis.com/)}};s([a({type:["IntegratedMesh3DTilesLayer"]})],t.prototype,"operationalLayerType",void 0),s([a({type:g,clonable:e=>e.clone()}),E({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],t.prototype,"modifications",void 0),s([M(["web-scene","portal-item"],"modifications")],t.prototype,"readModifications",null),s([a({type:f})],t.prototype,"spatialReference",void 0),s([a({type:m})],t.prototype,"fullExtent",void 0),s([a(O)],t.prototype,"elevationInfo",null),s([a({type:["show","hide"]})],t.prototype,"listMode",void 0),s([a(j)],t.prototype,"url",void 0),s([a({readOnly:!0})],t.prototype,"type",void 0),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],t.prototype,"path",void 0),s([a({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],t.prototype,"minScale",void 0),s([a({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],t.prototype,"maxScale",void 0),s([a()],t.prototype,"replacesTerrain",null),s([a()],t.prototype,"_isUsedAsGroundLayer",null),s([a()],t.prototype,"hasGoogleUrl",null),t=s([N("esri.layers.IntegratedMesh3DTilesLayer")],t);const K=t;export{K as default};
