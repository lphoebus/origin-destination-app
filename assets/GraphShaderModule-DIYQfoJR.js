import{b8 as x,fP as $e,fR as xe,dC as _e,om as Ie,b4 as Ne,bf as fe}from"./index-Bkom2Sdc.js";import"./BufferObject-CTARDp2h.js";import"./FramebufferObject-EJw5XZ2C.js";import{s as Te}from"./ProgramTemplate-D6UgULFC.js";import{s as Me}from"./ShaderBuilder-DRCHXYJf.js";let ar=class{constructor(){this.drawPhase=89}startup(){}shutdown(t){}};function ke(n){return n.split(" ").map((t,e)=>e>0?t.charAt(0).toUpperCase()+t.slice(1):t).join("")}function Se(n,t){const e=[];for(e.push(t);e.length;){const r=e.pop();if(typeof r=="object"&&!n.has(r.uid)){n.add(r.uid);for(const s of r.children)e.push(s)}}}const mt=class mt{constructor(){this.uid=mt.NodeCount++,this._debugName=null,this._isMutable=!1,this.isImplicit=!1}get isMutable(){return this._isMutable}setMutable(){return this._isMutable=!0,this}setDebugName(t){return t=ke(t),this._debugName=t,this.isImplicit&&this.children[0]instanceof mt&&this.children[0].setDebugName(t),this}get debugInfo(){return{name:this._debugName??""}}cloneInto(t){t._debugName=this._debugName,t._isMutable=this._isMutable,t.isImplicit=this.isImplicit,t.uid=this.uid}};mt.NodeCount=0;let K=mt;function u(n){return typeof n=="object"?n.clone():n}let v=class extends K{constructor(){super(...arguments),this.shaderType="primitive-node"}},Pe=class ye extends K{constructor(t){super(),this.child=t,this.shaderType="scope-node"}get children(){return[this.child]}clone(){const t=new ye(u(this.child));return this.cloneInto(t),t}};class Wt extends K{constructor(t,e,r){super(),this.property=t,this.target=e,this.returnType=r,this.shaderType="property-access-node"}get children(){const t=[this.target];return typeof this.property!="string"&&t.push(this.property),t}clone(){const t=new Wt(this.property,u(this.target),this.returnType);return this.cloneInto(t),t}}let Ce=class me extends K{constructor(t,e,r,s){super(),this.x=t,this.y=e,this.target=r,this.returnType=s,this.shaderType="property-access-2d-node"}get children(){return[this.target,this.x,this.y]}clone(){const t=new me(this.x,this.y,u(this.target),this.returnType);return this.cloneInto(t),t}};class Jt extends K{constructor(t,e,r){super(),this.condition=t,this.ifTrue=e,this.ifFalse=r,this.shaderType="condition-node"}get children(){return[this.condition,this.ifTrue,this.ifFalse]}clone(){const t=u(this.ifTrue),e=this.ifFalse?u(this.ifFalse):null,r=new Jt(this.condition,t,e);return this.cloneInto(r),r}}let Fe=class ge extends K{constructor(t,e,r,s){super(),this.captureList=t,this.returnType=e,this.generator=s,this.shaderType="block-node",r&&(this.subgraph=new Pe(r))}get children(){return Object.keys(this.captureList).map(t=>this.captureList[t]).concat(this.subgraph??[])}clone(){const t={};for(const r in this.captureList)t[r]=u(this.captureList[r]);const e=new ge(t,this.returnType,this.subgraph?u(this.subgraph.child):this.subgraph,this.generator);return this.cloneInto(e),e}},z=class be extends K{constructor(t,e,r,s,i,o=!1){super(),this.token=t,this._children=e,this.isInfix=r,this.isPropertyAccess=s,this.returnType=i,this.isTernary=o,this.shaderType="function-node"}get children(){return this._children}clone(){const t=new be(this.token,this._children.map(u),this.isInfix,this.isPropertyAccess,this.returnType,this.isTernary);return this.cloneInto(t),t}};var yt,Mt,kt,St,B,Pt,Ct,Ft,Et,Kt,Dt,Ut,jt,Ot;function Ee(n){switch(n.type){case"bool":case"bvec2":case"bvec3":case"bvec4":return N;case"float":case"vec2":case"vec3":case"vec4":return y;case"int":case"ivec2":case"ivec3":case"ivec4":return p;case"uint":case"uvec2":case"uvec3":case"uvec4":return b;default:throw new Error("Unable to handle type")}}function Ke(n){const t=[["float","vec2","vec3","vec4"],["int","ivec2","ivec3","ivec4"],["uint","uvec2","uvec3","uvec4"],["bool","bvec2","bvec3","bvec4"]];for(const e of t)if(e.includes(n))return e.map(r=>je[r]);throw new Error("Unable to find type family")}function we(n){return new Proxy(n,{get(t,e){if(e==="constructor")return new Proxy(t.constructor,{construct:(r,s,i)=>we(new r(...s))});if(e in t)return t[e];if(typeof e=="string"){const r=Ke(n.type);return m(n,e,r[e.length-1])}}})}function T(n){return new Proxy(n,{construct:(t,e,r)=>we(new t(...e))})}function De(n){return new Proxy(n,{get(t,e){if(e in t)return t[e];if(typeof e=="string"){const r=parseInt(e,10);if(!isNaN(r))return m(n,`[${r}]`,n.elementType.constructor)}}})}function Ue(n){return new Proxy(n,{construct:(t,e,r)=>De(new t(...e))})}class D extends Error{}var L;let Vt=(L=class extends v{constructor(t,e){super(),this.elementType=t,this.size=e,this.children=[],this.type="array"}clone(){const t=new yt(this.elementType,this.size);return super.cloneInto(t),t}get(t,e){const r=new p(t),s=e!=null?new p(e):null;return s!=null?Nt(this,r,s,Ee(this.elementType.constructor)):m(this,r,this.elementType.constructor)}last(){return this.get(this.size-1)}first(){return this.get(0)}findIndex(t,e,r){return Ae(this,t,e,r)}glslFindIndex(t,e,r){return Be(this,t,e,r)}static ofType(t,e){const r={construct:(s,i)=>new yt(new t,e)};return new Proxy(yt,r)}},yt=L,L.type="array",L);Vt=yt=x([Ue],Vt);const gt=class gt extends v{constructor(t,e,r,s=!1){super(),this.elementType=t,this.xSize=e,this.ySize=r,this.isRowMajor=s,this.children=[],this.type="array-2d"}clone(){const t=new gt(this.elementType,this.xSize,this.ySize,this.isRowMajor);return super.cloneInto(t),t}get size(){return this.xSize*this.ySize}get(t,e){return this.isRowMajor?this._getRowMajor(t,e):this._getColumnMajor(t,e)}_getColumnMajor(t,e){const r=new p(t);return m(this,new p(e).add(r.multiply(this.xSize)),this.elementType.constructor)}_getRowMajor(t,e){const r=new p(t),s=new p(e);return m(this,r.add(s.multiply(this.ySize)),this.elementType.constructor)}static ofType(t,e,r,s=!1){return new Proxy(Vt,{construct:(i,o)=>new gt(new t,e,r,s)})}};gt.type="array-2d";let ae=gt;const xt=class xt extends v{constructor(){super(...arguments),this.type="sampler2D",this.children=[]}clone(){const t=new xt;return t.children=this.children.map(u),super.cloneInto(t),t}};xt.type="sampler2D";let ue=xt;var P;let y=(P=class extends v{constructor(t){super(),this.type="float",this.children=[t]}clone(){const t=new P(u(this.children[0]));return super.cloneInto(t),t}multiply(t){return I(this,typeof t=="number"?d(t,P):t)}divide(t){return k(this,typeof t=="number"?d(t,P):t)}add(t){return M(this,typeof t=="number"?d(t,P):t)}subtract(t){return S(this,typeof t=="number"?d(t,P):t)}},P.type="float",P);var q;let bt=(q=class extends v{constructor(t,e){super(),this.type="vec2",this.children=[t,e].filter(r=>r!=null)}clone(){const t=new Mt(u(this.children[0]),u(this.children[1]));return super.cloneInto(t),t}get 0(){return m(this,"[0]",y)}get 1(){return m(this,"[1]",y)}get 2(){throw new D}get 3(){throw new D}multiply(t){return I(this,typeof t=="number"?d(t,y):t)}divide(t){return k(this,typeof t=="number"?d(t,y):t)}add(t){return M(this,typeof t=="number"?d(t,y):t)}subtract(t){return S(this,typeof t=="number"?d(t,y):t)}},Mt=q,q.type="vec2",q);bt=Mt=x([T],bt);var R;let $t=(R=class extends v{constructor(t,e,r){super(),this.type="vec3",this.children=[t,e,r].filter(s=>s!=null)}get 0(){return m(this,"[0]",y)}get 1(){return m(this,"[1]",y)}get 2(){return m(this,"[2]",y)}get 3(){throw new D}clone(){const t=new kt(u(this.children[0]),u(this.children[1]),u(this.children[2]));return super.cloneInto(t),t}multiply(t){return I(this,typeof t=="number"?d(t,y):t)}divide(t){return k(this,typeof t=="number"?d(t,y):t)}add(t){return M(this,typeof t=="number"?d(t,y):t)}subtract(t){return S(this,typeof t=="number"?d(t,y):t)}},kt=R,R.type="vec3",R);$t=kt=x([T],$t);var G;let nt=(G=class extends v{constructor(t,e,r,s){super(),this.type="vec4",this.children=[t,e,r,s].filter(i=>i!=null)}clone(){const t=new St(u(this.children[0]),u(this.children[1]),u(this.children[2]),u(this.children[3]));return super.cloneInto(t),t}get 0(){return m(this,"[0]",y)}get 1(){return m(this,"[1]",y)}get 2(){return m(this,"[2]",y)}get 3(){return m(this,"[3]",y)}multiply(t){return I(this,typeof t=="number"?d(t,y):t)}divide(t){return k(this,typeof t=="number"?d(t,y):t)}add(t){return M(this,typeof t=="number"?d(t,y):t)}subtract(t){return S(this,typeof t=="number"?d(t,y):t)}},St=G,G.type="vec4",G);nt=St=x([T],nt);var H;let b=(H=class extends v{constructor(t){super(),this.type="uint",this.children=[t]}clone(){const t=new B(u(this.children[0]));return super.cloneInto(t),t}multiply(t){return I(this,d(t,B))}add(t){return M(this,d(t,B))}subtract(t){return S(this,d(t,B))}divide(t){return k(this,d(t,B))}},B=H,H.type="uint",H);b=B=x([T],b);var X;let At=(X=class extends v{constructor(t,e){super(),this.type="uvec2",this.children=[t,e].filter(r=>r!=null)}clone(){const t=new Pt(u(this.children[0]),u(this.children[1]));return super.cloneInto(t),t}get 0(){return m(this,"[0]",p)}get 1(){return m(this,"[1]",p)}get 2(){throw new D}get 3(){throw new D}multiply(t){return I(this,typeof t=="number"?d(t,b):t)}divide(t){return k(this,typeof t=="number"?d(t,b):t)}add(t){return M(this,typeof t=="number"?d(t,b):t)}subtract(t){return S(this,typeof t=="number"?d(t,b):t)}},Pt=X,X.type="uvec2",X);At=Pt=x([T],At);var Y;let Bt=(Y=class extends v{constructor(t,e,r){super(),this.type="uvec3",this.children=[t,e,r].filter(s=>s!=null)}clone(){const t=new Ct(u(this.children[0]),u(this.children[1]),u(this.children[2]));return super.cloneInto(t),t}get 0(){return m(this,"[0]",b)}get 1(){return m(this,"[1]",b)}get 2(){return m(this,"[2]",b)}get 3(){throw new D}multiply(t){return I(this,typeof t=="number"?d(t,b):t)}divide(t){return k(this,typeof t=="number"?d(t,b):t)}add(t){return M(this,typeof t=="number"?d(t,b):t)}subtract(t){return S(this,typeof t=="number"?d(t,b):t)}},Ct=Y,Y.type="uvec3",Y);Bt=Ct=x([T],Bt);var Q;let zt=(Q=class extends v{constructor(t,e,r,s){super(),this.type="uvec4",this.children=[t,e,r,s].filter(i=>i!=null)}clone(){const t=new Ft(u(this.children[0]),u(this.children[1]),u(this.children[2]),u(this.children[3]));return super.cloneInto(t),t}get 0(){return m(this,"[0]",b)}get 1(){return m(this,"[1]",b)}get 2(){return m(this,"[2]",b)}get 3(){return m(this,"[3]",b)}multiply(t){return I(this,typeof t=="number"?d(t,b):t)}divide(t){return k(this,typeof t=="number"?d(t,b):t)}add(t){return M(this,typeof t=="number"?d(t,b):t)}subtract(t){return S(this,typeof t=="number"?d(t,b):t)}},Ft=Q,Q.type="uvec4",Q);zt=Ft=x([T],zt);const _t=class _t extends v{constructor(t){super(),this.type="bool",this.children=[t]}and(t){return He(this,t)}or(t){return Le(this,t)}xor(t){return Re(this,t)}clone(){const t=new _t(u(this.children[0]));return super.cloneInto(t),t}};_t.type="bool";let N=_t;var Z;let Lt=(Z=class extends v{constructor(t,e){super(),this.type="bvec2",this.children=[t,e].filter(r=>r!=null)}all(){return ee(this)}any(){return re(this)}clone(){const t=new Et(u(this.children[0]),u(this.children[1]));return super.cloneInto(t),t}},Et=Z,Z.type="bvec2",Z);Lt=Et=x([T],Lt);var W;let qt=(W=class extends v{constructor(t,e,r){super(),this.type="bvec3",this.children=[t,e,r].filter(s=>s!=null)}all(){return ee(this)}any(){return re(this)}clone(){const t=new Kt(u(this.children[0]),u(this.children[1]),u(this.children[2]));return super.cloneInto(t),t}},Kt=W,W.type="bvec3",W);function d(n,t){return typeof n=="number"?new t(n):n}qt=Kt=x([T],qt);var J;let Rt=(J=class extends v{constructor(t,e,r,s){super(),this.type="bvec4",this.children=[t,e,r,s].filter(i=>i!=null)}all(){return ee(this)}any(){return re(this)}clone(){const t=new Dt(u(this.children[0]),u(this.children[1]),u(this.children[2]),u(this.children[3]));return super.cloneInto(t),t}},Dt=J,J.type="bvec4",J);Rt=Dt=x([T],Rt);const O=class O extends v{constructor(t){super(),this.type="int",this.children=[t]}multiply(t){return I(this,d(t,O))}add(t){return M(this,d(t,O))}subtract(t){return S(this,d(t,O))}divide(t){return k(this,d(t,O))}clone(){const t=new O(u(this.children[0]));return super.cloneInto(t),t}};O.type="int";let p=O;var tt;let Gt=(tt=class extends v{constructor(t,e){super(),this.type="ivec2",this.children=[t,e].filter(r=>r!=null)}clone(){const t=new Ut(u(this.children[0]),u(this.children[1]));return super.cloneInto(t),t}get 0(){return m(this,"[0]",p)}get 1(){return m(this,"[1]",p)}get 2(){throw new D}get 3(){throw new D}multiply(t){return I(this,typeof t=="number"?d(t,p):t)}divide(t){return k(this,typeof t=="number"?d(t,p):t)}add(t){return M(this,typeof t=="number"?d(t,p):t)}subtract(t){return S(this,typeof t=="number"?d(t,p):t)}},Ut=tt,tt.type="ivec2",tt);Gt=Ut=x([T],Gt);var et;let Ht=(et=class extends v{constructor(t,e,r){super(),this.type="ivec3",this.children=[t,e,r].filter(s=>s!=null)}clone(){const t=new jt(u(this.children[0]),u(this.children[1]),u(this.children[2]));return super.cloneInto(t),t}get 0(){return m(this,"[0]",p)}get 1(){return m(this,"[1]",p)}get 2(){return m(this,"[2]",p)}get 3(){throw new D}multiply(t){return I(this,typeof t=="number"?d(t,p):t)}divide(t){return k(this,typeof t=="number"?d(t,p):t)}add(t){return M(this,typeof t=="number"?d(t,p):t)}subtract(t){return S(this,typeof t=="number"?d(t,p):t)}},jt=et,et.type="ivec3",et);Ht=jt=x([T],Ht);var rt;let Xt=(rt=class extends v{constructor(t,e,r,s){super(),this.type="ivec4",this.children=[t,e,r,s].filter(i=>i!=null)}clone(){const t=new Ot(u(this.children[0]),u(this.children[1]),u(this.children[2]),u(this.children[3]));return super.cloneInto(t),t}get 0(){return m(this,"[0]",p)}get 1(){return m(this,"[1]",p)}get 2(){return m(this,"[2]",p)}get 3(){return m(this,"[3]",p)}multiply(t){return I(this,typeof t=="number"?d(t,p):t)}divide(t){return k(this,typeof t=="number"?d(t,p):t)}add(t){return M(this,typeof t=="number"?d(t,p):t)}subtract(t){return S(this,typeof t=="number"?d(t,p):t)}},Ot=rt,rt.type="ivec4",rt);Xt=Ot=x([T],Xt);const It=class It extends v{constructor(t,e,r,s){super(),this.type="mat2",this.children=[t,e,r,s]}clone(){const t=new It(u(this.children[0]),u(this.children[1]),u(this.children[2]),u(this.children[3]));return super.cloneInto(t),t}get(t,e){return Nt(this,new p(t),new p(e),y)}multiply(t){return I(this,t)}};It.type="mat2";let ce=It;const it=class it extends v{static identity(){return new it(1,0,0,0,1,0,0,0,1)}static fromRotation(t){const e=Qe(t),r=Ye(t);return new it(r,e,0,Ve(e),r,0,0,0,1)}constructor(t,e,r,s,i,o,h,c,a){super(),this.type="mat3",this.children=[t,e,r,s,i,o,h,c,a]}add(t){return M(this,t)}multiply(t){return I(this,t)}get(t,e){return Nt(this,new p(t),new p(e),y)}clone(){const t=new it(u(this.children[0]),u(this.children[1]),u(this.children[2]),u(this.children[3]),u(this.children[4]),u(this.children[5]),u(this.children[6]),u(this.children[7]),u(this.children[8]));return super.cloneInto(t),t}};it.type="mat3";let Yt=it;const ot=class ot extends v{static identity(){return new ot(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)}constructor(t,e,r,s,i,o,h,c,a,l,f,w,F,st,V,E){super(),this.type="mat4",this.children=[t,e,r,s,i,o,h,c,a,l,f,w,F,st,V,E]}static fromColumns(t,e,r,s){return new ot(t.x,t.y,t.z,t.w,e.x,e.y,e.z,e.w,r.x,r.y,r.z,r.w,s.x,s.y,s.z,s.w)}multiply(t){return I(this,t)}get(t,e){return Nt(this,new p(t),new p(e),y)}clone(){const t=new ot(u(this.children[0]),u(this.children[1]),u(this.children[2]),u(this.children[3]),u(this.children[4]),u(this.children[5]),u(this.children[6]),u(this.children[7]),u(this.children[8]),u(this.children[9]),u(this.children[10]),u(this.children[11]),u(this.children[12]),u(this.children[13]),u(this.children[14]),u(this.children[15]));return super.cloneInto(t),t}};ot.type="mat4";let he=ot;const je={float:y,vec2:bt,vec3:$t,vec4:nt,int:p,ivec2:Gt,ivec3:Ht,ivec4:Xt,uint:b,uvec2:At,uvec3:Bt,uvec4:zt,bool:N,bvec2:Lt,bvec3:qt,bvec4:Rt},hr=(...n)=>new p(...n),Oe=(...n)=>new y(...n),dr=(...n)=>new bt(...n),pr=(...n)=>new $t(...n),lr=(...n)=>new nt(...n),fr=(...n)=>new Yt(...n);function m(n,t,e){const r=new e(new Wt(t,n,e));return r.isImplicit=!0,r}function Nt(n,t,e,r){const s=new r(new Ce(t,e,n,r));return s.isImplicit=!0,s}function $(n,t,e,r=null){if(r){const i=new r,o=new r(new z(n,[t,e],!0,!1,i));return o.isImplicit=!0,o}if(t.type==="float"||t.type==="int"){const i=new e.constructor(new z(n,[t,e],!0,!1,e.constructor));return i.isImplicit=!0,i}if((t.type==="mat2"||t.type==="mat3"||t.type==="mat4")&&e.type!=="float"){const i=new e.constructor(new z(n,[t,e],!0,!1,e.constructor));return i.isImplicit=!0,i}const s=new t.constructor(new z(n,[t,e],!0,!1,t.constructor));return s.isImplicit=!0,s}function g(n,t,e=t.constructor){const r=new e(new z(n,[t],!1,!1,e));return r.isImplicit=!0,r}function U(n,t,e,r=t.constructor){const s=new r(new z(n,[t,e],!1,!1,r));return s.isImplicit=!0,s}function Tt(n,t,e,r,s=t.constructor){const i=new s(new z(n,[t,e,r],!1,!1,s));return i.isImplicit=!0,i}function Ve(n){return I(n,Oe(-1))}function te(n,t,e,r){return new t(new Fe(n,t,e,r))}function Ae(n,t,e=0,r=n.size){const s=new p(e).setMutable().setDebugName("FindIndexIterator"),i=t(n.get(s)).setDebugName("FindIndexPredicate");return te({iter:s},p,i,({out:h,iter:c,subgraph:a})=>`
${h} = -1;

for (; ${c} < ${r}; ${c}++) {

${a.body}

  if (${a.varName}) {
    ${h} = ${c};
    break;
  }

}
`).setDebugName("FindIndexBlock")}function Be(n,t,e=0,r=n.size){return te({array:n},p,null,({out:i,array:o})=>`
${i} = -1;
for (int i = ${e}; i < ${r}; i++) {
  bool condition;
  ${t({array:o,i:"i",out:"condition"})}
  if (condition) {
    ${i} = i;
    break;
  }
}
`).setDebugName("GlslFindIndexBlock")}function ze(n,t,e){const r=typeof t=="function"?t():t,s=typeof e=="function"?e():e,i=new r.constructor(new Jt(n,r,s));return i.isImplicit=!0,i}function yr(...n){const t=n.map(([h,c])=>typeof c=="function"?[h,c()]:[h,c]),e=t[0][1].constructor,r=t.findIndex(h=>h[0]===!0);if(r===-1)throw new Error("A cond must have a fallthrough case with `true`/; ");const s=t.slice(0,r),i=t[r][1],o=new e(s.reduceRight((h,c)=>ze(c[0],c[1],h),i));return o.isImplicit=!0,o}function I(n,t){return $("*",n,t)}function k(n,t){return $("/",n,t)}function M(n,t){return $("+",n,t)}function S(n,t){return $("-",n,t)}function mr(n,t){return $("%",n,t)}function gr(n,t){return $("<<",n,t)}function br(n,t){return $(">>",n,t)}function wr(n,t){return $("&",n,t)}function vr(n,t){return $("|",n,t)}function $r(n,t){return $("^",n,t)}function xr(n){return g("~",n)}function _r(n,t){return $("==",n,t,N)}function Ir(n,t){return $("!=",n,t,N)}function Nr(n,t){return $("<",n,t,N)}function Tr(n,t){return $("<=",n,t,N)}function Mr(n,t){return $(">",n,t,N)}function kr(n,t){return $(">=",n,t,N)}function Le(...n){return n.length<=1?n[0]:n.slice(1).reduce((t,e)=>qe(t,e),n[0])}function qe(n,t){return $("||",n,t,N)}function Re(...n){return n.length<=1?n[0]:n.slice(1).reduce((t,e)=>Ge(t,e),n[0])}function Ge(n,t){return $("^^",n,t,N)}function He(...n){return n.length<=1?n[0]:n.slice(1).reduce((t,e)=>Xe(t,e),n[0])}function Xe(n,t){return $("&&",n,t,N)}function Sr(n){return g("abs",n)}function Pr(n){return g("acos",n)}function Cr(n){return g("acosh",n)}function ee(n){return g("all",n,N)}function re(n){return g("any",n,N)}function Fr(n){return g("asin",n)}function Er(n){return g("asinh",n)}function Kr(n,t){return t==null?g("atan",n):U("atan",n,t,n.constructor)}function Dr(n){return g("atanh",n)}function Ur(n){return g("ceil",n)}function jr(n,t,e){return Tt("clamp",n,t,e,n.constructor)}function Ye(n){return g("cos",n)}function Or(n){return g("cosh",n)}function Vr(n,t){return U("distance",n,t,y)}function Ar(n,t){return U("dot",n,t,y)}function Br(n){return g("exp",n)}function zr(n){return g("floor",n)}function Lr(n){return g("fract",n)}function qr(n){return g("length",n,y)}function Rr(n){return g("log",n)}function Gr(n){return g("log2",n)}function Hr(n,t){return U("max",n,t)}function Xr(n,t){return U("min",n,t)}function Yr(n,t,e){return Tt("mix",n,t,e)}function Qr(n,t){return U("mod",n,t)}function Zr(n){return g("normalize",n)}function Wr(n){return n.type==="bool"?g("!",n):g("not",n)}function Jr(n,t){return U("pow",n,t)}function tn(n){return g("round",n)}function en(n){return g("sign",n)}function Qe(n){return g("sin",n)}function rn(n){return g("sinh",n)}function nn(n,t,e){return Tt("smoothstep",n,t,e)}function sn(n){return g("sqrt",n)}function on(n,t){return U("step",n,t,t.constructor)}function an(n){return g("tan",n)}function un(n){return g("tanh",n)}function cn(n,t,e){return Tt("texelFetch",n,t,e,nt)}function hn(n,t){return U("texture",n,t,nt)}function dn(n,t){const{initialValue:e,xRange:r,yRange:s,callback:i}=t,[o,h]=r,[c,a]=s,l=new p(0).setMutable().setDebugName("iterX"),f=new p(0).setMutable().setDebugName("iterY"),w=e.setMutable().setDebugName("accumulator"),F=i(w,n.get(l,f),l,f).setDebugName("callback");return te({iterX:l,iterY:f,accumulator:w},e.constructor,F,({out:V,iterX:E,iterY:A,accumulator:ut,subgraph:ct})=>`
for (${A} = ${c}; ${A} < ${a}; ${A}++) {
  for (${E} = ${o}; ${E} < ${h}; ${E}++) {

  ${ct.body}

  ${ut} = ${ct.varName};
  }
}
${V} = ${ut};
`).setDebugName("reduce2DBody")}const pt=5;function _(n,t,e){const r=t.split(`
`);for(const s of r)if(s.trim().length){{let i="";e!=null&&(i+=`/*id:${e??"000"}*/   `),n.body+=i.padEnd(14)}n.body+=" ".repeat(n.indent)+s+`
`}}let de=class{write(t){for(const e of t.rootOutputNodes())t.shouldPruneOutputNode(e)||(e.variableName=this._write(t,e.node));return t}_createVarName(t,e){let r="";return typeof e!="boolean"&&typeof e!="number"&&e.debugInfo.name&&(r=`${e.debugInfo.name}_`),`${r}v${t.varCount++}`}_write(t,e,r=!1){if(typeof e=="number"||typeof e=="boolean")return e.toString();let s=t.getEmit(e);if(s)return s;switch(e.shaderType){case"scope-node":s=this._writeScopeNode(t,e);break;case"primitive-node":s=this._writePrimitiveNode(t,e,r);break;case"function-node":s=this._writeFunctionNode(t,e);break;case"property-access-node":s=this._writePropertyAccessNode(t,e);break;case"property-access-2d-node":s=this._writePropertyAccess2DNode(t,e);break;case"text-node":s=e.text;break;case"block-node":s=this._writeBlockNode(t,e);break;case"condition-node":s=this._writeConditionNode(t,e)}return t.setEmit(e,s),s}_writeScopeNode(t,e){const r=new e.child.constructor;r.setDebugName(e.debugInfo.name);const s=this._write(t,r,!0);return _(t,`{ /*ScopeStart: ${e.uid} ${e.debugInfo.name}*/`),t.indent+=2,_(t,`${s} = ${this._write(t,e.child)};`),t.indent-=2,_(t,`} /*ScopeEnd: ${e.uid} ${e.debugInfo.name}*/`),s}_writeConditionNode(t,e){const r=new e.ifTrue.constructor,s=this._write(t,r,!0);_(t,`if (${this._write(t,e.condition)}) {`),t.indent+=2;const i=t.createSubgraphContext(),o=this._write(i,e.ifTrue);if(t.body+=i.body,o&&_(t,`${s} = ${o};`),t.indent-=2,_(t,"}"),e.ifFalse){_(t,"else {"),t.indent+=2;const h=t.createSubgraphContext(),c=this._write(h,e.ifFalse);t.body+=h.body,c&&_(t,`${s} = ${c};`),t.indent-=2,_(t,"}")}return s}_writeBlockNode(t,e){const{captureList:r,generator:s,returnType:i}=e,o={};for(const l in r){if(!r[l])continue;const f=this._write(t,r[l]);o[l]=f}const h=new i,c=this._write(t,h,!0);if(o.out=c,e.subgraph){const l=t.createSubgraphContext(),f=this._write(l,e.subgraph.child),w=l.body;o.subgraph={varName:f,body:w}}const a=s(o);return _(t,`{
`),t.indent+=2,_(t,a),t.indent-=2,_(t,`}
`),c}_writePropertyAccessNode(t,e){const r=this._write(t,e.target);return typeof e.property=="string"&&e.property.includes("[")?`${r}${e.property}`:typeof e.property!="string"?`${r}[${this._write(t,e.property)}]`:`${r}.${e.property}`}_writePropertyAccess2DNode(t,e){return`${this._write(t,e.target)}[${this._write(t,e.x)}][${this._write(t,e.y)}]`}_writeFunctionNode(t,e){const r=e.returnType.type;if(e.isInfix){const[o,h]=e.children.map(a=>this._write(t,a)),c=this._createVarName(t,e);return _(t,`${r.padEnd(pt)} ${c} = ${o} ${e.token} ${h};`,e.uid),c}const s=e.children.map(o=>this._write(t,o)).join(", "),i=this._createVarName(t,e);return _(t,`${r.padEnd(pt)} ${i} = ${e.token}(${s});`,e.uid),i}_writePrimitiveNode(t,e,r=!1){const s=t.getInput(e);if(s)return s.isUsed=!0,s.variableName;const i=e.children.length===1&&e.children[0]?.type===e.type;if(!e.isMutable&&(e.isImplicit||i))return this._write(t,e.children[0]);const o=this._createVarName(t,e);if(r)return _(t,`${e.type.padEnd(pt)} ${o};`,e.uid),o;const h=!e.debugInfo.name&&!e.isMutable;if(h&&e.type==="float"&&typeof e.children[0]=="number")return Number.isInteger(e.children[0])?e.children[0].toFixed(1):e.children[0].toString();if(h&&e.type==="int"&&typeof e.children[0]=="number"&&Number.isInteger(e.children[0]))return e.children[0].toString();const c=e.children.map(a=>this._write(t,a)).join(", ");return e.type==="array"?(_(t,`${e.type.padEnd(pt)} ${o} = [${c}];`,e.uid),o):h?`${e.type}(${c})`:(_(t,`${e.type.padEnd(pt)} ${o} = ${e.type}(${c});`,e.uid),o)}};class j{constructor(t,e,r,s=[]){this.variableName=t,this.variableInputType=e,this.node=r,this.qualifiers=s,this.type="shader-input",this.isUsed=!1}clone(){return new j(this.variableName,this.variableInputType,u(this.node),[...this.qualifiers])}}let C=class ve{constructor(t,e,r,s=[]){this.outVariableName=t,this.outVariableType=e,this.node=r,this.qualifiers=s,this.type="shader-output"}clone(){const t=new ve(this.outVariableName,this.outVariableType,u(this.node),[...this.qualifiers]);return t.variableName=this.variableName,t}},pe=class vt{static createVertex(t,e,r,s,i,o){const h=[];for(const a in t){const l=t[a],f=r.get(a);f?h.push(new j(f,"builtin",l)):h.push(new j("a_"+a,"in",l))}for(const a of s){const l=a.uniformHydrated;h.push(new j(a.uniformName,"uniform",l))}const c=[];for(const a in e){const l=e[a];if(a==="glPosition")c.push(new C("gl_Position","builtin",l));else if(a==="glPointSize")c.push(new C("gl_PointSize","builtin",l));else{const f=Ze(l),w=[];f&&w.push(f),c.push(new C("v_"+a,"out",l,w))}}return new vt(h,c,i,o)}static createFragment(t,e,r,s,i,o){const h=[],c=Array.from(i.rootOutputNodes());for(const l in t){const f=t[l],w=r.get(l);if(w){h.push(new j(w,"builtin",f));continue}const F=c.find(st=>st.node===f);F&&h.push(new j(F.outVariableName,"in",f))}for(const l of s){const f=l.uniformHydrated;h.push(new j(l.uniformName,"uniform",f))}const a=[];for(const l in e){const f=e[l],w=r.get(l);switch(l){case"discard":a.push(new C(null,"discard",f));break;case"fragData0":a.push(new C("fragData0","fragData0",f));break;case"fragData1":a.push(new C("fragData1","fragData1",f));break;case"fragData2":a.push(new C("fragData2","fragData2",f));break;case"fragData3":a.push(new C("fragData3","fragData3",f));break;default:w?a.push(new C(w,"builtin",f)):a.push(new C(l,"out",f))}}return new vt(h,a,o)}constructor(t,e,r,s){this.type="shader-graph-context",this.indent=0,this.body="",this.varCount=0,this._inputShaderTypesByNodeUid=new Map,this._nodeEmitMap=new Map;for(const i of t)this._inputShaderTypesByNodeUid.set(i.node.uid,i);this._outputShaderTypes=e,this._transformFeedbackBindings=r,this._transformFeedbackNames=new Set(r.map(i=>"v_"+i.propertyKey)),this._usedInFragmentShader=s}shouldPruneOutputNode(t){return!!this._usedInFragmentShader&&t.outVariableType!=="builtin"&&!this._transformFeedbackNames.has(t.outVariableName)&&!this._usedInFragmentShader.has(t.node.uid)}setEmit(t,e){this._nodeEmitMap.set(t.uid,e)}getEmit(t){return this._nodeEmitMap.get(t.uid)}inputs(){return this._inputShaderTypesByNodeUid.values()}getInput(t){return this._inputShaderTypesByNodeUid.get(t.uid)}*rootOutputNodes(){for(const t of this._outputShaderTypes)yield t}*nodes(){const t=[];for(const e of this._outputShaderTypes.values())t.push(e.node);for(;t.length;){const e=t.pop();typeof e!="number"&&typeof e!="boolean"&&t.push(...e.children.filter(Boolean)),yield e}}*nodesOfTypeOrFunction(){for(const t of this.nodes())typeof t!="number"&&typeof t!="boolean"&&(yield t)}createSubgraphContext(){const t=this.clone();return t.body="",t.indent=this.indent+2,t._nodeEmitMap=new Map(this._nodeEmitMap),t}clone(){const t=new vt([],this._outputShaderTypes,this._transformFeedbackBindings,this._usedInFragmentShader);return t._inputShaderTypesByNodeUid=this._inputShaderTypesByNodeUid,t.indent=this.indent,t.body=this.body,t.varCount=this.varCount,t._nodeEmitMap=this._nodeEmitMap,t}insertVertexShader(t){t.vertex.code.add(""),this._insertInputs(t,"vertex"),t.vertex.code.add(""),t.vertex.code.add("// OUTPUTS: "),t.vertex.code.add("// --------------------------------------------------------- ");for(const e of this.rootOutputNodes()){const r=e.outVariableType==="builtin";if(!this.shouldPruneOutputNode(e))if(r)t.vertex.code.add(`// ${e.outVariableType.padEnd(7)} ${e.node.type.padEnd(9)} ${e.outVariableName};`);else{const s=[...e.qualifiers,e.outVariableType].join(" ");t.vertex.code.add(`${s.padEnd(10)} ${e.node.type.padEnd(9)} ${e.outVariableName};`)}}t.vertex.code.add(""),t.vertex.code.add("void main() {"),t.vertex.code.add("  "+this.body.split(`
`).join(`
  `));for(const e of this.rootOutputNodes())this.shouldPruneOutputNode(e)||t.vertex.code.add(`  ${e.outVariableName} = ${e.variableName};`);t.vertex.code.add("}")}insertFragmentShader(t){this._insertInputs(t,"fragment"),t.fragment.code.add(""),t.fragment.code.add("// OUTPUTS: "),t.fragment.code.add("// --------------------------------------------------------- ");let e=0;for(const r of this.rootOutputNodes())r.outVariableType==="builtin"?t.fragment.code.add(`// ${r.outVariableType.padEnd(7)} ${r.node.type.padEnd(9)} ${r.outVariableName};`):t.outputs.add(r.outVariableName,r.node.type,e++);t.fragment.code.add(""),t.fragment.code.add("void main() {"),t.fragment.code.add("  "+this.body.split(`
`).join(`
  `));for(const r of this.rootOutputNodes())r.outVariableType==="discard"?(t.fragment.code.add("  // TODO: Should ensure codegen for discard appears first in fragment shader"),t.fragment.code.add(`  if (${r.variableName}) {`),t.fragment.code.add("    discard;"),t.fragment.code.add("  }"),t.fragment.code.add("  ")):t.fragment.code.add(`  ${r.outVariableName} = ${r.variableName};`);t.fragment.code.add("}")}_insertInputs(t,e){t[e].code.add("// INPUTS: "),t[e].code.add("// --------------------------------------------------------- ");for(const r of this.inputs())if(r.isUsed&&r.variableInputType!=="builtin")if(r.node.type==="array")t[e].code.add(`${r.variableInputType.padEnd(10)} ${r.node.elementType.type.padEnd(9)} ${r.variableName}[${r.node.size}];`);else if(r.node.type==="array-2d")t[e].code.add(`${r.variableInputType.padEnd(10)} ${r.node.elementType.type.padEnd(9)} ${r.variableName}[${r.node.size}]; // Emulated 2D Array. Not supported by ES3.0`);else{const s=[...r.qualifiers,r.variableInputType].join(" ");t[e].code.add(` ${s.padEnd(10)} ${r.node.type.padEnd(9)} ${r.variableName};`)}}};function Ze(n){switch(n.type){case"float":case"vec2":case"vec3":case"vec4":return null;case"int":case"ivec2":case"ivec3":case"ivec4":case"uint":case"uvec2":case"uvec3":case"uvec4":case"bool":case"bvec2":case"bvec3":case"bvec4":return"flat";case"mat2":case"mat3":case"mat4":case"array":case"sampler2D":case"array-2d":throw new Error(`InternalError: ${n.type} is not a valid output type`)}}function We(n,t,e){const r=new $e(t.width,t.height);return r.dataType=t.dataType,t.depth&&(r.depth=t.depth),t.flipped&&(r.flipped=t.flipped),t.hasMipmap&&(r.hasMipmap=t.hasMipmap),r.internalFormat=t.internalFormat,t.isImmutable&&(r.isImmutable=t.isImmutable),t.isOpaque&&(r.isOpaque=t.isOpaque),t.maxAnisotropy&&(r.maxAnisotropy=t.maxAnisotropy),r.pixelFormat=t.pixelFormat,t.preMultiplyAlpha&&(r.preMultiplyAlpha=t.preMultiplyAlpha),t.samplingMode&&(r.samplingMode=t.samplingMode),t.target&&(r.target=t.target),r.uniform=t.uniform,t.unpackAlignment&&(r.unpackAlignment=t.unpackAlignment),t.wrapMode&&(r.wrapMode=t.wrapMode),new xe(n,r,e)}const Je=()=>fe.getLogger("esri.views.2d.engine.webgl.shaderGraph.typed.TypedShaderProgram");function lt(n,t,e){const r=t.length;if(r!==e){const s=new Ne("Invalid Uniform",`Invalid length, expected ${e} but got ${r}`,{uniformName:n,values:t});Je().errorOnce(s)}}let le=class{constructor(t,e,r,s,i){this.vertexShader=t,this.fragmentShader=e,this._locations=r,this._uniformBindings=s,this._transformFeedbackBindings=i,this._vao=null,this._temporaryTextures=[]}destroy(){this._program=_e(this._program),this.cleanupTemporaryTextures()}setUniforms(t){this._uniforms=t}cleanupTemporaryTextures(){for(const t of this._temporaryTextures)t.dispose();this._temporaryTextures=[]}bind(t){const e=this._uniforms;if(!this._program){const s=[];for(const i of this._transformFeedbackBindings??[]){const{index:o,propertyKey:h}=i;s[o]=`v_${h}`}this._program=new Te(t,this.vertexShader,this.fragmentShader,this._locations,new Map,s)}const r=this._program;t.useProgram(r);for(const s of this._uniformBindings){const{shaderModulePath:i,uniformName:o,uniformType:h,uniformArrayLength:c}=s,a=Ie(i,e);if(a==null){if(h==="sampler2D")continue;throw new Error(`Failed to find uniform value for ${i}`)}switch(h==="array"||h==="array-2d"?s.uniformArrayElementType:h){case"sampler2D":{const{unit:l,texture:f}=a;if(r.setUniform1i(o,l),"type"in f)t.bindTexture(f,l);else{const w=We(t,f.descriptor,f.data);t.bindTexture(w,l)}break}case"int":if(!c){r.setUniform1i(o,a);break}lt(s.uniformName,a,c),r.setUniform1iv(o,a);break;case"float":if(!c){r.setUniform1f(o,a);break}lt(s.uniformName,a,c),r.setUniform1fv(o,a);break;case"vec2":if(!c){r.setUniform2f(o,a[0],a[1]);break}lt(s.uniformName,a,c),r.setUniform2fv(o,a.flat());break;case"vec3":if(!c){r.setUniform3f(o,a[0],a[1],a[2]);break}lt(s.uniformName,a,c),r.setUniform3fv(o,a.flat());break;case"vec4":if(!c){r.setUniform4f(o,a[0],a[1],a[2],a[3]);break}lt(s.uniformName,a,c),r.setUniform4fv(o,a.flat());break;case"mat3":r.setUniformMatrix3fv(o,a);break;case"mat4":r.setUniformMatrix4fv(o,a);break;default:throw new Error(`Unable to set uniform for type ${h}`)}}}};function ft(n){return new n}function at(n,t,e){const r=n.constructor[t]??[];n.constructor.hasOwnProperty(t)||Object.defineProperty(n.constructor,t,{value:r.slice()}),n.constructor[t].push(e)}function fn(n,t){return(e,r)=>{at(e,"locations",{typeCtor:t,propertyKey:r,parameterIndex:null,index:n})}}const tr=n=>(t,e)=>{at(t,"builtins",{builtin:n,propertyKey:e})},yn=n=>(t,e,r)=>{at(t,"inputs",{inputCtor:n,propertyKey:e,parameterIndex:r})},mn=n=>(t,e)=>{at(t,"uniforms",{typeCtor:n,propertyKey:e})},gn=n=>(t,e)=>{at(t,"options",{typeCtor:n,propertyKey:e})},bn=(n,t)=>{at(n,"defines",{propertyKey:t})},Qt=(n,t)=>(e,r)=>{e.constructor.builtins.push({builtin:n,propertyKey:r,typeCtor:t})},ne=class ne{};ne.builtins=[];let Zt=ne;x([Qt("gl_VertexID",p)],Zt.prototype,"glVertexID",void 0);class wn{}const se=class se{};se.builtins=[];let wt=se;x([Qt("gl_FragCoord",nt)],wt.prototype,"glFragCoord",void 0),x([Qt("gl_PointCoord",bt)],wt.prototype,"glPointCoord",void 0);let er=class{};x([tr("gl_FragDepth")],er.prototype,"glFragDepth",void 0);let $n=class{constructor(){this.type="uniform-group"}get _uniforms(){return this.constructor.uniforms??[]}},_n=class{constructor(){this.logShader=!1,this.computeAttributes={}}get vertexInput(){const t=this._shaderModuleClass.inputs.findLast(e=>e.propertyKey==="vertex"&&e.parameterIndex===0);if(!t)throw new Error("Unable to find vertex input parameter");return t}get computeInput(){return this._shaderModuleClass.inputs.findLast(t=>t.propertyKey==="vertex"&&t.parameterIndex===1)}get fragmentInput(){const t=this._shaderModuleClass.inputs.findLast(e=>e.propertyKey==="fragment");if(!t)throw new Error("Unable to find fragment input parameter");return t}get transformFeedbackBindings(){return this.fragmentInput.inputCtor.transformFeedbackBindings??[]}get locations(){return[...this.vertexInput.inputCtor.locations,...this.computeInput?.inputCtor.locations??[]]}get locationsMap(){const t=new Map,e=new Set;for(const r of this.locations)e.has(r.index)?fe.getLogger("esri.views.2d.engine.webgl.shaderGraph.GraphShaderModule").warnOnce("mapview-rendering",`Unable to assigned attribute ${r.propertyKey} to ${r.index}. Index already in use`,{locationsMap:t}):(t.set(r.propertyKey,r.index),e.add(r.index));return t}get locationInfo(){if(!this._locationInfo){const t=this.locationsMap,e=Array.from(t.entries()).map(([s,i])=>`${s}.${i}`).join("."),r=this.computeAttributes;this._locationInfo={stringHash:e,locations:t,computeAttributeMap:r}}return this._locationInfo}get renamedLocationsMap(){const t=new Map;for(const e of this.locations)t.set("a_"+e.propertyKey,e.index);return t}get optionPropertyKeys(){if(!this._optionPropertyKeys){const t=new Set;for(const e of this._options)t.add(e.propertyKey);this._optionPropertyKeys=t}return this._optionPropertyKeys}get _shaderModuleClass(){return this.constructor}get _defines(){return this._shaderModuleClass.defines??[]}get _options(){return this._shaderModuleClass.options??[]}get _uniforms(){return this._shaderModuleClass.uniforms??[]}getProgram(t,e,r,s){try{const{vertex:i,fragment:o,uniformBindings:h}=this._generateShaders(t,e,r,s);return new le(i,o,this.renamedLocationsMap,h,this.transformFeedbackBindings)}catch{return new le("","",this.renamedLocationsMap,[],this.transformFeedbackBindings)}}getDebugUniformClassInfo(t){const e=this._options.find(s=>s.propertyKey===t);if(e)return{type:"option",className:e.typeCtor};const r=this._uniforms.find(s=>s.propertyKey===t);if(!r)throw new Error(`Unable to find uniform class type for property: ${t}`);return{type:"required",className:r.typeCtor}}getShaderKey(t,e,r,s){const i=Object.keys(t).map(a=>`${a}.${t[a]}`).join("."),o=Object.keys(r).map(a=>`${a}.${r[a]}`).join("."),h=Object.keys(s).map(a=>`${a}.${s[a]}`).join("."),c=Object.keys(e).filter(a=>this.optionPropertyKeys.has(a)&&e[a]).join(".");return`${this.type}.${i}.${o}.${h}.${c}`}_generateShaders(t,e,r,s){const i=[];this._setDefines(r),this._setOptionalUniforms(i,e),this._setRequiredUniforms(i);const o=this._hydrateVertexInput(s),h=this._injectPackPrecisionFactor(o,t),c=this._hydrateComputeInput(),a=c&&this._injectComputePackPrecisionFactor(c,t),l=this.vertex(h,a),f=this._hydrateFragmentInput(l),w=this.fragment(f),F=new Set;for(const ht in w){const dt=w[ht];Se(F,dt)}const st=this._getVertexInputBuiltins(),V={};for(const[ht,dt]of Object.entries(o))V[ht]=dt;if(c!=null)for(const[ht,dt]of Object.entries(c))V[ht]=dt;const E=pe.createVertex(V,l,st,i,this.transformFeedbackBindings,F);new de().write(E);const A=this._getFragmentInputBuiltins(w);A.set("glPointCoord","gl_PointCoord"),A.set("glFragCoord","gl_FragCoord");const ut=pe.createFragment(f,w,A,i,E,this.transformFeedbackBindings);new de().write(ut);const ct=this._createShaderBuilder(E,ut),ie=ct.generate("vertex"),oe=ct.generate("fragment");return this.logShader&&(console.log(ie),console.log(oe)),{vertex:ie,fragment:oe,uniformBindings:i}}_setDefines(t){for(const e in t)this[e]=t[e]}_setOptionalUniforms(t,e){for(const r of this._options)e[r.propertyKey]?this[r.propertyKey]=this._hydrateUniformGroup(t,r):this[r.propertyKey]=null}_setRequiredUniforms(t){for(const e of this._uniforms)this[e.propertyKey]=this._hydrateUniformGroup(t,e)}_hydrateUniformGroup(t,e){const r=new e.typeCtor;for(const s of r._uniforms??[]){const i=ft(s.typeCtor),o=`u_${e.propertyKey}_${s.propertyKey}`,h=i.type,c=[e.propertyKey,s.propertyKey].join(".");if("type"in s.typeCtor&&s.typeCtor.type==="array"){const a=i;t.push({shaderModulePath:c,uniformName:o,uniformType:h,uniformArrayLength:a.size,uniformArrayElementType:a.elementType.type,uniformHydrated:i})}else if("type"in s.typeCtor&&s.typeCtor.type==="array-2d"){const a=i;t.push({shaderModulePath:c,uniformName:o,uniformType:h,uniformArrayLength:a.size,uniformArrayElementType:a.elementType.type,uniformHydrated:i})}else t.push({shaderModulePath:c,uniformName:o,uniformType:h,uniformHydrated:i});r[s.propertyKey]=i}return r}_hydrateVertexInput(t){const e=this.vertexInput.inputCtor,r=e.locations.reduce((s,i)=>t[i.propertyKey]===!1?s:{...s,[i.propertyKey]:ft(i.typeCtor)},{});for(const{propertyKey:s,typeCtor:i}of e.builtins){const o=ft(i);r[s]=o}return r}_hydrateComputeInput(){return this.computeInput==null?null:this.computeInput.inputCtor.locations.reduce((t,e)=>({...t,[e.propertyKey]:ft(e.typeCtor)}),{})}_injectPackPrecisionFactor(t,e){const r={};for(const s in t){const i=t[s],o=e[s];if(o){if(i.type!=="float"&&i.type!=="vec2"&&i.type!=="vec3"&&i.type!=="vec4")throw new Error(`InternalError: packPrecisionFactor requires GenType, but found ${i.type}`);r[s]=i.divide(new y(o))}else r[s]=i}return r}_injectComputePackPrecisionFactor(t,e){const r={},s=new Map;for(const i in this.computeAttributes)for(const o of this.computeAttributes[i]??[])s.set(o,i);for(const i in t){const o=t[i],h=s.get(i);if(!h)continue;const c=e[h];if(c){if(o.type!=="float"&&o.type!=="vec2"&&o.type!=="vec3"&&o.type!=="vec4")throw new Error(`InternalError: packPrecisionFactor requires GenType, but found ${o.type}`);r[i]=o.divide(new y(c))}else r[i]=o}return r}_hydrateFragmentInput(t){const e={};for(const r in t)e[r]=t[r];for(const{propertyKey:r,typeCtor:s}of wt.builtins){const i=ft(s);e[r]=i}return e}_getVertexInputBuiltins(){const t=this.vertexInput.inputCtor,e=new Map;for(const{builtin:r,propertyKey:s}of t.builtins)e.set(s,r);return e}_getFragmentInputBuiltins(t){const e=t.constructor,r=new Map;for(const s of e.builtins??[])r.set(s.propertyKey,s.builtin);return r}_createShaderBuilder(t,e){const r=new Me;return this._insertDebugInfo(r),t.insertVertexShader(r),e.insertFragmentShader(r),r}_insertDebugInfo(t){t.vertex.code.add("// DEFINES: "),t.vertex.code.add("// --------------------------------------------------------- ");for(const e of this._defines)this[e.propertyKey]?t.vertex.code.add(`//   ${e.propertyKey}: true`):t.vertex.code.add(`//   ${e.propertyKey}: false`);t.vertex.code.add(""),t.vertex.code.add("// OPTIONS: "),t.vertex.code.add("// --------------------------------------------------------- ");for(const e of this._options)this[e.propertyKey]?t.vertex.code.add(`//   ${e.propertyKey}: true`):t.vertex.code.add(`//   ${e.propertyKey}: false`)}};export{N as $,sn as A,Tr as B,y as C,Nr as D,nn as E,Vt as F,Mr as G,Br as H,wt as I,he as J,Kr as K,qr as L,Ye as M,p as N,tn as O,_n as P,Sr as Q,I as R,mr as S,Lr as T,ue as U,cn as V,Jr as W,Hr as X,$t as Y,Gt as Z,nt as _,Qr as a,hr as a0,en as a1,gn as a2,Ve as a3,Ir as a4,kr as a5,Re as a6,Le as a7,He as a8,$r as a9,le as aA,xr as aa,br as ab,gr as ac,vr as ad,wr as ae,un as af,an as ag,rn as ah,Or as ai,Dr as aj,Er as ak,Fr as al,Cr as am,Pr as an,Ur as ao,Gr as ap,Rr as aq,dn as ar,ae as as,te as at,wn as au,ce as av,Vr as aw,Wr as ax,Zr as ay,fr as az,_r as b,bt as c,hn as d,Yr as e,fn as f,yn as g,pr as h,Zt as i,$n as j,ar as k,lr as l,mn as m,bn as n,dr as o,ze as p,jr as q,Yt as r,Oe as s,Xr as t,Qe as u,er as v,Ar as w,on as x,yr as y,zr as z};
