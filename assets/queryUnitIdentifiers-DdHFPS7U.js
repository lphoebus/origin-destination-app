import{bv as I,bb as r,bc as i,dF as d,bd as g,dI as y,dK as m,dJ as j,aR as U}from"./index-C2z3vZ9k.js";let s=class extends I{constructor(n){super(n),this.container=null,this.ranges=null}readContainer(n,e){return{sourceId:e.sourceId,globalId:e.globalId}}readRanges(n,e){return[...e.gaps.map((t=>({firstUnit:t.start,numUnits:t.end-t.start+1,isGap:!0}))),...e.unitIdentifiers.map((t=>({firstUnit:t.firstUnit,numUnits:t.numUnits,isGap:!1,content:{sourceId:t.sourceId,globalId:t.globalId}})))]}};r([i({type:Object})],s.prototype,"container",void 0),r([d("container",["sourceId","globalId"])],s.prototype,"readContainer",null),r([i({type:[Object]})],s.prototype,"ranges",void 0),r([d("ranges",["gaps","unitIdentifiers"])],s.prototype,"readRanges",null),s=r([g("esri.rest.networks.unitIdentifiers.support.UnitQueryResult")],s);async function h(n,e,t){const a=y(n),o=e.toJSON();e.objects&&(o.objects=JSON.stringify(e.objects));const u={...o,f:"json"},p=m({...a.query,...u}),c=j(p,{...t,method:"post"}),l=`${a.path}/unitIdentifiers/query`,{data:b}=await U(l,c);return b.objects.map((f=>s.fromJSON(f)))}export{h as queryUnitIdentifiers};
