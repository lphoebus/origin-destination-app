import{gj as E,gq as S,cc as V,gp as U,cE as I,cP as l,ll as L,jV as P,cg as T,cV as $,jF as b,jG as B,nJ as f,j4 as M,dB as j}from"./index-Bkom2Sdc.js";import{b as O,Q as W,r as A,w as _,f as R,E as N,h as C}from"./HUDMaterial.glsl-5DTES5s6.js";import{b as q,v as w}from"./sphere-DYgRQGlT.js";class z{get ray(){return this._ray}get distanceInRenderSpace(){return this.distance==null?null:(S(d,this.ray.direction,this.distance),E(d))}withinDistance(e){return!!G(this)&&this.distanceInRenderSpace<=e}getIntersectionPoint(e){return!!G(this)&&(S(d,this.ray.direction,this.distance),U(e,this.ray.origin,d),!0)}getTransformedNormal(e){return l(h,this.normal),h[3]=0,P(h,h,this.transformation),l(e,h),I(e,e)}constructor(e){this.intersector=4,this.normal=V(),this.transformation=T(),this._ray=q(),this.init(e)}init(e){this.distance=this.target=this.drapedLayerOrder=this.renderPriority=null,this.intersector=4,w(e,this._ray)}set(e,r,t,s,i,a,c){this.intersector=e,this.distance=t,l(this.normal,s??$),b(this.transformation,i??B),this.target=r,this.drapedLayerOrder=a,this.renderPriority=c}copy(e){w(e.ray,this._ray),this.intersector=e.intersector,this.distance=e.distance,this.target=e.target,this.drapedLayerOrder=e.drapedLayerOrder,this.renderPriority=e.renderPriority,l(this.normal,e.normal),b(this.transformation,e.transformation)}}function G(n){return n?.distance!=null}const d=V(),h=L();class D{constructor(e){this.layerViewUid=e}}class F extends D{constructor(e,r){super(e),this.graphicUid=r}}class J extends F{constructor(e,r,t,s,i){super(e,r),this.layerViewUid=e,this.graphicUid=r,this.triangleNr=t,this.baseBoundingSphere=s,this.numLodLevels=i}}class Q{constructor(e,r,t,s){this.material=e,this.buffer=r,this.numVertices=t,this.boundingInfo=s,this.bufferWriter=e.createBufferWriter()}get layout(){return this.bufferWriter.layout}get numTriangles(){return this.numVertices/3}computeUsedMemory(){return this.buffer.byteLength+j}get renderGeometry(){return this}intersect(e,r,t,s,i,a,c,u){const o=this.bufferWriter,m=this.buffer;o.intersect(m,this.material.parameters,null,e,t,s,(g,p,x)=>v(g,p,x,e,r,a,c,i,u))}}class k{constructor(e){this.engineGeometry=e;const r=this.material,t=this.engineGeometry,s=t.attributes,i=t.boundingInfo,a=r.createBufferWriter(),c=a.layout,u=a.elementCount(s),o=c.createBuffer(u);a.write(null,null,s,null,o,0),this.renderGeometry=new Q(r,o.buffer,u,i)}get material(){return this.engineGeometry.material}get numVertices(){return this.engineGeometry.indexCount}get numTriangles(){return this.numVertices/3}get boundingInfo(){return this.engineGeometry.boundingInfo}computeUsedMemory(){return Array.from(this.engineGeometry.attributes.values()).reduce((e,r)=>e+M(r.data,r.indices),0)}intersect(e,r,t,s,i,a,c,u){const o=this.engineGeometry;this.material.intersect(o,e.transform.transform,e,t,s,(m,g,p)=>v(m,g,p,e,r,a,c,i,u))}}function v(n,e,r,t,s,i,a,c,u){if(n<0||s&&!s(t.rayBegin,t.rayEnd,n))return;const o=new J(i.layerViewUid,i.graphicUid(c),r,a,u);if((t.results.min.distance==null||n<t.results.min.distance)&&t.results.min.set(3,o,n,e,t.transform.transform),(t.results.max.distance==null||n>t.results.max.distance)&&t.results.max.set(3,o,n,e,t.transform.transform),t.options.store===2){const m=new z(t.results.min.ray);m.set(3,o,n,e,t.transform.transform),t.results.all.push(m)}}let H=class{constructor(e,r=null){this.geometry=e,this.textures=r}get material(){return this.geometry.material}get numTriangles(){return this.geometry.numTriangles}};class K{constructor(e,r,t){this.components=e,this.minScreenSpaceRadius=r,this.pivotOffset=t;const s=f(this.components.map(i=>i.geometry));this.numVertices=s.reduce((i,a)=>i+a.numVertices,0)}}class X{constructor(e){this.levels=e,this.levels.sort((r,t)=>r.minScreenSpaceRadius===t.minScreenSpaceRadius?r.numVertices-t.numVertices:r.minScreenSpaceRadius-t.minScreenSpaceRadius)}get materialParameters(){return this.levels[0].components[0].geometry.material.parameters}getMaterials(){const e=[];return this.levels.forEach(r=>r.components.forEach(t=>e.push(t.geometry.material))),f(e)}getTextures(){const e=new Array;return this.levels.forEach(r=>r.components.forEach(t=>{t.textures!=null&&e.push(...t.textures)})),f(e)}getGeometries(){const e=new Array;return this.levels.forEach(r=>r.components.forEach(t=>{e.push(t.geometry)})),f(e)}getEngineGeometries(){return this.getGeometries().map(e=>e.engineGeometry).filter(e=>e!=null)}computeUsedMemory(){const e=this.getGeometries(),r=this.getTextures(),t=e.reduce((s,i)=>s+i.computeUsedMemory(),0);return r.reduce((s,i)=>s+i.usedMemory,0)+t}}function re(n){switch(n){case"sphere":case"cube":case"diamond":case"cylinder":case"cone":case"inverted-cone":case"tetrahedron":return!0}return!1}function se(n,e){const r=(t,s,i=!1)=>new X(t.map(a=>{const c=s(a.tesselation);return i&&O(c),new K([new H(new k(c))],a.minScreenSpaceRadius)}));switch(n){case"sphere":return r([{tesselation:0,minScreenSpaceRadius:0},{tesselation:1,minScreenSpaceRadius:8},{tesselation:2,minScreenSpaceRadius:16},{tesselation:3,minScreenSpaceRadius:50},{tesselation:4,minScreenSpaceRadius:250}],t=>C(e,.5,t));case"cube":return r([{tesselation:0,minScreenSpaceRadius:0}],()=>N(e,1));case"cone":return r(y,t=>R(e,1,.5,t,!1),!0);case"inverted-cone":return r(y,t=>R(e,1,.5,t,!0),!0);case"cylinder":return r(y,t=>_(e,1,.5,t,[0,0,1],[0,0,.5]));case"tetrahedron":return r([{tesselation:0,minScreenSpaceRadius:0}],()=>A(e,1),!0);case"diamond":return r([{tesselation:0,minScreenSpaceRadius:0}],()=>W(e,1),!0);default:return}}const y=[{tesselation:6,minScreenSpaceRadius:0},{tesselation:18,minScreenSpaceRadius:7},{tesselation:64,minScreenSpaceRadius:65}];export{re as S,K as a,X as c,z as f,se as l,H as m,k as o};
