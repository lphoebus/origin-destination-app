import{gq as j,jU as v,cc as a,hb as l,gp as m,b_ as w,cf as u,b8 as y,bb as L}from"./index-Bkom2Sdc.js";import{v as x,b as S,j as $}from"./lineSegment-D1HJwPUS.js";import{q as I,z as P,l as C,I as V}from"./sphere-DYgRQGlT.js";import{S as b}from"./Octree-B_AuPyZR.js";import{g as T}from"./edgeProcessing-D69qm1YC.js";import"./vectorStacks-CNkTMSGr.js";import"./quatf64-aQ5IuZRd.js";import"./frustum-BmKD36jq.js";import"./plane-B-4Z4GK_.js";import"./BufferView-w_yOhrVp.js";import"./deduplicate-B2NEAwii.js";import"./Indices-BDmM_RlD.js";import"./InterleavedLayout-CZzZCD_x.js";import"./types-BKo2foNY.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./VertexAttributeLocations-BfZbt_DV.js";import"./Normals-C2g7Ulix.js";const q=1e3;function N(t,o,n){const s=k;j(s,t,.5),v(s,s,o,.5);const r=l(s,t);return m(s,s,n),I(s,r)}const k=a();let g=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=x(),this._tmpP1=a(),this._tmpP2=a(),this._tmpP3=a(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),w(o),await this._ensureEdgeLocations(t,o);const n=[];return this._edges.forEachNeighbor(s=>(this._addCandidates(t,s,n),n.length<q),t.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(t,o){const n=[];if(this._components.forEachNeighbor(e=>{if(e.info==null){const{id:d,uid:i}=e;n.push({id:d,uid:i})}return!0},t.bounds),!n.length)return;const s={components:n},r=await this.remoteClient.invoke("fetchAllEdgeLocations",s,o??{});for(const e of r.components)this._setFetchEdgeLocations(e)}async add(t){const o=new _(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const n=[];this._edges.forEachNeighbor(s=>(s.component===o&&n.push(s),!0),o.bounds),this._edges.remove(n),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(o==null||t.uid!==o.uid)return;const n=T.createView(t.locations),s=new Array(n.count),r=a(),e=a();for(let c=0;c<n.count;c++){n.position0.getVec(c,r),n.position1.getVec(c,e);const p=N(r,e,t.origin),E=new A(o,c,p);s[c]=E}this._edges.add(s);const{objectIds:d,origin:i}=t;o.info={locations:n,objectIds:d,origin:i}}_addCandidates(t,o,n){const{info:s}=o.component,{origin:r,objectIds:e}=s,d=s.locations,i=d.position0.getVec(o.index,this._tmpP1),c=d.position1.getVec(o.index,this._tmpP2);m(i,i,r),m(c,c,r);const p=e[d.componentIndex.get(o.index)];this._addEdgeCandidate(t,p,i,c,n),f(t,p,i,n),f(t,p,c,n)}_addEdgeCandidate(t,o,n,s,r){if(!t.returnEdge)return;const e=P(t.bounds,F),d=S(n,s,this._tmpLineSegment),i=$(d,e,this._tmpP3);C(t.bounds,i)&&r.push({type:"edge",objectId:o,target:u(i),distance:l(e,i),start:u(n),end:u(s)})}};g=y([L("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const ot=g;function f(t,o,n,s){t.returnVertex&&C(t.bounds,n)&&s.push({type:"vertex",objectId:o,target:u(n),distance:l(V(t.bounds),n)})}const h=class h{constructor(o,n){this.id=o,this.bounds=n,this.info=null,this.uid=++h.uid}};h.uid=0;let _=h;class A{constructor(o,n,s){this.component=o,this.index=n,this.bounds=s}}const F=a();export{ot as default};
