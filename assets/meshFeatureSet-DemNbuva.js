import{hj as y,bf as S,fi as c,bN as d,f8 as g,aY as b,c7 as w}from"./index-Bkom2Sdc.js";import l from"./Mesh-CgQFQL_7.js";import{n as F,i as M}from"./External-SumGqUUM.js";import{n as N,i as T}from"./meshFeatureAttributes-DtKWwxkG.js";import"./axisAngleDegrees-CiE1BNcG.js";import"./quat-B12ICwBr.js";import"./quatf64-aQ5IuZRd.js";import"./MeshComponent-Dywg-yhM.js";import"./meshProperties-DWLWd_LJ.js";import"./MeshLocalVertexSpace-7X1tyxoy.js";import"./MeshTransform-BjVAZmOC.js";import"./MeshVertexAttributes-DGlW1oXQ.js";import"./meshVertexSpaceUtils-DtTu-9Nz.js";import"./triangulationUtils-hlMhFJe0.js";import"./earcut-D9gy186-.js";import"./Indices-BDmM_RlD.js";import"./plane-B-4Z4GK_.js";import"./vectorStacks-CNkTMSGr.js";import"./deduplicate-B2NEAwii.js";import"./projectPointToVector-DMoufHKJ.js";import"./vertexSpaceConversion-DwXc1pTo.js";import"./spatialReferenceEllipsoidUtils-BXlmM8F6.js";import"./computeTranslationToOriginAndRotation-DEguJhlW.js";import"./vec3-8vIy6u5T.js";import"./BufferView-w_yOhrVp.js";import"./vec4-Cm2F75SQ.js";const $=()=>S.getLogger("esri.rest.support.meshFeatureSet");function st(e,s,t){const r=t.features;t.features=[],delete t.geometryType;const o=g.fromJSON(t);if(o.geometryType="mesh",!t.assetMaps)return o;const n=R(s,t.assetMaps),i=e.sourceSpatialReference??b.WGS84,m=t.globalIdFieldName,{outFields:a}=e,f=a!=null&&a.length>0?v(a.includes("*")?null:new Set(a)):()=>({});for(const u of r){const p=x(u,m,i,s,n);o.features.push(new w({geometry:p,attributes:f(u)}))}return o}function v(e){return({attributes:s})=>{if(!s)return{};if(!e)return s;for(const t in s)e.has(t)||delete s[t];return s}}function x(e,s,t,r,o){const n=e.attributes[s],i=o.get(n);if(i==null||!e.geometry)return null;const m=N(e.attributes,t,r.transformFieldRoles),a=d.fromJSON(e.geometry);a.spatialReference=t;const f=T(e.attributes,r.transformFieldRoles),u=t.isGeographic?"local":"georeferenced",p=O(i);return p?l.createWithExternalSource(m,p,{extent:a,transform:f,vertexSpace:u,unitConversionDisabled:!0}):l.createIncomplete(m,{extent:a,transform:f,vertexSpace:u})}function R(e,s){const t=new Map;for(const r of s){const o=r.parentGlobalId;if(o==null)continue;const n=r.assetName,i=r.assetType,m=r.assetHash,a=r.assetURL,f=r.conversionStatus,u=r.seqNo,p=y(i,e.supportedFormats);if(!p){$().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const h=c(t,o,()=>({files:new Map}));c(h.files,n,()=>({name:n,type:i,mimeType:p,status:E(f),parts:[]})).parts[u]={hash:m,url:a}}return t}function O(e){const s=Array.from(e.files.values()),t=new Array;for(const r of s){if(r.status!==2)return null;const o=new Array;for(const n of r.parts){if(!n)return null;o.push(new F(n.url,n.hash))}t.push(new M(r.name,r.mimeType,o))}return{type:"service",assets:t}}function E(e){switch(e){case"COMPLETED":case"SUBMITTED":return 2;case"INPROGRESS":return 1;default:return 0}}export{R as assetMapFromAssetMapsJSON,x as extractMesh,st as meshFeatureSetFromJSON};
