import{b8 as s,ba as a,bb as n,hX as l,fp as d,fd as u,bf as c,bE as y,ff as m}from"./index-Bkom2Sdc.js";import{s as f}from"./BitmapContainer-3O2xpFpr.js";import{b as _}from"./LayerView2D-30FU1rxw.js";import{O as x}from"./GraphicsView2D-Cudol1Qm.js";import{o as H}from"./HighlightGraphicContainer-DUpsSGBP.js";import{M as w}from"./ExportStrategy-CazFWuPT.js";import{d as v}from"./LayerView-dsZyO1fP.js";import{i as $}from"./timeSupport-Dg2WyHuM.js";import{i as b}from"./RefreshableLayerView-DU3KLifq.js";import{P as I,i as E}from"./MapServiceLayerViewHelper-CZMbwxZi.js";import{r as P}from"./drapedUtils-obiSr_G_.js";import{r as V}from"./highlightOptionsUtils-DdL2oWF3.js";import"./WGLContainer-C7Fkis0r.js";import"./Utils-BPwjYj-m.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-D6UgULFC.js";import"./VertexArrayObject-BCHRBpsS.js";import"./VertexAttributeLocations-BfZbt_DV.js";import"./VertexBuffer-CsbdF0n4.js";import"./BufferObject-CTARDp2h.js";import"./vec3f32-WCVSSNPR.js";import"./Container-BUOpKgJS.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-nye7QKUe.js";import"./BitmapTechnique-C9b_HJ2h.js";import"./GraphShaderModule-DIYQfoJR.js";import"./FramebufferObject-EJw5XZ2C.js";import"./ShaderBuilder-DRCHXYJf.js";import"./bitmapUtils-BLxWNiSq.js";import"./layerViewUtils-CKJQaxCu.js";import"./AttributeStore-CS019e7y.js";import"./UpdateTracking2D-BAgVtftM.js";import"./FeatureStoreQueryAdapter-xTIuWByO.js";import"./constants-BBnGEY1d.js";import"./queryUtils-CyiURm7K.js";import"./timeSupport-CXh2VZCm.js";import"./FeatureCommandQueue-BwfXXGpL.js";import"./utils-b1TOb6Y0.js";import"./QueueProcessor-DqRCcjoo.js";import"./FeatureMetadata-gkZZdSVQ.js";import"./normalizeUtilsSync-BY_tIBIr.js";import"./densifyCurvedGeometry-z0hd02Ge.js";import"./dehydratedFeatures-Bgz_yYu_.js";import"./AGraphicContainer-qU2ctLWU.js";import"./TechniqueInstance-CTCRZ9BY.js";import"./TileContainer-D8e9urlk.js";import"./popupUtils-C135Psdh.js";const G=t=>{const i=t;let e=class extends i{initialize(){this.exportImageParameters=new l({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){return this.view?.floors??null}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return $(this.layer,this.view?.timeExtent,this._get("timeExtent"))}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return s([a()],e.prototype,"exportImageParameters",void 0),s([a({readOnly:!0})],e.prototype,"floors",null),s([a({readOnly:!0})],e.prototype,"exportImageVersion",null),s([a()],e.prototype,"layer",void 0),s([a()],e.prototype,"suspended",void 0),s([a({readOnly:!0})],e.prototype,"timeExtent",null),e=s([n("esri.views.layers.MapImageLayerView")],e),e};let h=class extends G(b(_(v))){constructor(){super(...arguments),this._highlightGraphics=new d,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(e=>{u(e)||c.getLogger(this).error(e)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,r=e>=10.3,g=e>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new H(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new I({createFetchPopupFeaturesQueryGeometry:(o,p)=>P(o,p,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:o,property:p})=>this._highlightView.graphicUpdateHandler({graphic:o,property:p}),layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new w({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:r,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(y(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,r){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}fetchImageBitmap(t,i,e,r){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}highlight(t,i){const e=E(t);if(e.length===0)return m();const r=V(i);return this._addHighlightGraphics(e,r),m(()=>!this.destroyed&&this._removeHighlightGraphics(e,r))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}};s([a()],h.prototype,"strategy",void 0),h=s([n("esri.views.2d.layers.MapImageLayerView2D")],h);const It=h;export{It as default};
