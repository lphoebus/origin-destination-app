import{bF as u,bX as y,iQ as m,jc as h,bk as p,aY as f}from"./index-Bkom2Sdc.js";const l=4;function g(o){switch(o.type){case"object-id":case"unique-id-simple":return`${o.fieldName} ASC`;case"unique-id-composite":return`${o.fieldNames.join(",")} ASC`}}function q(o,e,r){const a=g(r.featureIdInfo);return{returnCentroid:r.serviceGeometryType==="esriGeometryPolygon"&&!o.queryMetadata.supportsCentroidOnDegeneratedQuantizedGeometry&&!o.queryMetadata.supportsDegeneratedQuantizedGeometry,returnGeometry:!0,timeReferenceUnknownClient:r.timeReferenceUnknownClient??void 0,outSpatialReference:f.fromJSON(o.outSpatialReference),orderByFields:o.type==="memory"?[]:[a],where:e.definitionExpression??"1=1",outFields:e.availableFields,multipatchOption:r.serviceGeometryType==="esriGeometryMultiPatch"?"xyFootprint":null,gdbVersion:e.gdbVersion,historicMoment:e.historicMoment?new Date(e.historicMoment):null,timeExtent:e.timeExtent?p.fromJSON(e.timeExtent):null}}class d{static create(e,r,a){const t=r.queryScaleRanges,s=r.displayFilterInfo;return new d(q(e,r,a),s,t,a.subtypeField,r.customParameters,a.geometryType,e.queryMetadata)}constructor(e,r,a,t,s,i,n){this._queryParams=e,this._displayFilter=r,this._queryScaleRanges=a,this._subtypeField=t,this._customParameters=s,this._geometryType=i,this._queryMetadata=n}get pageSize(){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?l:null,r=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,r)}get objectIdsQueryPageSize(){return this._queryMetadata?.maxRecordCount??2e3}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,r,a){if(!r.getSize())return null;const t=e.clone();if(this._queryParams.outFields[0]==="*"){if((t.outFields??[])[0]==="*")return null;t.outFields=this._queryParams.outFields}else{const i=new Set(this._queryParams.outFields),n=[];for(const c of i)r.hasField(c)||n.push(c);if(n.length===0)return null;t.outFields=n}t.returnGeometry=!1,t.returnCentroid=!1,t.quantizationParameters=null,t.cacheHint=!0;const s={inner:t,customParameters:this._customParameters};if(u("esri-tiles-debug")&&a!=null){const i=a.chunkId.toString().replaceAll("/",".");s.customParameters=s.customParameters?{...s.customParameters,chunkId:i}:{chunkId:i}}return s}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new y({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,r){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support tile queries");const a=this.createQuery(r),t=a.inner;if(this._queryScaleRanges?.length){const s=this._queryScaleRanges.filter(i=>(!i.minScale||i.minScale>=e.maxScale)&&(!i.maxScale||i.maxScale<=e.minScale)).map(i=>i.subtypeCode);if(s.length){const i=`${this._subtypeField} IN (${s})`;t.where=m(t.where,i)}}if(this._displayFilter&&(t.where=m(t.where,h(this._displayFilter,e.minScale,e.maxScale))),t.quantizationParameters=r.quantizationParameters??e.getQuantizationParameters(),t.resultType="tile",t.geometry=e.extent,this._queryMetadata.supportsQuantization?this._geometryType==="esriGeometryPolyline"&&(t.maxAllowableOffset=e.resolution*u("feature-polyline-generalization-factor")):this._geometryType!=="esriGeometryPolyline"&&this._geometryType!=="esriGeometryPolygon"||(t.maxAllowableOffset=e.resolution,this._geometryType==="esriGeometryPolyline"&&(t.maxAllowableOffset*=u("feature-polyline-generalization-factor"))),t.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,t.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(t.maxRecordCountFactor=l),u("esri-tiles-debug")){const s=e.id.replaceAll("/",".");a.customParameters=a.customParameters?{...a.customParameters,tileId:s}:{tileId:s}}return a}createPagedTileQuery(e,r){const a=this.pageSize;return this.createTileQuery(e,{start:a*r,num:a,returnExceededLimitFeatures:!0})}createPagedQuery(e,r){const a=this.pageSize;return this.createQuery({start:a*e,num:a,returnExceededLimitFeatures:!0,maxRecordCountFactor:l,quantizationParameters:r,cacheHint:!0})}createObjectIdsQuery(e){return this.createQuery({objectIds:e,outFields:["*"]})}}function*_(o){switch(o.type){case"object-id":case"unique-id-simple":return void(yield o.fieldName);case"unique-id-composite":return void(yield*o.fieldNames)}}export{_ as e,d as u};
