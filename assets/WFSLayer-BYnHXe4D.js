const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/AttributeBinsQuery-DrwEkP8m.js","assets/index-Bkom2Sdc.js","assets/index-CkucmIUh.css","assets/queryUtils-CyiURm7K.js","assets/FixedIntervalBinParameters-9QRDBkMs.js"])))=>i.map(i=>d[i]);
import{kY as E,mL as U,mM as k,kZ as J,bC as W,bD as Y,f8 as L,bN as R,b4 as D,h5 as f,ev as X,fe as H,bF as A,bf as Q,gL as z,b8 as r,ba as i,bb as $,mP as V,mQ as G,hw as Z,mR as B,mS as M,hF as K,hW as ee,mT as te,hG as re,hu as ie,hs as se,ht as ae,hv as oe,aY as T,mU as x,mV as ne,fg as C,bT as le,dj as ue,mW as pe,bX as c,mX as de,aH as ye,hy as ce,i2 as me,hA as he,eD as fe,mZ as ge,m_ as we,m$ as ve,n0 as be,hI as Fe,i3 as h,nl as Oe,n2 as xe,fY as Se,n3 as Ie,n4 as Re,n5 as $e,hz as Te}from"./index-Bkom2Sdc.js";import{y as Ce,u as Pe}from"./clientSideDefaults-I-4nPcub.js";import{v as je,W as qe,z as _e,Y as Ne,F as Ee}from"./wfsUtils-CgbHhQ53.js";import{i as Ue}from"./AttributeBinsFeatureSet-BsDhvskh.js";import"./QueryEngineCapabilities-DJC_YILC.js";import"./geojson-B_Jt2uie.js";import"./date-DCujAECq.js";import"./xmlUtils-CtUoQO7q.js";const ke=Symbol("isWFSGraphicOrigin");var S;class Je extends E{get[(S=ke,U)](){return this.layer}get[k](){return this.layer}get[J](){return this.layer}constructor(t){super(),this[S]=!0,this.type="wfs",this.layer=t}get id(){return this.layer.id}}let d=class extends W{constructor(){super(...arguments),this._connection=null,this._workerHandler=null,this.capabilities=Ce(!1,!1),this.type="wfs",this.refresh=Y(async()=>{await this.load();const e={customParameters:this.layer.customParameters,maxRecordCount:this.layer.maxRecordCount,maxTotalRecordCount:this.layer.maxTotalRecordCount,maxPageCount:this.layer.maxPageCount},{extent:t}=await this._workerHandler.refresh(e);return t&&(this.sourceJSON.extent=t),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}})}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null,this._workerHandler=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){const a=await this.queryFeaturesJSON(e,t);return L.fromJSON(a)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._workerHandler.queryFeatures(e?e.toJSON():void 0,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._workerHandler.queryFeatureCount(e?e.toJSON():void 0,t)}async queryObjectIds(e,t={}){return await this.load(t),this._workerHandler.queryObjectIds(e?e.toJSON():void 0,t)}async queryExtent(e,t={}){await this.load(t);const a=await this._workerHandler.queryExtent(e?e.toJSON():void 0,t);return{count:a.count,extent:R.fromJSON(a.extent)}}async querySnapping(e,t={}){return await this.load(t),this._workerHandler.querySnapping(e,t)}async queryAttributeBins(e,t={}){await this.load(t);const a=await this._workerHandler.queryAttributeBins(e?.toJSON(),t);return Ue.fromJSON(a)}async _createLoadOptions(e){const{url:t,customParameters:a,name:n,namespaceUri:l,fields:o,geometryType:u,maxRecordCount:y,maxPageCount:g,maxTotalRecordCount:w,swapXY:v}=this.layer,m=this.layer.originOf("spatialReference")==="defaults"?void 0:this.layer.spatialReference;if(!t)throw new D("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await je(t,{customParameters:a,...e}));const P=["fields","geometryType","name","namespaceUri","swapXY"].some(b=>this.layer[b]==null),p=P?await qe(this.wfsCapabilities,n,l,{spatialReference:m,customParameters:a,signal:e?.signal}):{..._e(o??[]),geometryType:u,name:n,namespaceUri:l,spatialReference:m,swapXY:v},j=Ne(this.wfsCapabilities.readFeatureTypes(),p.name,p.namespaceUri),q=f.toJSON(p.geometryType),{operations:O}=this.wfsCapabilities,_=O.GetFeature.url,N=O.GetFeature.outputFormat;return{customParameters:a,featureType:j,fields:p.fields?.map(b=>b.toJSON())??[],geometryField:p.geometryField,geometryType:q,getFeatureUrl:_,getFeatureOutputFormat:N,maxRecordCount:y,maxPageCount:g,maxTotalRecordCount:w,objectIdField:p.objectIdField,spatialReference:p.spatialReference?.toJSON(),swapXY:!!p.swapXY}}async _startWorker(e){const[t,a]=await X([this._createLoadOptions(e),H("WFSSourceWorker",{...e,strategy:A("feature-layers-workers")?"dedicated":"local",registryTarget:this})]),n=t.error||a.error||null,l=a.value||null;if(n)throw l&&l.close(),n;const o=t.value;this._connection=a.value,this._workerHandler=this._connection.createInvokeProxy();const u=await this._workerHandler.load(o,e);for(const y of u.warnings)Q.getLogger(this.layer).warn("#load()",`${y.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:y});this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:z},extent:u.extent,fields:o.fields,geometryType:o.geometryType,objectIdField:o.objectIdField,geometryField:o.geometryField,drawingInfo:Pe(o.geometryType),name:o.featureType.title,wfsInfo:{name:o.featureType.name,featureUrl:o.getFeatureUrl,maxFeatures:o.maxRecordCount,swapXY:o.swapXY,supportedSpatialReferences:o.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:o.featureType.namespaceUri}}}};r([i()],d.prototype,"capabilities",void 0),r([i({constructOnly:!0})],d.prototype,"layer",void 0),r([i()],d.prototype,"sourceJSON",void 0),r([i()],d.prototype,"type",void 0),r([i()],d.prototype,"wfsCapabilities",void 0),d=r([$("esri.layers.graphics.sources.WFSSource")],d);var F;const I=ge();let s=F=class extends V(G(Z(B(M(K(ee(te(re(ie(se(ae(oe(ce))))))))))))){static fromWFSLayerInfo(e){const{customParameters:t,fields:a,geometryField:n,geometryType:l,name:o,namespaceUri:u,objectIdField:y,spatialReference:g,swapXY:w,url:v,wfsCapabilities:m}=e;return new F({customParameters:t,fields:a,geometryField:n,geometryType:l,name:o,namespaceUri:u,objectIdField:y,spatialReference:g,swapXY:w,url:v,wfsCapabilities:m})}constructor(e){super(e),this.copyright=null,this.customParameters=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.graphicOrigin=new Je(this),this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxRecordCount=3e3,this.maxPageCount=10,this.maxTotalRecordCount=2e5,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new d({layer:this}),this.spatialReference=T.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),x(this.renderer,this.fieldsIndex),ne(this.timeInfo,this.fieldsIndex)})),Promise.resolve(this)}get capabilities(){return this.source?.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,t,a){const n=e.filter(l=>l.name!==Ee);this.geometryField&&n.unshift(new C({name:this.geometryField,alias:this.geometryField,type:"geometry"})),le(a,n.map(l=>l.toJSON()),t)}get parsedUrl(){return ue(this.url)}set renderer(e){x(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){return this.source?.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return pe(this,e)}createQuery(){const e=new c({returnGeometry:!0,outFields:["*"],where:this.definitionExpression||"1=1"}),{timeOffset:t,timeExtent:a}=this;return e.timeExtent=t!=null&&a!=null?a.offset(-t.value,t.unit):a||null,e}getFieldDomain(e,t){return this.getField(e)?.domain}getField(e){return this.fieldsIndex?.get(e)}queryFeatures(e,t){return this.load().then(()=>this.source.queryFeatures(c.from(e)||this.createQuery(),t)).then(a=>{if(a?.features)for(const n of a.features)n.layer=n.sourceLayer=this,n.origin=this.graphicOrigin;return a})}queryObjectIds(e,t){return this.load().then(()=>this.source.queryObjectIds(c.from(e)||this.createQuery(),t))}queryFeatureCount(e,t){return this.load().then(()=>this.source.queryFeatureCount(c.from(e)||this.createQuery(),t))}queryExtent(e,t){return this.load().then(()=>this.source.queryExtent(c.from(e)||this.createQuery(),t))}async queryAttributeBins(e,t){const{source:a,capabilities:n}=await this.load();de(e,n,"WFSLayer");const l=await ye(()=>import("./AttributeBinsQuery-DrwEkP8m.js"),__vite__mapDeps([0,1,2,3,4])),o=await a.queryAttributeBins(l.default.from(e),t);if(o.features)for(const u of o.features)u.layer=u.sourceLayer=this;return o}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh();return t!=null&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};r([i({readOnly:!0})],s.prototype,"capabilities",null),r([i({type:String})],s.prototype,"copyright",void 0),r([i({readOnly:!0})],s.prototype,"createQueryVersion",null),r([i({json:{name:"wfsInfo.customParameters",write:{overridePolicy:e=>({enabled:!!(e&&Object.keys(e).length>0),ignoreOrigin:!0})}}})],s.prototype,"customParameters",void 0),r([i(me("dateFieldsTimeReference"))],s.prototype,"dateFieldsTimeZone",void 0),r([i({readOnly:!0})],s.prototype,"defaultPopupTemplate",null),r([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],s.prototype,"definitionExpression",void 0),r([i({type:String})],s.prototype,"displayField",void 0),r([i(he)],s.prototype,"elevationInfo",void 0),r([i({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"featureUrl",void 0),r([i({type:[C],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],s.prototype,"fields",void 0),r([fe("fields")],s.prototype,"writeFields",null),r([i(I.fieldsIndex)],s.prototype,"fieldsIndex",void 0),r([i({type:R,json:{name:"extent"}})],s.prototype,"fullExtent",void 0),r([i()],s.prototype,"geometryField",void 0),r([i({type:String,json:{read:{source:"layerDefinition.geometryType",reader:f.read},write:{target:"layerDefinition.geometryType",writer:f.write,ignoreOrigin:!0},origins:{service:{read:f.read}}}})],s.prototype,"geometryType",void 0),r([i({readOnly:!0,clonable:!1})],s.prototype,"graphicOrigin",void 0),r([i({type:String})],s.prototype,"id",void 0),r([i(we)],s.prototype,"labelsVisible",void 0),r([i({type:[be],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:ve},write:!0}})],s.prototype,"labelingInfo",void 0),r([i(Fe)],s.prototype,"legendEnabled",void 0),r([i({type:["show","hide"]})],s.prototype,"listMode",void 0),r([i({type:String})],s.prototype,"objectIdField",void 0),r([i({type:["WFS"]})],s.prototype,"operationalLayerType",void 0),r([i({type:h,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"maxRecordCount",void 0),r([i({type:h})],s.prototype,"maxPageCount",void 0),r([i({type:h})],s.prototype,"maxTotalRecordCount",void 0),r([i({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],s.prototype,"mode",void 0),r([i({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"name",void 0),r([i({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"namespaceUri",void 0),r([i(Oe)],s.prototype,"opacity",void 0),r([i(I.outFields)],s.prototype,"outFields",void 0),r([i({readOnly:!0})],s.prototype,"parsedUrl",null),r([i(xe)],s.prototype,"popupEnabled",void 0),r([i({type:Se,json:{name:"popupInfo",write:!0}})],s.prototype,"popupTemplate",void 0),r([i({types:Re,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:Ie,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],s.prototype,"renderer",null),r([i($e)],s.prototype,"screenSizePerspectiveEnabled",void 0),r([i({readOnly:!0})],s.prototype,"source",void 0),r([i({type:T,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],s.prototype,"spatialReference",void 0),r([i({readOnly:!0,type:[h],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"spatialReferences",void 0),r([i({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"swapXY",void 0),r([i({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],s.prototype,"title",void 0),r([i({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),r([i(Te)],s.prototype,"url",void 0),r([i({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"version",void 0),r([i()],s.prototype,"wfsCapabilities",null),s=F=r([$("esri.layers.WFSLayer")],s);const ze=s;export{ze as default};
