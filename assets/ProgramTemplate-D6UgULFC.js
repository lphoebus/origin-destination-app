import{dt as y,nt as L,bF as ee,kA as V}from"./index-Bkom2Sdc.js";const te=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],re=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","uvec2","uvec3","uvec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","usampler1D","usampler2D","usampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"],E=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"],ae=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"];var p=999,A=9999,D=0,P=1,F=2,j=3,O=4,w=5,oe=6,ne=7,ie=8,$=9,se=10,I=11,le=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function ce(){var a,r,t,e=0,i=0,o=p,n=[],l=[],s=1,f=0,c=0,u=!1,d=!1,g="";return function(m){return l=[],m!==null?X(m.replace?m.replace(/\r\n/g,`
`):m):R()};function h(m){m.length&&l.push({type:le[o],data:m,position:c,line:s,column:f})}function X(m){var v;for(e=0,t=(g+=m).length;a=g[e],e<t;){switch(v=e,o){case D:e=Q();break;case P:e=H();break;case F:e=b();break;case j:e=W();break;case O:e=Z();break;case I:e=K();break;case w:e=J();break;case A:e=Y();break;case $:e=q();break;case p:e=z()}v!==e&&(g[v]===`
`?(f=0,++s):++f)}return i+=e,g=g.slice(e),l}function R(m){return n.length&&h(n.join("")),o=se,h("(eof)"),l}function z(){return n=n.length?[]:n,r==="/"&&a==="*"?(c=i+e-1,o=D,r=a,e+1):r==="/"&&a==="/"?(c=i+e-1,o=P,r=a,e+1):a==="#"?(o=F,c=i+e,e):/\s/.test(a)?(o=$,c=i+e,e):(u=/\d/.test(a),d=/[^\w_]/.test(a),c=i+e,o=u?O:d?j:A,e)}function q(){return/[^\s]/g.test(a)?(h(n.join("")),o=p,e):(n.push(a),r=a,e+1)}function b(){return a!=="\r"&&a!==`
`||r==="\\"?(n.push(a),r=a,e+1):(h(n.join("")),o=p,e)}function H(){return b()}function Q(){return a==="/"&&r==="*"?(n.push(a),h(n.join("")),o=p,e+1):(n.push(a),r=a,e+1)}function W(){if(r==="."&&/\d/.test(a))return o=w,e;if(r==="/"&&a==="*")return o=D,e;if(r==="/"&&a==="/")return o=P,e;if(a==="."&&n.length){for(;S(n););return o=w,e}if(a===";"||a===")"||a==="("){if(n.length)for(;S(n););return h(a),o=p,e+1}var m=n.length===2&&a!=="=";if(/[\w_\d\s]/.test(a)||m){for(;S(n););return o=p,e}return n.push(a),r=a,e+1}function S(m){for(var v,T,k=0;;){if(v=E.indexOf(m.slice(0,m.length+k).join("")),T=E[v],v===-1){if(k--+m.length>0)continue;T=m.slice(0,1).join("")}return h(T),c+=T.length,(n=n.slice(T.length)).length}}function K(){return/[^a-fA-F0-9]/.test(a)?(h(n.join("")),o=p,e):(n.push(a),r=a,e+1)}function Z(){return a==="."||/[eE]/.test(a)?(n.push(a),o=w,r=a,e+1):a==="x"&&n.length===1&&n[0]==="0"?(o=I,n.push(a),r=a,e+1):/[^\d]/.test(a)?(h(n.join("")),o=p,e):(n.push(a),r=a,e+1)}function J(){return a==="f"&&(n.push(a),r=a,e+=1),/[eE]/.test(a)||a==="-"&&/[eE]/.test(r)?(n.push(a),r=a,e+1):/[^\d]/.test(a)?(h(n.join("")),o=p,e):(n.push(a),r=a,e+1)}function Y(){if(/[^\d\w_]/.test(a)){var m=n.join("");return o=re.indexOf(m)>-1?ie:ae.indexOf(m)>-1?ne:oe,h(n.join("")),o=p,e}return n.push(a),r=a,e+1}}function fe(a){var r=ce(),t=[];return t=(t=t.concat(r(a))).concat(r(null))}function ue(a){return fe(a)}function me(a){return a.map(r=>r.type!=="eof"?r.data:"").join("")}const C=new Set(["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"]);function he(a,r="100",t="300 es"){const e=/^\s*#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const i of a)if(i.type==="preprocessor"){const o=e.exec(i.data);if(o){const n=o[1].replaceAll(/\s{2,}/g," ");if(n===t)return n;if(n===r)return i.data="#version "+t,r;throw new Error("unknown glsl version: "+n)}}return a.splice(0,0,{type:"preprocessor",data:"#version "+t},{type:"whitespace",data:`
`}),null}function ge(a,r){for(let t=r-1;t>=0;t--){const e=a[t];if(e.type!=="whitespace"&&e.type!=="block-comment"){if(e.type!=="keyword")break;if(e.data==="attribute"||e.data==="in")return!0}}return!1}function M(a,r,t,e){e=e||t;for(const i of a)if(i.type==="ident"&&i.data===t)return e in r?r[e]++:r[e]=0,M(a,r,e+"_"+r[e],e);return t}function G(a,r,t="afterVersion"){function e(s,f){for(let c=f;c<s.length;c++){const u=s[c];if(u.type==="operator"&&u.data===";")return c}return null}function i(s){let f=-1,c=0,u=-1;for(let d=0;d<s.length;d++){const g=s[d];if(g.type==="preprocessor"&&(/#(if|ifdef|ifndef)\s+.+/.test(g.data)?++c:/#endif\s*.*/.test(g.data)&&--c),t!=="afterVersion"&&t!=="afterPrecision"||g.type==="preprocessor"&&g.data.startsWith("#version")&&(u=Math.max(u,d)),t==="afterPrecision"&&g.type==="keyword"&&g.data==="precision"){const h=e(s,d);if(h===null)throw new Error("precision statement not followed by any semicolons!");u=Math.max(u,h)}f<u&&c===0&&(f=d)}return f+1}const o={data:`
`,type:"whitespace"},n=s=>s<a.length&&/[^\r\n]$/.test(a[s].data);let l=i(a);n(l-1)&&a.splice(l++,0,o);for(const s of r)a.splice(l++,0,s);n(l-1)&&n(l)&&a.splice(l,0,o)}function de(a,r,t,e="lowp"){G(a,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:e},{type:"whitespace",data:" "},{type:"keyword",data:t},{type:"whitespace",data:" "},{type:"ident",data:r},{type:"operator",data:";"}],"afterPrecision")}function _e(a,r,t,e,i="lowp"){G(a,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:e.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:t},{type:"whitespace",data:" "},{type:"ident",data:r},{type:"operator",data:";"}],"afterPrecision")}function pe(a,r){let t,e,i=-1;for(let o=r;o<a.length;o++){const n=a[o];if(n.type==="operator"&&(n.data==="["&&(t=o),n.data==="]")){e=o;break}n.type==="integer"&&(i=parseInt(n.data,10))}return t&&e&&a.splice(t,e-t+1),i}function N(a,r){if(a.startsWith("#version 300"))return a;const t=ue(a);if(he(t,"100","300 es")==="300 es")return a;let e=null,i=null;const o={},n={};for(let l=0;l<t.length;++l){const s=t[l];switch(s.type){case"keyword":r===35633&&s.data==="attribute"?s.data="in":s.data==="varying"&&(s.data=r===35633?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(s.data.trim())&&(s.data=s.data.replaceAll(/(2D|Cube|EXT)/g,"")),r===35632&&s.data==="gl_FragColor"&&(e||(e=M(t,o,"fragColor"),de(t,e,"vec4")),s.data=e),r===35632&&s.data==="gl_FragData"){const f=pe(t,l+1),c=M(t,o,"fragData");_e(t,c,"vec4",f,"mediump"),s.data=c}else r===35632&&s.data==="gl_FragDepthEXT"&&(i||(i=M(t,o,"gl_FragDepth")),s.data=i);break;case"ident":if(te.includes(s.data)){if(r===35633&&ge(t,l))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");s.data in n||(n[s.data]=M(t,o,s.data)),s.data=n[s.data]}}}for(let l=t.length-1;l>=0;--l){const s=t[l];if(s.type==="preprocessor"){const f=s.data.match(/#extension\s+(.*):/);if(f?.[1]&&C.has(f[1].trim())){const d=t[l+1];t.splice(l,d&&d.type==="whitespace"?2:1)}const c=s.data.match(/#ifdef\s+(.*)/);c?.[1]&&C.has(c[1].trim())&&(s.data="#if 1");const u=s.data.match(/#ifndef\s+(.*)/);u?.[1]&&C.has(u[1].trim())&&(s.data="#if 0")}}return xe(a,me(t))}function xe(a,r){return r}const ve=4294967295,ye=!!ee("esri-tests-disable-gpu-memory-measurements");class Te{constructor(r,t,e,i,o=new Map,n=[]){this._context=r,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,r||console.error("RenderingContext isn't initialized!"),t.length===0&&console.error("Shaders source should not be empty!"),t=N(t,35633),e=N(e,35632),this._vShader=B(this._context,35633,t),this._fShader=B(this._context,35632,e),this._vShader&&this._fShader||console.error("Error loading shaders!"),r.instanceCounter.increment(y.Shader,this),L()&&(this.vertexShader=t,this.fragmentShader=e),this.usedMemory=ye?0:t.length+e.length;const l=this._context.gl,s=l.createProgram();l.attachShader(s,this._vShader),l.attachShader(s,this._fShader),i.forEach((f,c)=>l.bindAttribLocation(s,f,c)),this.hasTransformFeedbackVaryings=!!n?.length,this.hasTransformFeedbackVaryings&&l.transformFeedbackVaryings(s,n,l.SEPARATE_ATTRIBS),l.linkProgram(s),L()&&!l.getProgramParameter(s,l.LINK_STATUS)&&console.error(`Could not link shader
validated: ${l.getProgramParameter(s,l.VALIDATE_STATUS)}, gl error ${l.getError()}, vertex: ${l.getShaderParameter(this._vShader,l.COMPILE_STATUS)}, fragment: ${l.getShaderParameter(this._fShader,l.COMPILE_STATUS)}, info log: ${l.getProgramInfoLog(s)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`);for(const[f,c]of o){const u=l.getUniformBlockIndex(s,f);u<ve&&l.uniformBlockBinding(s,u,c)}this._glName=s,r.instanceCounter.increment(y.Program,this)}get glName(){return this._glName}get hasGLName(){return this._glName!=null}get compiled(){return!!this._compiled||(this._context.capabilities.parallelShaderCompile&&this.glName!=null?(this._compiled=!!this._context.gl.getProgramParameter(this.glName,37297),this._compiled):(this._compiled=!0,!0))}dispose(){if(--this._refCount>0)return;const r=this._context.gl,t=this._context.instanceCounter;this._nameToUniformLocation.forEach(e=>e&&t.decrement(y.Uniform,e)),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(t.decrement(y.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),r.deleteShader(this._vShader),this._vShader=null,t.decrement(y.Shader,this)),this._fShader&&(r.deleteShader(this._fShader),this._fShader=null),this._glName&&(r.deleteProgram(this._glName),this._glName=null,t.decrement(y.Program,this))}ref(){++this._refCount}_getUniformLocation(r){const t=this._nameToUniformLocation.get(r);if(t!==void 0)return t;if(this.glName){const e=this._context.gl.getUniformLocation(this.glName,r);return this._nameToUniformLocation.set(r,e),e&&this._context.instanceCounter.increment(y.Uniform,e),e}return null}hasUniform(r){return this._getUniformLocation(r)!=null}setUniform1i(r,t,e){U(e,t);const i=this._nameToUniform1.get(r);i!==void 0&&t===i||(this._context.gl.uniform1i(this._getUniformLocation(r),t),this._nameToUniform1.set(r,t))}setUniform1iv(r,t,e){_(e,t),x(this._nameToUniform1v,r,t)&&this._context.gl.uniform1iv(this._getUniformLocation(r),t)}setUniform2iv(r,t,e){_(e,t),x(this._nameToUniform2,r,t)&&this._context.gl.uniform2iv(this._getUniformLocation(r),t)}setUniform3iv(r,t,e){_(e,t),x(this._nameToUniform3,r,t)&&this._context.gl.uniform3iv(this._getUniformLocation(r),t)}setUniform4iv(r,t,e){_(e,t),x(this._nameToUniform4,r,t)&&this._context.gl.uniform4iv(this._getUniformLocation(r),t)}setUniform1f(r,t,e){U(e,t);const i=this._nameToUniform1.get(r);i!==void 0&&t===i||(this._context.gl.uniform1f(this._getUniformLocation(r),t),this._nameToUniform1.set(r,t))}setUniform1fv(r,t,e){_(e,t),x(this._nameToUniform1v,r,t)&&this._context.gl.uniform1fv(this._getUniformLocation(r),t)}setUniform2f(r,t,e,i){U(i,t,e);const o=this._nameToUniform2.get(r);o===void 0?(this._context.gl.uniform2f(this._getUniformLocation(r),t,e),this._nameToUniform2.set(r,[t,e])):t===o[0]&&e===o[1]||(this._context.gl.uniform2f(this._getUniformLocation(r),t,e),o[0]=t,o[1]=e)}setUniform2fv(r,t,e){_(e,t),x(this._nameToUniform2,r,t)&&this._context.gl.uniform2fv(this._getUniformLocation(r),t)}setUniform3f(r,t,e,i,o){U(o,t,e,i);const n=this._nameToUniform3.get(r);n===void 0?(this._context.gl.uniform3f(this._getUniformLocation(r),t,e,i),this._nameToUniform3.set(r,[t,e,i])):t===n[0]&&e===n[1]&&i===n[2]||(this._context.gl.uniform3f(this._getUniformLocation(r),t,e,i),n[0]=t,n[1]=e,n[2]=i)}setUniform3fv(r,t,e){_(e,t);const i=this._getUniformLocation(r);i!=null&&x(this._nameToUniform3,r,t)&&this._context.gl.uniform3fv(i,t)}setUniform4f(r,t,e,i,o,n){U(n,t,e,i,o);const l=this._nameToUniform4.get(r);l===void 0?(this._context.gl.uniform4f(this._getUniformLocation(r),t,e,i,o),this._nameToUniform4.set(r,[t,e,i,o])):l!==void 0&&t===l[0]&&e===l[1]&&i===l[2]&&o===l[3]||(this._context.gl.uniform4f(this._getUniformLocation(r),t,e,i,o),l[0]=t,l[1]=e,l[2]=i,l[3]=o)}setUniform4fv(r,t,e){_(e,t);const i=this._getUniformLocation(r);i!=null&&x(this._nameToUniform4,r,t)&&this._context.gl.uniform4fv(i,t)}setUniformMatrix3fv(r,t,e=!1,i){_(i,t);const o=this._getUniformLocation(r);o!=null&&x(this._nameToUniformMatrix3,r,t)&&this._context.gl.uniformMatrix3fv(o,e,t)}setUniformMatrix4fv(r,t,e=!1,i){_(i,t);const o=this._getUniformLocation(r);if(o!=null){const n=this._nameToUniformMatrix4,l=n.get(r);let s=!1;if(l){const f=t.length;if(l.length!==f)n.set(r,Array.from(t)),s=!0;else for(let c=0;c<f;++c){const u=t[c];if(l[c]!==u){for(l[c]=u;c<f;++c)l[c]=t[c];s=!0;break}}}else n.set(r,Array.from(t)),s=!0;s&&this._context.gl.uniformMatrix4fv(o,e,t)}}setUniformMatrices4fv(r,t,e=!1,i){_(i,t);const o=this._getUniformLocation(r);o!=null&&x(this._nameToUniformMatrix4,r,t)&&this._context.gl.uniformMatrix4fv(o,e,t)}stop(){}}function B(a,r,t){const e=a.gl,i=e.createShader(r);return e.shaderSource(i,t),e.compileShader(i),L()&&!e.getShaderParameter(i,e.COMPILE_STATUS)&&(console.error("Compile error in ".concat(r===35633?"vertex":"fragment"," shader")),console.error(e.getShaderInfoLog(i)),console.error(Ue(t))),i}function Ue(a){let r=2;return a.replaceAll(`
`,()=>`
`+Me(r++)+":")}function Me(a){return a>=1e3?a.toString():("  "+a).slice(-3)}function x(a,r,t){const e=a.get(r);if(!e)return a.set(r,Array.from(t)),!0;const i=t.length;if(e.length!==i)return a.set(r,Array.from(t)),!0;for(let o=0;o<i;++o){const n=t[o];if(e[o]!==n){for(e[o]=n;o<i;++o)e[o]=t[o];return!0}}return!1}const U=V()?(a,...r)=>_(a,r):()=>{},_=V()?(a,r)=>{if(a?.supportsNaN)return;const t=r.length;for(let e=0;e<t;++e){const i=r[e];Number.isNaN(i)&&console.error(`Got ${i} as uniform value from ${new Error().stack}`)}}:()=>{};let Se=class{constructor(r){this._readFile=r}resolveIncludes(r){return this._resolve(r)}_resolve(r,t=new Map){if(t.has(r))return t.get(r);const e=this._read(r);if(!e)throw new Error(`cannot find shader file ${r}`);const i=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let o=i.exec(e);const n=[];for(;o!=null;)n.push({path:o[1],start:o.index,length:o[0].length}),o=i.exec(e);let l=0,s="";return n.forEach(f=>{s+=e.slice(l,f.start),s+=t.has(f.path)?"":this._resolve(f.path,t),l=f.start+f.length}),s+=e.slice(l),t.set(r,s),s}_read(r){return this._readFile(r)}};function Pe(a,r,t,e=""){return new Te(a,e+r.vertexShader,e+r.fragmentShader,t)}export{Pe as a,Se as e,Te as s};
