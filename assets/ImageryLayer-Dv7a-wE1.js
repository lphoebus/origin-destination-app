const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/imageryUtils-DTMFfDiQ.js","assets/utils-C7umzGDt.js","assets/index-C2z3vZ9k.js","assets/index-DaKHjF4b.css","assets/originUtils-av9iyGZ9.js","assets/saveUtils-CiwNsJLd.js","assets/rasterFieldUtils-8FBWYX_U.js"])))=>i.map(i=>d[i]);
import{bu as V,s9 as Ht,nj as kt,bv as P,bb as i,bc as o,dG as j,bd as b,cp as ye,be as q,b7 as se,h6 as ke,aW as At,uQ as be,uR as ot,uS as lt,fF as re,cs as W,d9 as gt,aZ as Ue,dF as z,bq as oe,cr as Wt,cu as Zt,aY as $t,eb as Mt,d7 as M,dI as G,dK as U,dJ as B,aR as D,gs as wt,bH as Ne,g0 as Kt,ju as Xt,gJ as Yt,fz as er,uT as tr,cI as rr,b5 as mt,ay as F,uU as ir,b9 as dt,ba as sr,aO as ar,bp as nr,lQ as or,gv as lr,gZ as ur,gz as pr,gx as cr,gy as mr,gw as dr,gL as yr,gK as hr,gA as fr,gB as gr,aN as wr,al as vr,h0 as Ke,b4 as Rr,jn as br,h4 as Sr,gD as Ir,jv as xr,ec as Fr}from"./index-C2z3vZ9k.js";import{o as Dr,m as Tr,c as jr,n as Pr,j as Nr,$ as Cr,b as Or,e as _r,k as je,q as yt,f as Ar,v as $r,p as Mr,h as Vr,V as qr,s as Er,u as Jr,l as Gr}from"./rasterFieldUtils-8FBWYX_U.js";import{N as T,y as te,h as Lr,a as zr,j as Ur,u as Br,p as Qr,l as Hr,c as kr,E as Wr,q as Zr,D as Kr,B as Xr,t as Yr,d as ei}from"./RasterJobHandlerMixin-BvcPsI_9.js";import{A as Vt,B as qt,c as ti,w as ri,x as ii,a as Be,y as Qe,n as Pe,l as si,m as Et,_ as ai,j as Pt,P as ni}from"./RasterSymbolizer-yBAeRvh9.js";import{t as Nt}from"./imageBitmapUtils-3Uw57BlP.js";import{c as ht,l as oi}from"./dataUtils-0RHTvcdC.js";import{f as Ct,p as li,c as ui,o as pi}from"./RasterPresetRendererMixin-DadMTU7h.js";import{i as ci,s as mi}from"./executeForIds-DwobaMPS.js";import"./ClassBreaksDefinition-BlEYQF17.js";import"./_commonjsHelpers-DCkdB7M8.js";const di={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},yi=new Set(["u1","u2","u4","u8","s8","u16","s16"]),hi={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},fi=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Jt(s){return fi.has(s.type)}function vt(s,r){var e;if(!s||!r)return V(s||r);const n=V(s);if(n.functionDefinition&&r.rasterFunctionDefinition){const t=r.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=void 0),Gt(n.functionDefinition.arguments,r),n.rasterFunctionDefinition=n.functionDefinition.toJSON()}else((e=r.functionName)==null?void 0:e.toLowerCase())!=="none"&&(Lt(n.functionArguments).Raster=r);return n}function Gt(s,r){for(const n in s)n.toLowerCase()==="raster"&&(s[n].type==="RasterFunctionVariable"?(s[n]=r.rasterFunctionDefinition,s[n].type="RasterFunctionTemplate"):s[n].type==="RasterFunctionTemplate"&&Gt(s[n].arguments,r))}function ae(s){const r=V(di[s.functionName+"Function"]),n=s.functionArguments;for(const e in n)e.toLowerCase()==="raster"?(r.arguments[e]=ae(n[e]),r.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(r.arguments[e].value=xi(n[e]),r.arguments.ColorSchemeType.value=0):r.arguments[e].value=n[e];return r}function gi(s,r){switch(r=r||{},s.type){case"raster-stretch":return Ri(s,r);case"class-breaks":return bi(s,r);case"unique-value":return Si(s,r);case"raster-colormap":return Ii(s,r);case"vector-field":return wi(s,r);case"raster-shaded-relief":return vi(s,r);case"flow":throw new Error("Unsupported rendering rule.")}}function Lt(s){const r=(s==null?void 0:s.Raster)??(s==null?void 0:s.raster);return r&&r.declaredClass==="esri.layers.support.RasterFunction"?Lt(r.functionArguments):s}const Ee={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function wi(s,r){const n=new T;n.functionName="VectorFieldRenderer";const{dataType:e,bandNames:t}=r,a=e==="vector-uv";let l,u;if(t&&t.length===2){const w=t.map((g=>g.toLowerCase()));l=w.indexOf("magnitude"),u=w.indexOf("direction")}l!==-1&&l!==null||(l=0,u=1);const c=s.rotationType==="arithmetic"?1:2,m=s.flowRepresentation==="flow-from"?0:1,p=s.visualVariables?s.visualVariables.find((w=>w.field==="Magnitude")):new Ht,d={magnitudeBandID:l,directionBandID:u,isUVComponents:a,referenceSystem:c,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:hi[s.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};n.functionArguments=d;const y=ae(n);return r.convertToRFT?T.fromJSON({rasterFunctionDefinition:y}):n}function vi(s,r){const n=r.convertToRFT;if(r.dataType!=="elevation"&&(r.dataType!=="generic"||r.bandCount!==1||r.pixelType!=="s16"&&r.pixelType!=="s32"&&r.pixelType!=="f32"&&r.pixelType!=="f64"))return new T;const e=new T;e.functionName="Hillshade";const t=s.hillshadeType==="traditional"?0:1,a=s.scalingType==="none"?1:3,l={HillshadeType:t,SlopeType:a,ZFactor:s.zFactor};return t===0&&(l.Azimuth=s.azimuth,l.Altitude=s.altitude),a===3&&(l.PSPower=s.pixelSizePower,l.PSZFactor=s.pixelSizeFactor),e.functionArguments=l,e.variableName="Raster",s.colorRamp&&(e.functionName="ShadedRelief",n?l.ColorRamp=Vt(s.colorRamp):l.Colormap=qt(s.colorRamp)),n?new T({rasterFunctionDefinition:ae(e)}):e}function Ri(s,r){var c,m;const n=r.convertToRFT,e=new T;e.functionName="Stretch";const t=Ee[ti.toJSON(s.stretchType)],a="u8",l=(c=s.customStatistics)==null?void 0:c.map((p=>[p.min,p.max,p.avg??0,p.stddev??1])),u={StretchType:t,Statistics:l,DRA:s.dynamicRangeAdjustment,UseGamma:s.useGamma,Gamma:s.gamma,ComputeGamma:s.computeGamma};if(s.outputMin!=null&&(u.Min=s.outputMin),s.outputMax!=null&&(u.Max=s.outputMax),t===Ee.standardDeviation?(u.NumberOfStandardDeviations=s.numberOfStandardDeviations,e.outputPixelType=a):t===Ee.percentClip?(u.MinPercent=s.minPercent,u.MaxPercent=s.maxPercent,e.outputPixelType=a):t===Ee.minMax?e.outputPixelType=a:t===Ee.sigmoid&&(u.SigmoidStrengthLevel=s.sigmoidStrengthLevel),e.functionArguments=u,e.variableName="Raster",s.colorRamp){const p=s.colorRamp,d=new T;if(n)d.functionArguments={ColorRamp:Vt(p)};else{const y=ri(p,!0);if(y)d.functionArguments={colorRampName:y};else if(!r.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const w=s.colorRamp.toJSON();w.type==="algorithmic"?w.algorithm=w.algorithm||"esriCIELabAlgorithm":w.type==="multipart"&&((m=w.colorRamps)!=null&&m.length)&&w.colorRamps.forEach((g=>g.algorithm=g.algorithm||"esriCIELabAlgorithm")),d.functionArguments={colorRamp:w}}else d.functionArguments={Colormap:qt(p)}}return d.variableName="Raster",d.functionName="Colormap",d.functionArguments.Raster=e,n?new T({rasterFunctionDefinition:ae(d)}):d}return n?new T({rasterFunctionDefinition:ae(e)}):e}function bi(s,r){const n=[],e=[],t=[],a=[],{pixelType:u,rasterAttributeTable:c}=r,m=c==null?null:c.features,p=zt(c);if(p&&m&&Array.isArray(m)&&s.classBreakInfos){s.classBreakInfos.forEach(((f,R)=>{var S;const h=(S=f.symbol)==null?void 0:S.color;let _;h!=null&&h.a&&f.minValue!=null&&f.maxValue!=null&&m.forEach((N=>{f.minValue!=null&&f.maxValue!=null&&(_=N.attributes[s.field],(_>=f.minValue&&_<f.maxValue||R===s.classBreakInfos.length-1&&_>=f.minValue)&&a.push([N.attributes[p],h.r,h.g,h.b]))}))}));const g=u?ut(a,u):a,v=new T;return v.functionName="Colormap",v.functionArguments={},v.functionArguments.Colormap=g,v.variableName="Raster",r.convertToRFT?new T({rasterFunctionDefinition:ae(v)}):v}s.classBreakInfos.forEach(((g,v)=>{if(g.minValue==null||g.maxValue==null)return;const f=g.symbol&&g.symbol.color;f!=null&&f.a?(v===0?n.push(g.minValue,g.maxValue+1e-4):n.push(g.minValue+1e-4,g.maxValue+1e-4),e.push(v),a.push([v,f.r,f.g,f.b])):t.push(g.minValue,g.maxValue)}));const d=u?ut(a,u):a,y=new T;y.functionName="Remap",y.functionArguments={InputRanges:n,OutputValues:e,NoDataRanges:t},y.variableName="Raster";const w=new T;return w.functionName="Colormap",w.functionArguments={Colormap:d,Raster:y},r.convertToRFT?new T({rasterFunctionDefinition:ae(w)}):w}function ut(s,r){const n=yi.has(r)?kt(r):null;return n&&s.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),s}function zt(s){if(s==null)return;const{fields:r}=s,n=r==null?void 0:r.find((e=>(e==null?void 0:e.name)&&e.name.toLowerCase()==="value"));return n==null?void 0:n.name}function Si(s,r){var d,y;const n=[],{pixelType:e,rasterAttributeTable:t}=r,a=t==null?null:t.features,l=zt(t),u=(y=(d=s.defaultSymbol)==null?void 0:d.color)==null?void 0:y.toRgb(),c=s.uniqueValueInfos;if(c)if(a){if(l){const w=new Map;c.forEach((v=>{const f=v.value,R=Ot(v);f!=null&&(R!=null&&R.a)&&w.set(String(f),R.toRgb())}));const g=s.field;g&&a.forEach((({attributes:v})=>{const f=String(v[g]),R=v[l],h=w.get(f);h?n.push([R,...h]):u&&n.push([R,...u])}))}}else for(let w=0;w<c.length;w++){const g=c[w],v=Ot(g),f=+g.value;if(v!=null&&v.a){if(isNaN(f))return null;n.push([f,v.r,v.g,v.b])}}const m=e?ut(n,e):n,p=new T;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=m,p.variableName="Raster",r.convertToRFT?new T({rasterFunctionDefinition:ae(p)}):p}function Ot(s){var r,n,e,t,a;return((r=s.symbol)==null?void 0:r.type)==="polygon-3d"?(t=(e=(n=s.symbol.symbolLayers)==null?void 0:n.find((l=>l.type==="fill")))==null?void 0:e.material)==null?void 0:t.color:(a=s.symbol)==null?void 0:a.color}function Ii(s,r){const n=s.extractColormap();if(!n||n.length===0)return null;const{pixelType:e}=r,t=e?ut(n,e):n,a=new T;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=t,r.convertToRFT?new T({rasterFunctionDefinition:ae(a)}):a}function xi(s){const r=[],n=[];return s.forEach((e=>{r.push(e[0]),n.push(ii([...e.slice(1),255]))})),{type:"RasterColormap",values:r,colors:n}}let O=class extends P{constructor(){super(...arguments),this.layer=null,this.requestRawData=!1,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(r,n,e){this.layer.version<10.3||(n[e]=r)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(r,n,e){this.format&&this.format.toLowerCase().includes("jpg")&&r!=null&&(n[e]=r)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(r,n,e){this.format==="lerc"&&r!=null&&(n[e]=r)}get format(){var r;return this.requestRawData||((r=this.layer.renderer)==null?void 0:r.type)==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:r}=this;return r.pixelType!==r.serviceRasterInfo.pixelType?r.pixelType:void 0}writeLercVersion(r,n,e){this.format==="lerc"&&this.layer.version>=10.5&&(n[e]=r)}get version(){const r=this.layer;return r.commitProperty("bandIds"),r.commitProperty("format"),r.commitProperty("compressionQuality"),r.commitProperty("compressionTolerance"),r.commitProperty("interpolation"),r.commitProperty("noData"),r.commitProperty("noDataInterpretation"),r.commitProperty("mosaicRule"),r.commitProperty("rasterFunction"),r.commitProperty("adjustAspectRatio"),r.commitProperty("pixelFilter"),r.commitProperty("pixelType"),r.commitProperty("definitionExpression"),r.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(r){this._set("version",r)}get mosaicRule(){const r=this.layer;let n=r.mosaicRule;const e=r.definitionExpression;return n?e&&e!==n.where&&(n=n.clone(),n.where=e):e&&(n=new te({where:e})),n}get rasterFunction(){var l,u;const r=this.layer;let{rasterFunction:n}=r;const e=r.pixelFilter,t=!r.format||r.format.includes("jpg")||r.format.includes("png");this.requestRawData||(n=this._addResampleRasterFunction(n));const a=(l=r.multidimensionalSubset)==null?void 0:l.areaOfInterest;return a&&(n=Fi(n,a)),this.requestRawData||!t||e||((u=r.renderer)==null?void 0:u.type)==="vector-field"||(n=this.combineRendererWithRenderingRule(n)),n}combineRendererWithRenderingRule(r){const n=this.layer,{rasterInfo:e,renderer:t}=n;return r=r||n.rasterFunction,!t||!Jt(t)?r:vt(gi(t,{rasterAttributeTable:e.attributeTable,pixelType:e.pixelType,dataType:e.dataType,bandNames:e.bandInfos.map((({name:a})=>a)),convertColorRampToColormap:n.version<10.6,convertToRFT:!!(r!=null&&r.rasterFunctionDefinition),bandCount:e.bandCount}),r)}_addResampleRasterFunction(r){var a;if(((a=this.layer.renderer)==null?void 0:a.type)!=="vector-field"||(r==null?void 0:r.functionName)==="Resample")return r;const n=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,e=this.layer.serviceRasterInfo.pixelSize;let t=new T({functionName:"Resample",functionArguments:{ResamplingType:n,InputCellSize:e}});return t=r!=null&&r.rasterFunctionDefinition?new T({rasterFunctionDefinition:ae(t)}):t,vt(t,r)}};function Fi(s,r){const n=new T({functionName:"Clip",functionArguments:{ClippingGeometry:r.toJSON(),ClippingType:1}});return vt(n,s)}i([o()],O.prototype,"layer",void 0),i([o()],O.prototype,"requestRawData",void 0),i([o({json:{write:!0}})],O.prototype,"adjustAspectRatio",null),i([j("adjustAspectRatio")],O.prototype,"writeAdjustAspectRatio",null),i([o({json:{write:!0}})],O.prototype,"bandIds",null),i([o({json:{write:!0}})],O.prototype,"compression",void 0),i([o({json:{write:!0}})],O.prototype,"compressionQuality",null),i([j("compressionQuality")],O.prototype,"writeCompressionQuality",null),i([o({json:{write:!0}})],O.prototype,"compressionTolerance",null),i([j("compressionTolerance")],O.prototype,"writeCompressionTolerance",null),i([o({json:{write:!0}})],O.prototype,"format",null),i([o({type:String,json:{read:{reader:Be.read},write:{writer:Be.write}}})],O.prototype,"interpolation",null),i([o({json:{write:!0}})],O.prototype,"noData",null),i([o({type:String,json:{read:{reader:Qe.read},write:{writer:Qe.write}}})],O.prototype,"noDataInterpretation",null),i([o({type:Pe.apiValues,json:{read:Pe.read,write:Pe.write}})],O.prototype,"pixelType",null),i([o({json:{write:!0}})],O.prototype,"lercVersion",void 0),i([j("lercVersion")],O.prototype,"writeLercVersion",null),i([o({type:Number})],O.prototype,"version",null),i([o({json:{write:!0}})],O.prototype,"mosaicRule",null),i([o({json:{write:!0,name:"renderingRule"}})],O.prototype,"rasterFunction",null),O=i([b("esri.layers.support.ExportImageServiceParameters")],O);let ge=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};i([o({type:q,json:{read:!0}})],ge.prototype,"fromGeometry",void 0),i([o({type:q,json:{read:!0,write:!0}})],ge.prototype,"toGeometry",void 0),i([o({json:{write:!0}})],ge.prototype,"objectIds",void 0),i([o({type:String,json:{write:!0}})],ge.prototype,"where",void 0),i([o({type:Number,json:{write:!0}})],ge.prototype,"maxCount",void 0),ge=i([b("esri.rest.support.FindImagesParameters")],ge);const Ut=s=>{let r=class extends s{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return i([o({json:{write:!0}})],r.prototype,"make",void 0),i([o({json:{write:!0}})],r.prototype,"model",void 0),i([o({json:{write:!0}})],r.prototype,"focalLength",void 0),i([o({json:{write:!0}})],r.prototype,"pixelSize",void 0),i([o({json:{write:!0}})],r.prototype,"rows",void 0),i([o({json:{write:!0}})],r.prototype,"cols",void 0),r=i([b("esri.rest.support.CameraInfoMixin")],r),r};let Z=class extends Ut(P){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(r,n){n.acquisitionDate=r==null?void 0:r.getTime()}};i([o({json:{write:!0}})],Z.prototype,"id",void 0),i([o({json:{name:"uri",write:!0}})],Z.prototype,"referenceUri",void 0),i([o({type:Date,json:{write:!0}})],Z.prototype,"acquisitionDate",void 0),i([j("acquisitionDate")],Z.prototype,"writeAcquisitionDate",null),i([o({json:{write:!0}})],Z.prototype,"cameraID",void 0),i([o({type:q,json:{write:!0}})],Z.prototype,"center",void 0),i([o({type:q,json:{write:!0}})],Z.prototype,"perspectiveCenter",void 0),i([o({json:{write:!0}})],Z.prototype,"orientation",void 0),Z=i([b("esri.rest.support.ImageInspectionInfo")],Z);const Di=Z;let Xe=class extends P{constructor(){super(...arguments),this.images=null}};i([o({type:[Di],json:{write:!0}})],Xe.prototype,"images",void 0),Xe=i([b("esri.rest.support.FindImagesResult")],Xe);var Rt;let xe=Rt=class extends P{constructor(s){super(s),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Rt(V({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};i([o({type:[String],json:{name:"angleName",write:!0}})],xe.prototype,"angleNames",void 0),i([o({type:q,json:{write:!0}})],xe.prototype,"point",void 0),i([o({type:se,json:{write:!0}})],xe.prototype,"spatialReference",void 0),i([o({type:ke,json:{write:!0}})],xe.prototype,"rasterId",void 0),xe=Rt=i([b("esri.rest.support.ImageAngleParameters")],xe);let Ce=class extends P{constructor(r){super(r),this.north=null,this.up=null,this.spatialReference=null}};i([o({type:Number,json:{write:!0}})],Ce.prototype,"north",void 0),i([o({type:Number,json:{write:!0}})],Ce.prototype,"up",void 0),i([o({type:se,json:{write:!0}})],Ce.prototype,"spatialReference",void 0),Ce=i([b("esri.rest.support.ImageAngleResult")],Ce);const k=new At({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let ve=class extends P{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};i([o({type:Number,json:{read:!0,write:!0}})],ve.prototype,"value",void 0),i([o({type:String,json:{read:!0,write:!0}})],ve.prototype,"displayValue",void 0),i([o({type:Number,json:{read:!0,write:!0}})],ve.prototype,"uncertainty",void 0),ve=i([b("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],ve);let Me=class extends ve{constructor(){super(...arguments),this.unit=null}};i([o({type:String,json:{read:be.read,write:be.write}})],Me.prototype,"unit",void 0),Me=i([b("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],Me);let Ye=class extends ve{constructor(){super(...arguments),this.unit=null}};i([o({type:String,json:{read:ot.read,write:ot.write}})],Ye.prototype,"unit",void 0),Ye=i([b("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],Ye);let He=class extends ve{constructor(){super(...arguments),this.unit=null}};i([o({type:String,json:{read:lt.read,write:lt.write}})],He.prototype,"unit",void 0),He=i([b("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],He);let ee=class extends P{constructor(r){super(r),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};i([o()],ee.prototype,"type",void 0),i([o({type:k.apiValues,json:{read:k.read,write:k.write}})],ee.prototype,"measureOperation",void 0),i([o({type:te,json:{write:!0}})],ee.prototype,"mosaicRule",void 0),i([o({type:q,json:{write:!0}})],ee.prototype,"pixelSize",void 0),i([o({json:{write:!0}})],ee.prototype,"raster",void 0),ee=i([b("esri.rest.support.BaseImageMeasureParameters")],ee);var bt;let ue=bt=class extends ee{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(s,r,n){s!=null&&(r.geometryType=re(s),r[n]=s.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new bt(V({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([o({types:W,json:{name:"fromGeometry",read:!0,write:!0}})],ue.prototype,"geometry",void 0),i([j("geometry")],ue.prototype,"writeGeometry",null),i([o({type:k.apiValues,json:{write:k.write}})],ue.prototype,"measureOperation",null),i([o({json:{read:!0}})],ue.prototype,"is3D",void 0),i([o({type:String,json:{read:be.read,write:be.write}})],ue.prototype,"linearUnit",void 0),i([o({type:String,json:{read:ot.read,write:ot.write}})],ue.prototype,"areaUnit",void 0),ue=bt=i([b("esri.rest.support.ImageAreaParameters")],ue);let Re=class extends P{constructor(r){super(r),this.name=null,this.sensorName=null}};i([o({type:String,json:{read:!0,write:!0}})],Re.prototype,"name",void 0),i([o({type:String,json:{read:!0,write:!0}})],Re.prototype,"sensorName",void 0),Re=i([b("esri.rest.support.BaseImageMeasureResult")],Re);let Je=class extends Re{constructor(){super(...arguments),this.area=null,this.perimeter=null}};i([o({type:Ye,json:{read:!0,write:!0}})],Je.prototype,"area",void 0),i([o({type:Me,json:{read:!0,write:!0}})],Je.prototype,"perimeter",void 0),Je=i([b("esri.rest.support.ImageAreaResult")],Je);let et=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.outSpatialReference=null}};i([o({type:se,json:{name:"outSR",write:!0}})],et.prototype,"outSpatialReference",void 0),et=i([b("esri.rest.support.ImageBoundaryParameters")],et);let Oe=class extends P{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(r,n){return r==null?null:r.rings?gt.fromJSON(r):Ue.fromJSON(r)}};i([o({type:Number,json:{write:!0}})],Oe.prototype,"area",void 0),i([o({types:W,json:{name:"shape",write:!0}})],Oe.prototype,"geometry",void 0),i([z("geometry")],Oe.prototype,"readGeometry",null),Oe=i([b("esri.rest.support.ImageBoundaryResult")],Oe);var St;let ie=St=class extends ee{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(s,r,n){s!=null&&(r.geometryType=re(s),r[n]=s.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new St(V({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([o({type:q,json:{read:!0,write:!0}})],ie.prototype,"fromGeometry",void 0),i([j("fromGeometry")],ie.prototype,"writeFromGeometry",null),i([o({type:q,json:{read:!0,write:!0}})],ie.prototype,"toGeometry",void 0),i([o({type:k.apiValues,json:{write:k.write}})],ie.prototype,"measureOperation",null),i([o({json:{read:!0}})],ie.prototype,"is3D",void 0),i([o({type:String,json:{read:be.read,write:be.write}})],ie.prototype,"linearUnit",void 0),i([o({type:String,json:{read:lt.read,write:lt.write}})],ie.prototype,"angularUnit",void 0),ie=St=i([b("esri.rest.support.ImageDistanceParameters")],ie);let _e=class extends Re{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};i([o({type:Me,json:{read:!0,write:!0}})],_e.prototype,"distance",void 0),i([o({type:He,json:{read:!0,write:!0}})],_e.prototype,"azimuthAngle",void 0),i([o({type:He,json:{read:!0,write:!0}})],_e.prototype,"elevationAngle",void 0),_e=i([b("esri.rest.support.ImageDistanceResult")],_e);let pe=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(s,r,n){s!=null&&(r.geometryType=re(s),r[n]=JSON.stringify(s.toJSON()))}};i([o({types:W,json:{read:oe,write:!0}})],pe.prototype,"geometry",void 0),i([j("geometry")],pe.prototype,"writeGeometry",null),i([o({json:{write:!0}})],pe.prototype,"objectIds",void 0),i([Wt(Zt,{ignoreUnknown:!1,name:"spatialRel"})],pe.prototype,"spatialRelationship",void 0),i([o({type:$t,json:{name:"time",write:!0}})],pe.prototype,"timeExtent",void 0),i([o({type:String,json:{write:!0}})],pe.prototype,"where",void 0),pe=i([b("esri.rest.support.ImageGPSInfoParameters")],pe);let tt=class extends Ut(P){constructor(){super(...arguments),this.id=null}};i([o({json:{write:!0}})],tt.prototype,"id",void 0),tt=i([b("esri.rest.support.CameraInfo")],tt);const Ti=tt;let K=class extends P{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(r,n){n.acquisitionDate=r==null?void 0:r.getTime()}};i([o({json:{write:!0}})],K.prototype,"id",void 0),i([o({json:{write:!0}})],K.prototype,"name",void 0),i([o({type:Date,json:{write:!0}})],K.prototype,"acquisitionDate",void 0),i([j("acquisitionDate")],K.prototype,"writeAcquisitionDate",null),i([o({json:{write:!0}})],K.prototype,"cameraID",void 0),i([o({type:q,json:{write:!0}})],K.prototype,"center",void 0),i([o({json:{write:!0}})],K.prototype,"gps",void 0),i([o({json:{write:!0}})],K.prototype,"orientation",void 0),K=i([b("esri.rest.support.ImageGPSInfo")],K);const ji=K;let Ge=class extends P{constructor(){super(...arguments),this.images=null,this.cameras=null}};i([o({type:[ji],json:{write:!0}})],Ge.prototype,"images",void 0),i([o({type:[Ti],json:{write:!0}})],Ge.prototype,"cameras",void 0),Ge=i([b("esri.rest.support.ImageGPSInfoResult")],Ge);var It;let ce=It=class extends ee{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(s,r,n){s!=null&&(r.geometryType=re(s),r[n]=s.toJSON())}get measureOperation(){return this.operationType}clone(){return new It(V({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([o({type:q,json:{read:!0}})],ce.prototype,"fromGeometry",void 0),i([j("fromGeometry")],ce.prototype,"writeFromGeometry",null),i([o({type:q,json:{read:!0,write:!0}})],ce.prototype,"toGeometry",void 0),i([o({type:k.apiValues,json:{write:k.write}})],ce.prototype,"measureOperation",null),i([o({json:{read:!0}})],ce.prototype,"operationType",void 0),i([o({type:String,json:{read:be.read,write:be.write}})],ce.prototype,"linearUnit",void 0),ce=It=i([b("esri.rest.support.ImageHeightParameters")],ce);let rt=class extends Re{constructor(){super(...arguments),this.height=null}};i([o({type:Me,json:{read:!0,write:!0}})],rt.prototype,"height",void 0),rt=i([b("esri.rest.support.ImageHeightResult")],rt);var xt;let $=xt=class extends P{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(s,r,n){s!=null&&(r.geometryType=re(s),r[n]=JSON.stringify(s.toJSON()))}set mosaicRule(s){let r=s;r!=null&&r.mosaicMethod&&(r=te.fromJSON({...r.toJSON(),mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation})),this._set("mosaicRule",r)}writeMosaicRule(s,r,n){s!=null&&(r[n]=JSON.stringify(s.toJSON()))}set rasterFunction(s){let r=s;r!=null&&r.rasterFunction&&(r=T.fromJSON({...r.toJSON(),rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments})),this._set("rasterFunction",r)}writeRasterFunction(s,r,n){s!=null&&(r[n]=JSON.stringify(s.toJSON())),s.rasterFunctionDefinition&&(r[n]=JSON.stringify(s.rasterFunctionDefinition))}writeRasterFunctions(s,r,n){s!=null&&(r[n]=JSON.stringify(s.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(s,r,n){s!=null&&(r[n]=JSON.stringify(s))}writeTimeExtent(s,r,n){if(s!=null){const e=s.start!=null?s.start.getTime():null,t=s.end!=null?s.end.getTime():null;r[n]=e!=null?t!=null?`${e},${t}`:`${e}`:null}}clone(){return new xt(V({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};i([o({types:W,json:{write:!0}})],$.prototype,"geometry",void 0),i([j("geometry")],$.prototype,"writeGeometry",null),i([o({type:te,json:{write:!0}})],$.prototype,"mosaicRule",null),i([j("mosaicRule")],$.prototype,"writeMosaicRule",null),i([o({type:T,json:{write:!0,name:"renderingRule"}})],$.prototype,"rasterFunction",null),i([j("rasterFunction")],$.prototype,"writeRasterFunction",null),i([o({type:[T],json:{write:!0,name:"renderingRules"}})],$.prototype,"rasterFunctions",void 0),i([j("rasterFunctions")],$.prototype,"writeRasterFunctions",null),i([o({type:q,json:{write:!0}})],$.prototype,"pixelSize",void 0),i([j("pixelSize")],$.prototype,"writePixelSize",null),i([o({type:Boolean,json:{write:!0}})],$.prototype,"returnGeometry",void 0),i([o({type:Boolean,json:{write:!0}})],$.prototype,"returnCatalogItems",void 0),i([o({type:Boolean,json:{write:!0}})],$.prototype,"returnPixelValues",void 0),i([o({type:Number,json:{write:!0}})],$.prototype,"maxItemCount",void 0),i([o({type:$t,json:{write:{target:"time"}}})],$.prototype,"timeExtent",void 0),i([j("timeExtent")],$.prototype,"writeTimeExtent",null),i([o({json:{write:!0}})],$.prototype,"raster",void 0),i([o({json:{write:!0}})],$.prototype,"viewId",void 0),i([o({type:Boolean,json:{write:!0}})],$.prototype,"processAsMultidimensional",void 0),$=xt=i([b("esri.rest.support.ImageIdentifyParameters")],$);let X=class extends P{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};i([o({json:{write:!0}})],X.prototype,"catalogItemVisibilities",void 0),i([o({type:Mt,json:{write:!0}})],X.prototype,"catalogItems",void 0),i([o({type:q,json:{write:!0}})],X.prototype,"location",void 0),i([o({json:{write:!0}})],X.prototype,"name",void 0),i([o({json:{write:!0}})],X.prototype,"objectId",void 0),i([o({json:{write:!0}})],X.prototype,"processedValues",void 0),i([o({json:{write:!0}})],X.prototype,"properties",void 0),i([o({json:{write:!0}})],X.prototype,"value",void 0),X=i([b("esri.rest.support.ImageIdentifyResult")],X);var Ft;let Ae=Ft=class extends P{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(s,r,n){r.geometries={geometryType:"esriGeometryPoint",geometries:s.map((e=>e.toJSON()))}}clone(){var s;return new Ft({geometries:((s=this.geometries)==null?void 0:s.map((r=>r.clone())))??[],rasterId:this.rasterId})}};i([o({type:[q],json:{write:!0}})],Ae.prototype,"geometries",void 0),i([j("geometries")],Ae.prototype,"writeGeometry",null),i([o({type:ke,json:{write:!0}})],Ae.prototype,"rasterId",void 0),Ae=Ft=i([b("esri.rest.support.ImagePixelLocationParameters")],Ae);let it=class extends P{constructor(){super(...arguments),this.geometries=null}};i([o({json:{write:!0}})],it.prototype,"geometries",void 0),it=i([b("esri.rest.support.ImagePixelLocationResult")],it);var Dt;let Fe=Dt=class extends ee{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(s,r,n){s!=null&&(r.geometryType=re(s),r[n]=s.toJSON())}get measureOperation(){const{is3D:s,geometry:r}=this;return r.type==="point"?s?"point-3D":"point":s?"centroid-3D":"centroid"}clone(){return new Dt(V({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([o({types:W,json:{name:"fromGeometry",read:oe}})],Fe.prototype,"geometry",void 0),i([j("geometry")],Fe.prototype,"writeGeometry",null),i([o({type:k.apiValues,json:{read:k.read,write:k.write}})],Fe.prototype,"measureOperation",null),i([o({json:{read:!0}})],Fe.prototype,"is3D",void 0),Fe=Dt=i([b("esri.rest.support.ImagePointParameters")],Fe);let st=class extends Re{constructor(){super(...arguments),this.point=null}};i([o({type:q,json:{name:"point.value",read:!0,write:!0}})],st.prototype,"point",void 0),st=i([b("esri.rest.support.ImagePointResult")],st);let De=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(s,r,n){r.geometries=s!=null&&s.length?{geometryType:re(s[0]),geometries:s.map((e=>({...e.toJSON(),spatialReference:void 0})))}:null}};i([o({types:[W]})],De.prototype,"geometries",void 0),i([j("geometries")],De.prototype,"writeGeometries",null),i([o({type:[ke],json:{write:!0}})],De.prototype,"rasterIds",void 0),i([o({type:se,json:{name:"outSR",write:!0}})],De.prototype,"outSpatialReference",void 0),De=i([b("esri.rest.support.ImageToMapMultirayParameters")],De);let me=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(r,n,e){r!=null&&(n.geometryType=re(r),n[e]={...r.toJSON(),spatialReference:void 0})}};i([o({types:W,json:{read:oe,write:!0}})],me.prototype,"geometry",void 0),i([j("geometry")],me.prototype,"writeGeometry",null),i([o({json:{write:!0}})],me.prototype,"rasterId",void 0),i([o({type:se,json:{name:"outSR",write:!0}})],me.prototype,"outSpatialReference",void 0),i([o({json:{name:"options.DOff",write:!0}})],me.prototype,"depthOffset",void 0),i([o({json:{name:"options.Adjust",write:!0}})],me.prototype,"adjust",void 0),me=i([b("esri.rest.support.ImageToMapParameters")],me);let Le=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};i([o({type:String,json:{name:"uri",write:!0}})],Le.prototype,"referenceUri",void 0),i([o({type:Number,json:{write:!0}})],Le.prototype,"rasterId",void 0),Le=i([b("esri.rest.support.ImageUrlParameters")],Le);let at=class extends P{constructor(){super(...arguments),this.url=null}};i([o({json:{name:"imageURL",write:!0}})],at.prototype,"url",void 0),at=i([b("esri.rest.support.ImageUrlResult")],at);const ft=new At({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0});let de=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(s,r,n){s!=null&&s.length&&(r.geometryType=re(s[0]),r.geometries=s.map((e=>e.toJSON())))}};i([o({types:[W]})],de.prototype,"geometries",void 0),i([j("geometries")],de.prototype,"writeGeometries",null),i([o({type:te,json:{write:!0}})],de.prototype,"mosaicRule",void 0),i([o({type:q,json:{write:!0}})],de.prototype,"pixelSize",void 0),i([o({json:{write:!0}})],de.prototype,"constantZ",void 0),i([o({type:ft.apiValues,json:{read:ft.read,write:ft.write}})],de.prototype,"baseType",void 0),de=i([b("esri.rest.support.ImageVolumeParameters")],de);let Y=class extends P{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};i([o({json:{write:!0}})],Y.prototype,"area",void 0),i([o({json:{write:!0}})],Y.prototype,"cut",void 0),i([o({json:{write:!0}})],Y.prototype,"fill",void 0),i([o({json:{name:"maxz",write:!0}})],Y.prototype,"maxZ",void 0),i([o({json:{name:"minz",write:!0}})],Y.prototype,"minZ",void 0),i([o({json:{name:"meanz",write:!0}})],Y.prototype,"meanZ",void 0),i([o({json:{write:!0}})],Y.prototype,"cutCellCount",void 0),i([o({json:{write:!0}})],Y.prototype,"fillCellCount",void 0),Y=i([b("esri.rest.support.ImageVolume")],Y);const Pi=Y;let nt=class extends P{constructor(){super(...arguments),this.volumes=[]}};i([o({type:[Pi],json:{write:!0}})],nt.prototype,"volumes",void 0),nt=i([b("esri.rest.support.ImageVolumeResult")],nt);let Te=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(s,r,n){s!=null&&(r.geometryType=re(s),r[n]=JSON.stringify(s))}};i([o({types:W,json:{read:oe,write:!0}})],Te.prototype,"geometry",void 0),i([j("geometry")],Te.prototype,"writeGeometry",null),i([o({json:{write:!0}})],Te.prototype,"rasterId",void 0),i([o({json:{name:"options.VisibleOnly",write:!0}})],Te.prototype,"visibleOnly",void 0),Te=i([b("esri.rest.support.MapToImageParameters")],Te);let we=class extends P{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(r,n){return r.spatialReference||(r={...r,spatialReference:n.Shape.spatialReference}),q.fromJSON(r)}};i([o({types:W,json:{name:"Shape",read:oe,write:!0}})],we.prototype,"geometry",void 0),i([o({json:{name:"Length",write:!0}})],we.prototype,"length",void 0),i([o({json:{name:"Area",write:!0}})],we.prototype,"area",void 0),i([o({type:q,json:{name:"Center",write:!0}})],we.prototype,"center",void 0),i([z("center")],we.prototype,"readCenter",null),we=i([b("esri.rest.support.MeasureAreaFromImageResult")],we);var Tt;let $e=Tt=class extends P{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(s,r,n){s!=null&&(r.geometryType=re(s),r[n]={...s.toJSON(),spatialReference:void 0})}clone(){const s=V({geometry:this.geometry,rasterId:this.rasterId});return new Tt(s)}};i([o({types:W,json:{name:"fromGeometry",read:oe,write:!0}})],$e.prototype,"geometry",void 0),i([j("geometry")],$e.prototype,"writeGeometry",null),i([o({json:{write:!0}})],$e.prototype,"rasterId",void 0),$e=Tt=i([b("esri.rest.support.MeasureFromImageParameters")],$e);let ze=class extends P{constructor(){super(...arguments),this.geometry=null,this.length=null}};i([o({types:W,json:{name:"Shape",read:oe,write:!0}})],ze.prototype,"geometry",void 0),i([o({json:{name:"Length",write:!0}})],ze.prototype,"length",void 0),ze=i([b("esri.rest.support.MeasureLengthFromImageResult")],ze);function jt(s){const r=s==null?void 0:s.time;if(r&&(r.start!=null||r.end!=null)){const n=[];r.start!=null&&n.push(r.start),r.end==null||n.includes(r.end)||n.push(r.end),s.time=n.join(",")}}async function Bt(s,r,n){r=M(Ur,r);const e=G(s),t=r.geometry?[r.geometry]:[],a=await Ne(t),l=r.toJSON();jt(l);const u=a==null?void 0:a[0];u!=null&&(l.geometry=ne(u));const c=U({...e.query,f:"json",...l});return B(c,n)}async function Ni(s,r,n){const e=(r=M(de,r)).toJSON();e.geometries=JSON.stringify(e.geometries);const t=G(s),a=U({...t.query,f:"json",...e}),l=B(a,n),{data:u}=await D(`${t.path}/calculateVolume`,l);return nt.fromJSON({volumes:u.results})}async function Ci(s,r,n){var c,m,p;const e=(r=M(xe,r)).toJSON();e.angleName!=null&&(e.angleName=e.angleName.join(",")),(m=(c=r==null?void 0:r.point)==null?void 0:c.spatialReference)!=null&&m.imageCoordinateSystem&&(e.point.spatialReference=ct(r.point.spatialReference)),(p=r==null?void 0:r.spatialReference)!=null&&p.imageCoordinateSystem&&(e.spatialReference=Ve(r.spatialReference));const t=G(s),a=U({...t.query,f:"json",...e}),l=B(a,n),{data:u}=await D(`${t.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new se({wkid:0,imageCoordinateSystem:u.spatialReference}):se.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new Ce(u)}async function Oi(s,r,n){var m;const e=(r=M(Ae,r)).toJSON(),{geometries:t}=r;if(t)for(let p=0;p<t.length;p++)(m=t[p].spatialReference)!=null&&m.imageCoordinateSystem&&(e.geometries.geometries[p].spatialReference=ct(t[p].spatialReference));const a=G(s),l=U({...a.query,f:"json",...e}),u=B(l,n),{data:c}=await D(`${a.path}/computePixelLocation`,u);return it.fromJSON(c)}async function _i(s,r,n){const e=await Bt(s,r,n),t=G(s),{data:a}=await D(`${t.path}/computeStatisticsHistograms`,e),{statistics:l}=a;return l!=null&&l.length&&l.forEach((u=>{u.avg=u.mean,u.stddev=u.standardDeviation})),{statistics:l,histograms:a.histograms}}async function Ai(s,r,n){const e=await Bt(s,r,n),t=G(s),{data:a}=await D(`${t.path}/computeHistograms`,e);return{histograms:a.histograms}}async function $i(s,r,n){var d;const e=(r=M(Lr,r)).toJSON();jt(e),(d=e.outFields)!=null&&d.length&&(e.outFields=e.outFields.join(","));const t=await Ne(r.geometry),a=t==null?void 0:t[0];a!=null&&(e.geometry=ne(a));const l=G(s),u=U({...l.query,f:"json",...e}),c=B(u,n),{data:m}=await D(`${l.path}/getSamples`,c),p=m.samples.map((y=>{const w=y.value==="NaN"||y.value===""?null:y.value.split(" ").map((g=>Number(g)));return{...y,pixelValue:w}}));return zr.fromJSON({samples:p})}async function _t(s,r,n){r=M($,r);const e=G(s),t=r.geometry?[r.geometry]:[];return Ne(t).then((a=>{const l=r.toJSON(),u=a==null?void 0:a[0];u!=null&&(l.geometry=JSON.stringify(ne(u)));const c=U({...e.query,f:"json",...l}),m=B(c,n);return D(e.path+"/identify",m)})).then((a=>X.fromJSON(a.data)))}async function Mi(s,r,n){r=M(ce,r);const e=await pt(s,r,[r.fromGeometry,r.toGeometry],n);return rt.fromJSON(e)}async function Vi(s,r,n){r=M(ue,r);const e=await pt(s,r,[r.geometry],n);return Je.fromJSON(e)}async function qi(s,r,n){r=M(Fe,r);const e=await pt(s,r,[r.geometry],n);return st.fromJSON(e)}async function Ei(s,r,n){r=M(ie,r);const e=await pt(s,r,[r.fromGeometry,r.toGeometry],n);return _e.fromJSON(e)}async function pt(s,r,n,e){const t=G(s),a=await Ne(n),l=r.toJSON();a[0]!=null&&(l.fromGeometry=JSON.stringify(ne(a[0]))),a[1]!=null&&(l.toGeometry=JSON.stringify(ne(a[1])));const u=U({...t.query,f:"json",...l}),c=B(u,e),{data:m}=await D(t.path+"/measure",c);return m}async function Ji(s,r,n){const e=await Qt(s,r,n);return ze.fromJSON(e)}async function Gi(s,r,n){const e=await Qt(s,r,n);return we.fromJSON(e)}async function Qt(s,r,n){r=M($e,r);const e=G(s),t=r.toJSON(),a=U({...e.query,f:"json",...t}),l=B(a,n),{data:u}=await D(e.path+"/measureFromImage",l);return u}function ne(s){var n;const r=s.toJSON();return(n=s.spatialReference)!=null&&n.imageCoordinateSystem&&(r.spatialReference=ct(s.spatialReference)),r}function ct(s){const{imageCoordinateSystem:r}=s;if(r){const{id:n,referenceServiceName:e}=r;return n!=null?e?{icsid:n,icsns:e}:{icsid:n}:{ics:r}}return s.toJSON()}function Ve(s,r){if(!s.imageCoordinateSystem)return wt(s);const n=ct(s),{icsid:e,icsns:t}=n;return e==null||t!=null&&!(r!=null&&r.toLowerCase().includes("/"+t.toLowerCase()+"/"))?JSON.stringify(n):`0:${e}`}async function Li(s,r,n){r=M(et,r);const e=G(s),t=r.toJSON();r.outSpatialReference&&(t.outSR=Ve(r.outSpatialReference));const a=U({...e.query,f:"json",...t}),l=B(a,n),{data:u}=await D(e.path+"/queryBoundary",l);return Oe.fromJSON(u)}async function zi(s,r,n){var d,y;const e=(r=M(pe,r)).toJSON();jt(e),(d=e.objectIds)!=null&&d.length&&(e.objectIds=e.objectIds.join(",")),e.geometry||e.objectIds||e.time||e.where||(e.where="1=1");const t=await Ne(r.geometry),a=t==null?void 0:t[0];a!=null&&(e.geometry=ne(a));const l=(a==null?void 0:a.spatialReference)??((y=r.geometry)==null?void 0:y.spatialReference);l&&(e.inSR=Ve(l));const u=G(s),c=U({...u.query,f:"json",...e}),m=B(c,n),{data:p}=await D(`${u.path}/queryGPSInfo`,m);return Ge.fromJSON(p)}async function Ui(s,r,n){const e=(r=M(me,r)).toJSON();r.geometry.spatialReference.imageCoordinateSystem&&(e.geometry=ne(r.geometry)),r.depthOffset&&r.adjust||delete e.options;const t=G(s),a=U({...t.query,f:"json",...e}),l=B(a,n),{data:u}=await D(`${t.path}/imageToMap`,l);return oe(u)}async function Bi(s,r,n){var c;const e=(r=M(De,r)).toJSON();(c=r.rasterIds)!=null&&c.length&&(e.rasterIds=r.rasterIds.join(","));const t=G(s),a=U({...t.query,f:"json",...e}),l=B(a,n),{data:u}=await D(`${t.path}/imageToMapMultiray`,l);return oe(u)}async function Qi(s,r,n){var d;const e=(r=M(Te,r)).toJSON(),t=await Ne(r.geometry),a=t==null?void 0:t[0];a!=null&&(e.geometry=ne(a)),r.visibleOnly||delete e.options;const l=(a==null?void 0:a.spatialReference)??((d=r.geometry)==null?void 0:d.spatialReference);l&&(e.inSR=Ve(l));const u=G(s),c=U({...u.query,f:"json",...e}),m=B(c,n),{data:p}=await D(`${u.path}/mapToImage`,m);return oe(p)}async function Hi(s,r,n){const e=(r=M(Le,r)).toJSON(),t=G(s),a=U({...t.query,f:"json",...e}),l=B(a,n),{data:u}=await D(`${t.path}/getImageUrl`,l);return at.fromJSON(u)}async function ki(s,r,n){var m;const e=(r=M(ge,r)).toJSON(),t=await Ne([r.fromGeometry,r.toGeometry]);t[0]!=null&&(e.fromGeometry=ne(t[0]),t[0].spatialReference&&(e.inSR=Ve(t[0].spatialReference))),t[1]!=null&&(e.toGeometry=ne(t[1])),(m=r.objectIds)!=null&&m.length&&(e.objectIds=e.objectIds.join(","));const a=G(s),l=U({...a.query,f:"json",...e}),u=B(l,n),{data:c}=await D(`${a.path}/find`,u);return Xe.fromJSON(c)}async function Wi(s,r,n){var S,N;const e=G(s),t=U({...e==null?void 0:e.query,f:"json"}),a=B(t,n),l=`${e==null?void 0:e.path}/${r}/info`,u=D(`${l}`,a),c=D(`${l}/keyProperties`,a),m=await Promise.allSettled([u,c]),p=m[0].status==="fulfilled"?m[0].value.data:null,d=m[1].status==="fulfilled"?m[1].value.data:null;let y=null;(S=p.statistics)!=null&&S.length&&(y=p.statistics.map((I=>({min:I[0],max:I[1],avg:I[2],stddev:I[3]}))));const w=Ue.fromJSON(p.extent),g=Math.ceil(w.width/p.pixelSizeX-.1),v=Math.ceil(w.height/p.pixelSizeY-.1),f=w.spatialReference,R=new q({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:f}),h=(N=p.histograms)!=null&&N.length?p.histograms:null,_=new si({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new Et({width:g,height:v,bandCount:p.bandCount,extent:w,spatialReference:f,pixelSize:R,pixelType:p.pixelType.toLowerCase(),statistics:y,histograms:h,keyProperties:d,storageInfo:_})}const Zi=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Ki=tr(or,{min:0,max:255});function Xi(s){const r=JSON.stringify(s),n=r.includes('"rasterFunctionDefinition":{'),e=n?r.match(/"type":"(.*?FunctionArguments")/gi):r.match(/"rasterFunction":"(.*?")/gi),t=e==null?void 0:e.map((a=>n?a.slice(8,-18):a.slice(18,-1)));return t?t.join("/"):null}const Yi=s=>{let r=class extends s{constructor(){super(...arguments),this._functionRasterInfos={},this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new O({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((a=>typeof a=="number")))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,a){e!=null&&this.format!=="lerc"&&(t[a]=e)}writeCompressionTolerance(e,t,a){this.format==="lerc"&&e!=null&&(t[a]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?te.fromJSON(t):null}get fieldsIndex(){return this.fields?new er(this.fields):null}set format(e){e&&Zi.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t!=null&&t.mosaicMethod&&(t=te.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const a=e||t.mosaicRule;return a?te.fromJSON(a):this._isMosaicRuleSupported(t)?te.fromJSON(t):null}writeMosaicRule(e,t,a){const{mosaicRule:l}=this;this._isValidCustomizedMosaicRule(l)&&(t[a]=l.toJSON())}writeNoData(e,t,a){e!=null&&typeof e=="number"&&(t[a]=Ki(e))}readObjectIdField(e,t){if(!e){const a=t.fields.find((l=>l.type==="esriFieldTypeOID"||l.type==="oid"));e=a==null?void 0:a.name}return e}get parsedUrl(){return rr(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const a=t==null?void 0:t.find((({name:l})=>l===e));return a==null?void 0:a.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,a){var c,m;const l=(m=(c=t==null?void 0:t.layerDefinition)==null?void 0:c.drawingInfo)==null?void 0:m.renderer,u=kr(l,a);return u==null?null:(u.type==="vector-field"&&t.symbolTileSize&&!l.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),Jt(u)||mt.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,a){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var l,u,c,m;const e=((l=this.fields)==null?void 0:l.map((p=>p.clone())))??[];e.push(Dr()),this.sourceType==="mosaic-dataset"&&((u=this.fields)!=null&&u.length)&&e.push(Tr()),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some((({name:p})=>p.toLowerCase()==="none"))&&e.push(jr()),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter((({name:p})=>p.toLowerCase()!=="none")).forEach((({name:p})=>e.push(Pr(p))));const{rasterInfo:t}=this;if(this._isVectorDataSet()){const p=(m=(c=t==null?void 0:t.multidimensionalInfo)==null?void 0:c.variables[0].unit)==null?void 0:m.trim(),d=Nr(p),y=Cr();e.push(d,y)}if(t!=null&&t.multidimensionalInfo&&this.sourceType==="raster-dataset"){const p=Or(t.multidimensionalInfo);e.push(...p)}const a=t==null?void 0:t.attributeTable;if(a!=null){const p=_r(a);e.push(...p)}return e}set rasterFunction(e){let t=e;t!=null&&t.rasterFunction&&(t=T.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const a=t.rasterFunctionInfos;return t.renderingRule||a!=null&&a.length&&a[0].name!=="None"?this._isRFTJson(t.renderingRule)?T.fromJSON({rasterFunctionDefinition:t.renderingRule}):T.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const a=e||t.extent.spatialReference;return a?se.fromJSON(a):null}writePixelType(e,t,a){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(t[a]=Pe.toJSON(e))}readVersion(e,t){let a=t.currentVersion;return a||(a=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),a}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let a=e;const{renderer:l,symbolizer:u,pixelFilter:c}=this;if(!this._isPicture()&&l&&u&&!c){await this._updateSymbolizer(u,l);const{bandIds:m}=this;a=await this._symbolize({pixelData:e,bandIds:m,symbolizer:u},t)}return a}destroy(){this._shutdownJobHandler()}async calculateVolume(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsCalculateVolume)throw new F("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=V(e),this.mosaicRule&&e.mosaicRule==null&&(e.mosaicRule=this.mosaicRule),Ni(this.url,e,this._getRequestOptions(t))}async computeAngles(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeAngles)throw new F("imagery-layer:compute-angles","this operation is not supported on the input image service");return Ci(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputePixelLocation)throw new F("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return Oi(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeHistograms)throw new F("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=V(e),this._applyMosaicAndRenderingRules(e),Ai(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new F("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=V(e),this._applyMosaicAndRenderingRules(e),_i(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(e.operationType==="base-and-top"?a.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?a.mensuration.supportsHeightFromBaseAndTopShadow:a.mensuration.supportsHeightFromTopAndTopShadow))throw new F("imagery-layer:measure-height","this operation is not supported on the input image service");return e=V(e),this._applyMosaicRule(e),Mi(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a.mensuration.supportsAreaAndPerimeter&&(!e.is3D||a.mensuration.supports3D)))throw new F("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=V(e),this._applyMosaicRule(e),Vi(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a.mensuration.supportsDistanceAndAngle&&(!e.is3D||a.mensuration.supports3D)))throw new F("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=V(e),this._applyMosaicRule(e),Ei(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a.mensuration.supportsPointOrCentroid&&(!e.is3D||a.mensuration.supports3D)))throw new F("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=V(e),this._applyMosaicRule(e),qi(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new F("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polyline")throw new F("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return Ji(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new F("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polygon")throw new F("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return Gi(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return t!=null?t.get(e):void 0}getFieldDomain(e,t){const a=this.getField(e);return a?a.domain:null}fetchImage(e,t,a,l={}){if(ir(mt.getLogger(this),"`ImageryLayer.fetchImage` is deprecated in favor of 'ImageryLayer.fetchPixels'.",{replacement:"ImageryLayer.fetchPixels",version:"4.33",warnOnce:!0}),e==null||t==null||a==null)throw new F("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");return this.internalFetchImage(e,t,a,l)}async internalFetchImage(e,t,a,l={}){await this._updateCurrentRasterInfo();const u=this.getExportImageServiceParameters(e,t,a,l.timeExtent);if(u==null){if(l.requestAsImageElement&&this._canRequestImageElement(this.format)){const R=document.createElement("canvas");return R.width=t,R.height=a,l.returnImageBitmap?{imageBitmap:await Nt(R,`${n(this.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:R}}const{bandIds:d,rasterInfo:y}=this,w=((d==null?void 0:d.length)||y.bandCount)??0,g=t*a,v=y.pixelType,f=[];for(let R=0;R<w;R++)f.push(ht.createEmptyBand(v,g));return{pixelData:{pixelBlock:new ht({width:t,height:a,pixels:f,mask:new Uint8Array(g),pixelType:v}),extent:e}}}const c=!!l.requestAsImageElement&&!this.pixelFilter,m=c&&!!l.returnImageBitmap,p={imageServiceParameters:u,imageProps:{extent:e,width:t,height:a,format:this.format},requestAsImageElement:c,returnImageBitmap:m,signal:l.signal};return this._requestArrayBuffer(p)}async fetchPixels(e,t,a,l={}){await this._initJobHandler(),l.applyRendering&&await this._updateCurrentRasterInfo();const u=l.applyRendering?void 0:new O({layer:this,requestRawData:!0,interpolation:l.interpolation??"nearest",bandIds:l.bandIds??[]}),c=this.getExportImageServiceParameters(e,t,a,l.timeExtent,u);if(c==null)return{extent:e,pixelBlock:null};delete c.pixelType,delete c.bandIds,delete c.compressionQuality;const m={imageServiceParameters:c,imageProps:{extent:e,width:t,height:a,format:this.format},requestAsImageElement:!1,returnImageBitmap:!1,signal:l.signal},{pixelData:p}=await this._requestArrayBuffer(m);return p??{extent:e,pixelBlock:null}}fetchKeyProperties(e){return D(n(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then((t=>t.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new F("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):D(n(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then((t=>Mt.fromJSON(t.data)))}getCatalogItemRasterInfo(e,t){const a={...t,query:this._getQueryParams()};return Wi(n(this.parsedUrl),e,a)}async getCatalogItemICSInfo(e,t){var We,Ze,Ie,fe,le;const{data:a}=await D(n(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),l=a==null?void 0:a.ics;if(!l)return;let u=null;try{u=(await D(n(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!(u!=null&&u.spatialReference))return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const c=this.version>=10.7?D(n(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((x=>x.data)).catch((()=>({}))):{},m=u.spatialReference,p={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:wt(m),outSR:"0:"+e},d=D(n(this.parsedUrl)+"/project",{query:this._getQueryParams(p),...t}).then((x=>x.data)).catch((()=>({}))),y=5,w=(u.xmin+u.xmax)/2,g=(u.ymax-u.ymin)/(y+1),v=u.ymin+g,f=[];for(let x=0;x<y;x++)f.push({x:w,y:v+g*x});const R={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:f}),inSR:wt(m),outSR:"0:"+e},h=D(n(this.parsedUrl)+"/project",{query:this._getQueryParams(R),...t}).then((x=>x.data)).catch((()=>({}))),_=await Promise.all([c,d,h]);let S=_[0].ipxf;if(S==null){const x=(We=l.geodataXform)==null?void 0:We.xf_0;((Ze=x==null?void 0:x.name)==null?void 0:Ze.toLowerCase())==="topup"&&((Ie=x==null?void 0:x.coefficients)==null?void 0:Ie.length)===6&&(S={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:x.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const N=Ue.fromJSON((le=(fe=_[1])==null?void 0:fe.geometries)==null?void 0:le[0]);N&&(N.spatialReference=new se({wkid:0,imageCoordinateSystem:l}));const I=_[2].geometries?_[2].geometries.filter((x=>(x==null?void 0:x.x)!=null&&x.y!=null&&x.x!=="NaN"&&x.y!=="NaN")):[],L=I.length;if(L<3)return{ics:l,icsToPixelTransform:S,icsExtent:N,northDirection:null};let E=0,A=0,C=0,J=0;for(let x=0;x<L;x++)E+=I[x].x,A+=I[x].y,C+=I[x].x*I[x].x,J+=I[x].x*I[x].y;const Q=(L*J-E*A)/(L*C-E*E);let he=0;const Se=I[y-1].x>I[0].x,qe=I[y-1].y>I[0].y;return Q===1/0?he=qe?90:270:Q===0?he=Se?0:180:Q>0?he=Se?180*Math.atan(Q)/Math.PI:180*Math.atan(Q)/Math.PI+180:Q<0&&(he=qe?180+180*Math.atan(Q)/Math.PI:360+180*Math.atan(Q)/Math.PI),{ics:l,icsToPixelTransform:S,icsExtent:N,northDirection:he}}async generateRasterInfo(e,t){var c;e=M(T,e);const a={...t,query:this._getQueryParams()};if(!e||((c=e.functionName)==null?void 0:c.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??Ct(n(this.parsedUrl),this.sourceJSON,a);const l=Xi(e);if(!l)throw new F("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];const u=li(n(this.parsedUrl),e,a);this._functionRasterInfos[l]=u;try{return await u}catch(m){throw this._functionRasterInfos[l]=null,m}}getExportImageServiceParameters(e,t,a,l,u){var h,_;e=e.clone().shiftCentralMeridian();const c=Ve(e.spatialReference,n(this.parsedUrl));u??(u=this.exportImageServiceParameters);const m=u.toJSON(),{bandIds:p,noData:d}=m;let{renderingRule:y}=m;const w=(h=this.rasterFunction)==null?void 0:h.rasterFunctionDefinition,g=(_=this.renderer)==null?void 0:_.type,v=!g||g==="raster-stretch"||g==="raster-colormap"||g==="unique-value"||g==="class-breaks"||g==="raster-shaded-relief";if(p!=null&&p.length&&this._hasRasterFunction(this.rasterFunction)&&!w&&v){const S={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:p}};if(y.rasterFunction==="Stretch")S.rasterFunctionArguments.Raster=y.rasterFunctionArguments.Raster,y.rasterFunctionArguments.Raster=S;else if(y.rasterFunction==="Colormap"){const N=y.rasterFunctionArguments.Raster;(N==null?void 0:N.rasterFunction)==="Stretch"?(S.rasterFunctionArguments.Raster=N.rasterFunctionArguments.Raster,N.rasterFunctionArguments.Raster=S):(S.rasterFunctionArguments.Raster=N,y.rasterFunctionArguments.Raster=S)}else S.rasterFunctionArguments.Raster=y,y=S;m.bandIds=void 0}else m.bandIds=p==null?void 0:p.join(",");Array.isArray(d)&&d.length>0&&(m.noData=d.join(","));const f=this._processMultidimensionalIntersection(null,l,u.mosaicRule);if(f.isOutSide)return null;m.mosaicRule=f.mosaicRule!=null?JSON.stringify(f.mosaicRule):null,l=f.timeExtent,m.renderingRule=this._getRenderingRuleString(T.fromJSON(y));const R={};if(l!=null){const{start:S,end:N}=l.toJSON();S&&N&&S===N?R.time=""+S:S==null&&N==null||(R.time=`${S??"null"},${N??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:c,imageSR:c,size:t+","+a,...m,...R}}async getSamples(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a!=null&&a.operations.supportsGetSamples))throw new F("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=V(e);const{raster:l}=this;return l&&e.raster==null&&(e.raster=l),$i(this.url,e,this._getRequestOptions(t))}async identify(e,t){var c;if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsIdentify)throw new F("imagery-layer:identify","identify operation is not supported on the input image service");e=V(e),this.version<10.91&&((c=e.geometry)==null?void 0:c.type)==="extent"&&(e.geometry=gt.fromExtent(e.geometry));const a=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(a.isOutSide)throw new F("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=a.timeExtent,e.mosaicRule=a.mosaicRule;const{raster:l,rasterFunction:u}=this;return u&&e.rasterFunction==null&&(e.rasterFunction=u),l&&e.raster==null&&(e.raster=l),_t(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMap)throw new F("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return Ui(n(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMapMultiray)throw new F("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return Bi(n(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMapToImage)throw new F("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return Qi(n(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsFindImages)throw new F("imagery-layer:find-images","findImages operation is not supported on the input image service");return ki(n(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsGetImageUrl)throw new F("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return Hi(n(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new dt({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryBoundary)throw new F("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},Li(n(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),sr(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),ci(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryGPSInfo)throw new F("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},zi(n(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),mi(this.url,e,t)}async queryVisibleRasters(e,t){var N,I,L,E;if(!e)throw new F("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:a,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:c}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1,p=null,d=null;const y=je.servicePixelValue.toLowerCase(),w=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(m=e.outFields.some((A=>!A.toLowerCase().startsWith(y))),this.version>=10.4)){const A=e.outFields.filter((J=>J.toLowerCase().startsWith(y)&&J.length>y.length)).map((J=>{const Q=J.slice(y.length+1);return[this._updateRenderingRulesFunctionName(Q,w),Q]}));p=A.map((J=>new T({functionName:J[0]}))),d=A.map((J=>J[1]));const{rasterFunction:C}=this;p.length===0?C!=null&&C.functionName?(p.push(C),d.push(C.functionName)):p=null:C!=null&&C.functionName&&!p.some((J=>J.functionName===C.functionName))&&(p.push(C),d.push(C.functionName))}const g=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:v}=this;let f=e.timeExtent||this.timeExtent;if(v){const{isOutside:A,intersection:C}=yt(v,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:(N=this.exportImageServiceParameters.mosaicRule)==null?void 0:N.multidimensionalDefinition});if(A)throw new F("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");(C==null?void 0:C.timeExtent)!=null&&(f=C.timeExtent)}const R=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,f);let h=e.geometry;this.version<10.91&&(h==null?void 0:h.type)==="extent"&&(h=gt.fromExtent(h));const _=this._getQueryParams({geometry:h,timeExtent:f,mosaicRule:R,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:p,pixelSize:a,returnCatalogItems:m,returnGeometry:g,raster:this.raster,maxItemCount:u?1:null});delete _.f;const S=new $(_);try{await this._generateRasterInfo(this.rasterFunction);const A=await _t(this.url,S,{signal:t==null?void 0:t.signal,query:{...this.customParameters}}),C=e.outFields,J=A.value!=null&&A.value.toLowerCase().includes("nodata"),Q=m&&!g&&((I=A==null?void 0:A.catalogItems)==null?void 0:I.features.length)&&(c||!J),he=this.multidimensionalInfo&&this.sourceType==="raster-dataset"?Ar({rasterInfo:this.rasterInfo,multidimensionalDefinition:R==null?void 0:R.multidimensionalDefinition,timeExtent:f,multidimensionalSubset:this.multidimensionalSubset}):null;if(!Q)return this._processVisibleRastersResponse(A,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:c,templateFields:C,effectiveMultidimensionalDefinition:he});const Se=this.objectIdField||"ObjectId",qe=((L=A.catalogItems)==null?void 0:L.features)??[],We=qe.map((fe=>{var le;return(le=fe.attributes)==null?void 0:le[Se]})),Ze=new dt({objectIds:We,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[Se]}),Ie=await this.queryRasters(Ze);return(E=Ie==null?void 0:Ie.features)!=null&&E.length&&Ie.features.forEach((fe=>{qe.forEach((le=>{le.attributes[Se]===fe.attributes[Se]&&fe.geometry&&(le.geometry=fe.geometry.clone(),e.outSpatialReference!=null&&(le.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(A,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:c,templateFields:C,effectiveMultidimensionalDefinition:he})}catch{throw new F("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const a=D(n(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((c=>{var m;return(m=c.data)==null?void 0:m.statistics})),l=D(n(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((c=>{var m;return(m=c.data)==null?void 0:m.histograms})),u=await Promise.all([a,l]);return u[0]&&u[0].forEach((c=>{c.avg=c.mean,c.stddev=c.standardDeviation})),{statistics:u[0]||null,histograms:u[1]||null}}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return $r(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,a=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):Ct(n(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((c=>(this._set("serviceRasterInfo",c),this._set("multidimensionalInfo",c.multidimensionalInfo),ui(c,t),c))),l=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([a,l,u]).then((c=>{c[1]?this._set("rasterInfo",c[1]):this._set("rasterInfo",c[0]),c[2]&&this._set("rasterFunctionInfos",c[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),mt.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([ar((()=>this.rasterFunction),(p=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(p).then((d=>{d&&(this.rasterInfo=d)}))}))]);const{serviceRasterInfo:m}=this;m.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(m)}))}_combineMosaicRuleWithTimeExtent(e,t){var v;const a=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(e==null||l==null||t==null||(a==null?void 0:a.startField)==null)return e;const{startField:u}=a,c=l.variables.some((f=>f.dimensions.some((R=>R.name===u))))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=(v=e.multidimensionalDefinition)==null?void 0:v.filter((f=>f.dimensionName!==c)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const m=e.multidimensionalDefinition.filter((f=>f.dimensionName===c)),p=t.start!=null?t.start.getTime():null,d=t.end!=null?t.end.getTime():null,y=p==null||d==null||p===d,w=y?[p||d]:[[p,d]],g=this.version>=10.8;if(m.length)m.forEach((f=>{f.dimensionName===c&&(g?(f.dimensionName=null,f.isSlice=!1,f.values=[]):(f.isSlice=y,f.values=w))}));else if(!g){const f=e.multidimensionalDefinition.filter((R=>R.variableName!=null&&R.dimensionName==null));f.length?f.forEach((R=>{R.dimensionName=c,R.isSlice=y,R.values=w})):e.multidimensionalDefinition.push(new Mr({variableName:"",dimensionName:c,isSlice:y,values:w}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((t=>!(!t.variableName&&!t.dimensionName))),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQuery)throw new F("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?M(dt,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:a}=this;return e.type==="unique-value"&&this._hasRasterFunction(a)&&(t==null?void 0:t.bandCount)===1&&["u8","s8"].includes(t.pixelType)||t!=null&&e!=null&&Wr(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var a;let t=this.sourceJSON;if(!t){const{data:l,ssl:u}=await D(n(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=l,this.sourceJSON=t,u&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((a=t.capabilities)==null?void 0:a.toLowerCase().split(",").map((l=>l.trim())).indexOf("tilesonly"))>-1)throw new F("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var l;if(!e)return!1;const t=this._isMosaicDataset(e),a=e.currentVersion>=10.71&&e.hasMultidimensions&&!(((l=e.fields)==null?void 0:l.length)>1);return t||a}_isVectorFieldResampleFunction(e){if(e==null)return!1;const{functionName:t,functionArguments:a}=e,l=(t==null?void 0:t.toLowerCase())==="resample",u=(a==null?void 0:a.ResampleType)||(a==null?void 0:a.resampleType);return l&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var l,u,c;const t=this._isPicture(),{rasterInfo:a}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){const m=(u=(l=this.mosaicRule)==null?void 0:l.multidimensionalDefinition)==null?void 0:u[0].variableName,p=Zr({variableName:m,rasterFunctionName:(c=this.rasterFunction)==null?void 0:c.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&a.bandCount>=3){const y=(p==null?void 0:p.bandIds)??Kr(a);!y||a.bandCount===3&&y[0]===0&&y[1]===1&&y[2]===2||(this.bandIds=y)}e||(e=(p==null?void 0:p.renderer)??Xr(a,{bandIds:this.bandIds,variableName:this.rasterFunction?null:m}));const d=Yr(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=d,this.symbolizer.rasterInfo=a):this.symbolizer=new ai({rendererJSON:d,rasterInfo:a}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){(e==null?void 0:e.renderingRule)!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:a}=this;return{raster:t,viewId:a,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e==null?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,a){return this._rasterJobHandler?this._rasterJobHandler.decode({data:e,options:t}):Pt(e,t,a)}async _getRasterFunctionInfos(e){var a;const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(a=(await D(n(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:a.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:a,returnImageBitmap:l,signal:u}=e;if(a&&this._canRequestImageElement(t.format)){const v=`${n(this.parsedUrl)}/exportImage`,{data:f}=await D(v,{responseType:l?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return f instanceof Blob?{imageBitmap:await Nt(f,v,u),params:t}:{imageOrCanvasElement:f,params:t}}const c=this._initJobHandler(),m=D(n(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),p=(await Promise.all([m,c]))[0].data,d=t.format||"jpgpng";let y=d;if(y!=="bsq"&&y!=="bip"&&(y=ni(p)),!y)throw new F("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(p)));const w={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(y==="png"||y==="jpg")?Pt(p,{useCanvas:!0,...t},w):this._decodePixelBlock(p,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:d},w)),extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch((()=>null))}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this.defaultMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){var a;if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=Vr(e,{multidimensionalSubset:this.multidimensionalSubset});if(t!=null&&t.length>0){this.mosaicRule=this.mosaicRule||new te;const l=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&((a=this.rasterFunction.functionName)==null?void 0:a.toLowerCase())!=="none"&&t.forEach((u=>u.variableName="")),t=t.filter((({variableName:u,dimensionName:c})=>u&&u!=="*"||c)),!(l!=null&&l.length)&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){var _,S,N;t=t||{};const a=e.value,{templateRRFunctionNames:l,showNoDataRecords:u,returnDomainValues:c,templateFields:m}=t,p=e.processedValues;let d=(_=e.catalogItems)==null?void 0:_.features,y=((N=(S=e.properties)==null?void 0:S.Values)==null?void 0:N.map((I=>I.replaceAll(/ /gi,", "))))||[];const w=this.objectIdField||"ObjectId",g=typeof a=="string"&&a.toLowerCase().includes("nodata"),v=[];if(a&&!d&&(!g||u)){const I={};I[w]=0,y=[a],d=[new nr({geometry:this.fullExtent,attributes:I})],this.multidimensionalInfo&&this.sourceType==="raster-dataset"&&qr(this.rasterFields,I,t.effectiveMultidimensionalDefinition)}if(!d)return[];this._updateResponseFieldNames(d,m),g&&!u&&(d=[]);const{itemPixelValue:f,servicePixelValue:R}=je,h=this.rasterFields.some((I=>I.name===f));for(let I=0;I<d.length;I++){const L=d[I];if(a!=null){const E=y[I],A=this.rasterFunction&&p&&p.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?p[l.indexOf(this.rasterFunction.functionName)]:a;if(E.toLowerCase()==="nodata"&&!u)continue;h&&(L.attributes[f]=E),L.attributes[R]=A,this._updateFeatureWithMagDirValues(L,E);const C=this.fields&&this.fields.length>0;let J=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?C?E:a:A;this.rasterFunction||(J=C?E:a),this._updateFeatureWithRasterAttributeTableValues(L,J)}if(L.sourceLayer=L.layer=this,c&&this._updateFeatureWithDomainValues(L),l&&p&&l.length===p.length)for(let E=0;E<l.length;E++){const A=`${je.servicePixelValue}.${l[E]}`;L.attributes[A]=p[E]}v.push(d[I])}return v}_processMultidimensionalIntersection(e,t,a){const{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:t,mosaicRule:a=this._combineMosaicRuleWithTimeExtent(a,t)};if(l){const{isOutside:u,intersection:c}=yt(l,{geometry:e,timeExtent:t});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};(c==null?void 0:c.timeExtent)!=null&&(t=c.timeExtent)}if(a=this._combineMosaicRuleWithTimeExtent(a,t),a==null?void 0:a.multidimensionalDefinition){const{isOutside:u}=yt(l,{multidimensionalDefinition:a.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:a}}_updateFeatureWithRasterAttributeTableValues(e,t){const a=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(a==null)return;const{features:l,fields:u}=a,c=u.map((p=>p.name)).find((p=>p.toLowerCase()==="value"));if(!c)return;const m=l.filter((p=>p.attributes[c]===(t!=null?parseInt(t,10):null)));m&&m[0]&&u.forEach((p=>{const d=Er+p.name;e.attributes[d]=m[0].attributes[p.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const a=t.split(/,\s*/).map((p=>parseFloat(p))),l=a.map((p=>[p])),u=a.map((p=>({minValue:p,maxValue:p,noDataValue:null}))),c=new ht({height:1,width:1,pixelType:"f32",pixels:l,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:c,extent:new Ue(0,0,0,0,this.spatialReference)});const m=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[c.pixels[0][0],c.pixels[1][0]]:oi([c.pixels[0][0],c.pixels[1][0]]);e.attributes[je.magnitude]=m[0],e.attributes[je.direction]=m[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((a=>a.domain&&a.domain.type==="coded-value"));t!=null&&t.forEach((a=>{const l=e.attributes[a.name];if(l!=null){const u=a.domain.codedValues.find((c=>c.code===l));u&&(e.attributes[a.name]=u.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const a=this.fieldsIndex;a!=null&&e.forEach((l=>{var u;if(l!=null&&l.attributes)for(const c of t){const m=(u=a.get(c))==null?void 0:u.name;m&&m!==c&&(l.attributes[c]=l.attributes[m],delete l.attributes[m])}}))}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return(e==null?void 0:e.functionName)!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const a=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(a)?t.get(a):e}_isRFTJson(e){return(e==null?void 0:e.name)&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:a,rasterFunction:l}=this;l&&e.rasterFunction==null&&(e.rasterFunction=l),a&&e.mosaicRule==null&&(e.mosaicRule=a),t&&e.raster==null&&(e.raster=t)}async _updateCurrentRasterInfo(e){if(this.renderer||this.symbolizer){const t=await this._generateRasterInfo(this.rasterFunction,{signal:e});t&&(this.rasterInfo=t)}}_applyMosaicRule(e){const{raster:t,mosaicRule:a}=this;a&&e.mosaicRule==null&&(e.mosaicRule=a),t&&e.raster==null&&(e.raster=t)}_readCapabilities(e){var _;const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((S=>S.trim())):["image","catalog"],{currentVersion:a,maxRecordCount:l}=e,u=t.includes("image"),c=e.serviceDataType==="esriImageServiceDataTypeElevation",m=!(!e.spatialReference&&!((_=e.extent)!=null&&_.spatialReference)),p=t.includes("edit"),d=t.includes("mensuration")&&m,y=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map((S=>S.trim())),w=d&&y.includes("basic"),g=this._isMosaicDataset(e)&&t.includes("catalog"),v=t.includes("download"),f=a>=10.7&&c||a>=11.4&&(c||d&&y.includes("3d")),R=g&&e.fields&&e.fields.length>0,h=R&&e.supportsAdvancedQueries?e.advancedQueryCapabilities:void 0;return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:u,supportsExportImage:u,supportsIdentify:u,supportsImageToMap:a>=11.2&&g,supportsImageToMapMultiray:a>=11.2&&g,supportsMapToImage:a>=11.2&&g,supportsFindImages:a>=11.2&&g,supportsGetImageUrl:a>=11.3&&v,supportsMeasure:d,supportsMeasureFromImage:a>=11.2,supportsDownload:v,supportsQuery:R,supportsGetSamples:a>=10.2&&u,supportsProject:a>=10.3&&u,supportsComputeStatisticsHistograms:a>=10.4&&u,supportsQueryBoundary:a>=10.6&&u,supportsCalculateVolume:f,supportsComputePixelLocation:a>=10.7&&g,supportsComputeAngles:a>=10.91,supportsQueryGPSInfo:a>=11.2&&g,supportsAdd:p,supportsDelete:p,supportsEditing:p,supportsUpdate:p,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:l,maxRecordCountFactor:void 0,maxUniqueIDCount:void 0,supportsStatistics:!!(h!=null&&h.supportsStatistics),supportsOrderBy:!!(h!=null&&h.supportsOrderBy),supportsDistinct:!!(h!=null&&h.supportsDistinct),supportsPagination:!!(h!=null&&h.supportsPagination),supportsPaginationOnAggregatedQueries:!!(h!=null&&h.supportsPaginationOnAggregatedQueries),supportsStandardizedQueriesOnly:!!(h!=null&&h.useStandardizedQueries),supportsPercentileStatistics:!!(h!=null&&h.supportsPercentileStatistics),supportsCentroid:!!(h!=null&&h.supportsReturningGeometryCentroid),supportsCurrentUser:!1,supportsDistance:!!(h!=null&&h.supportsQueryWithDistance),supportsExtent:!!(h!=null&&h.supportsReturningQueryExtent),supportsGeometryProperties:!!(h!=null&&h.supportsReturningGeometryProperties),supportsHavingClause:!!(h!=null&&h.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:(h==null?void 0:h.supportsSqlExpression)??!!h,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(h!=null&&h.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:w,supportsAreaAndPerimeter:w,supportsPointOrCentroid:w,supportsHeightFromBaseAndTop:d&&y.includes("base-top height"),supportsHeightFromBaseAndTopShadow:d&&y.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:d&&y.includes("top-top shadow height"),supports3D:d&&y.includes("3d")}}}};function n(e){return(e==null?void 0:e.path)??""}return i([o({clonable:!1})],r.prototype,"_functionRasterInfos",void 0),i([o({readOnly:!0})],r.prototype,"_serviceSupportsMosaicRule",void 0),i([z("_serviceSupportsMosaicRule",["currentVersion","fields"])],r.prototype,"readServiceSupportsMosaicRule",null),i([o({readOnly:!0})],r.prototype,"_rasterFunctionNamesIndex",null),i([o()],r.prototype,"adjustAspectRatio",void 0),i([o({type:[ke],json:{write:!0}})],r.prototype,"bandIds",void 0),i([z("bandIds")],r.prototype,"readBandIds",null),i([o({readOnly:!0,json:{read:!1}})],r.prototype,"capabilities",void 0),i([z("service","capabilities",["capabilities","currentVersion","serviceDataType"])],r.prototype,"readCapabilities",null),i([o({type:Number})],r.prototype,"compressionQuality",void 0),i([j("compressionQuality")],r.prototype,"writeCompressionQuality",null),i([o({type:Number})],r.prototype,"compressionTolerance",void 0),i([j("compressionTolerance")],r.prototype,"writeCompressionTolerance",null),i([o({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),i([o({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],r.prototype,"defaultMosaicRule",void 0),i([z("defaultMosaicRule",["defaultMosaicMethod"])],r.prototype,"readDefaultMosaicRule",null),i([o({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],r.prototype,"definitionExpression",void 0),i([o({readOnly:!0,constructOnly:!0})],r.prototype,"exportImageServiceParameters",void 0),i([o()],r.prototype,"rasterInfo",void 0),i([o({readOnly:!0,type:[Kt]})],r.prototype,"fields",void 0),i([o({readOnly:!0})],r.prototype,"fieldsIndex",null),i([o({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],r.prototype,"format",null),i([z("service","format",["serviceDataType"])],r.prototype,"readFormat",null),i([o({type:Ue})],r.prototype,"fullExtent",void 0),i([o({readOnly:!0})],r.prototype,"hasMultidimensions",void 0),i([o({json:{read:{source:"maxImageHeight"}}})],r.prototype,"imageMaxHeight",void 0),i([o({json:{read:{source:"maxImageWidth"}}})],r.prototype,"imageMaxWidth",void 0),i([o({type:String,json:{type:Be.jsonValues,read:Be.read,write:Be.write}})],r.prototype,"interpolation",void 0),i([o()],r.prototype,"minScale",void 0),i([z("service","minScale")],r.prototype,"readMinScale",null),i([o()],r.prototype,"maxScale",void 0),i([z("service","maxScale")],r.prototype,"readMaxScale",null),i([o({type:te})],r.prototype,"mosaicRule",null),i([z("mosaicRule",["mosaicRule","defaultMosaicMethod"])],r.prototype,"readMosaicRule",null),i([j("mosaicRule")],r.prototype,"writeMosaicRule",null),i([o()],r.prototype,"multidimensionalInfo",void 0),i([o({type:Br,json:{write:!0}})],r.prototype,"multidimensionalSubset",void 0),i([o({json:{type:ke}})],r.prototype,"noData",void 0),i([j("noData")],r.prototype,"writeNoData",null),i([o({type:String,json:{type:Qe.jsonValues,read:Qe.read,write:Qe.write}})],r.prototype,"noDataInterpretation",void 0),i([o({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],r.prototype,"objectIdField",void 0),i([z("objectIdField")],r.prototype,"readObjectIdField",null),i([o({readOnly:!0})],r.prototype,"geometryType",void 0),i([o({})],r.prototype,"typeIdField",void 0),i([o({})],r.prototype,"types",void 0),i([o({readOnly:!0})],r.prototype,"parsedUrl",null),i([o({type:Function})],r.prototype,"pixelFilter",void 0),i([o()],r.prototype,"raster",void 0),i([o({readOnly:!0})],r.prototype,"sourceType",void 0),i([z("sourceType",["serviceSourceType","fields"])],r.prototype,"readSourceType",null),i([o()],r.prototype,"viewId",void 0),i([o()],r.prototype,"renderer",null),i([o({types:Hr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Qr,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],r.prototype,"internalRenderer",null),i([z("internalRenderer")],r.prototype,"readRenderer",null),i([j("internalRenderer")],r.prototype,"writeRenderer",null),i([o({clonable:!1})],r.prototype,"symbolizer",void 0),i([o(Xt)],r.prototype,"opacity",void 0),i([o({readOnly:!0})],r.prototype,"rasterFields",null),i([o({constructOnly:!0})],r.prototype,"rasterFunctionInfos",void 0),i([o({type:T,json:{name:"renderingRule"}})],r.prototype,"rasterFunction",null),i([z("rasterFunction",["renderingRule","rasterFunctionInfos"])],r.prototype,"readRasterFunction",null),i([o({readOnly:!0})],r.prototype,"serviceDataType",void 0),i([o({readOnly:!0,type:se})],r.prototype,"spatialReference",void 0),i([z("spatialReference",["spatialReference","extent"])],r.prototype,"readSpatialReference",null),i([o({type:Pe.apiValues,json:{read:Pe.read,type:Pe.jsonValues}})],r.prototype,"pixelType",void 0),i([j("pixelType")],r.prototype,"writePixelType",null),i([o({constructOnly:!0,type:Et})],r.prototype,"serviceRasterInfo",void 0),i([o()],r.prototype,"sourceJSON",void 0),i([o(Yt)],r.prototype,"url",void 0),i([o({readOnly:!0})],r.prototype,"version",void 0),i([z("version",["currentVersion","fields","timeInfo"])],r.prototype,"readVersion",null),r=i([b("esri.layers.mixins.ArcGISImageService")],r),r};let H=class extends lr(ur(pr(cr(mr(pi(Yi(ei(dr(yr(hr(fr(ye.ClonableMixin(gr))))))))))))){constructor(...s){super(...s),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=wr((async(r,n,e)=>{const{save:t,saveAs:a}=await vr(()=>import("./imageryUtils-DTMFfDiQ.js"),__vite__mapDeps([0,1,2,3,4,5,6]));switch(r){case Ke.SAVE:return t(this,n);case Ke.SAVE_AS:return a(this,e,n)}}))}normalizeCtorArgs(s,r){return typeof s=="string"?{url:s,...r}:s}load(s){const r=s!=null?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},s).catch(Rr).then((()=>this._fetchService(r)))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(s){this._set("legendEnabled",s)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(s){this._set("listMode",s)}writeOperationalLayerType(s,r,n){var t;const e=((t=this.renderer)==null?void 0:t.type)==="vector-field";r[n]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){var s;return!(!this.raster||!((s=this.url)!=null&&s.toLowerCase().includes("/rasterrendering/imageserver")))}createPopupTemplate(s){const{rasterFields:r}=this,n=new Set,e=je.itemPixelValue.toLowerCase(),t=this.sourceType==="raster-dataset",a=Jr.toLowerCase(),l=`${je.servicePixelValue.toLowerCase()}.`;for(const m of r){const p=m.name.toLowerCase();p===e||p.startsWith(l)||t&&p.startsWith(a)||n.add(m.name)}const u=br({fields:r,title:this.title},{...s,visibleFieldNames:n}),{rasterInfo:c}=this;return u!=null&&u.fieldInfos&&c&&Gr(u.fieldInfos,c),u}queryFeatures(s,r){return this.queryRasters(s,r).then((n=>{if(n!=null&&n.features)for(const e of n.features)e.layer=e.sourceLayer=this;return n}))}queryFeatureCount(s,r){return this.queryRasterCount(s,r)}redraw(){this.emit("redraw")}async save(s){return this._debouncedSaveOperations(Ke.SAVE,s)}async saveAs(s,r){return this._debouncedSaveOperations(Ke.SAVE_AS,r,s)}serviceSupportsSpatialReference(s){return Sr(this,s)}write(s,r){if(!this._isPreviewLayer)return super.write(s,r);if(r!=null&&r.messages){const n=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new F("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${n}'`,{layer:this}))}return null}};i([o(Ir)],H.prototype,"legendEnabled",null),i([o({type:["show","hide"]})],H.prototype,"listMode",null),i([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],H.prototype,"isReference",void 0),i([o({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],H.prototype,"operationalLayerType",void 0),i([j("web-map","operationalLayerType")],H.prototype,"writeOperationalLayerType",null),i([o(xr)],H.prototype,"popupEnabled",void 0),i([o({type:Fr,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],H.prototype,"popupTemplate",void 0),i([o({readOnly:!0})],H.prototype,"defaultPopupTemplate",null),i([o({readOnly:!0,json:{read:!1}})],H.prototype,"type",void 0),i([o({readOnly:!0})],H.prototype,"_isPreviewLayer",null),H=i([b("esri.layers.ImageryLayer")],H);const As=H;export{As as default};
