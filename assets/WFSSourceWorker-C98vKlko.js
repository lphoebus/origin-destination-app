import{b4 as f,b_ as p,dF as E,gL as q,gZ as P,ga as I,bf as g,g_ as _,fd as C,fm as b,c1 as $}from"./index-Bkom2Sdc.js";import{u as j,l as N}from"./featureConversionUtils-nye7QKUe.js";import{f as Q}from"./FeatureStore-CKZD-lCZ.js";import{f as O,a as k}from"./queryUtils-CyiURm7K.js";import{W as L}from"./QueryEngine-wy14dKBu.js";import{E as M,N as Z}from"./geojson-B_Jt2uie.js";import{d as A}from"./sourceUtils-DzbcHVbl.js";import{o as U,e as v,K as y}from"./wfsUtils-CgbHhQ53.js";import"./BoundsStore-DWK49Ij3.js";import"./PooledRBush-zQSL8L9Y.js";import"./timeSupport-CXh2VZCm.js";import"./optimizedFeatureQueryEngineAdapter-DTvxxVGs.js";import"./WhereClauseCache-Bv0Ws1nb.js";import"./WhereClause-GpJYBgPS.js";import"./QueryEngineCapabilities-DJC_YILC.js";import"./utils-C4ZnkFTC.js";import"./utils-CM17lTaw.js";import"./ClassBreaksDefinition-DLcEIyEO.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-9QRDBkMs.js";import"./date-DCujAECq.js";import"./xmlUtils-CtUoQO7q.js";const x="esri.layers.WFSLayer";class pe{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(t,e={}){const{getFeatureUrl:a,getFeatureOutputFormat:s,fields:n,geometryType:u,featureType:o,maxRecordCount:i,maxTotalRecordCount:c,maxPageCount:R,objectIdField:d,customParameters:F}=t,{spatialReference:h,getFeatureSpatialReference:m}=U(a,o,t.spatialReference);try{await O(m,h)}catch{throw new f("unsupported-projection","Projection not supported",{inSpatialReference:m,outSpatialReference:h})}p(e),this._customParameters=F,this._featureType=o,this._fieldsIndex=E.fromLayerJSON({fields:n,dateFieldsTimeReference:n.some(T=>T.type==="esriFieldTypeDate")?{timeZoneIANA:q}:null}),this._geometryType=u,this._getFeatureUrl=a,this._getFeatureOutputFormat=s,this._getFeatureSpatialReference=m,this._maxRecordCount=i,this._maxTotalRecordCount=c,this._maxPageCount=R,this._objectIdField=d,this._spatialReference=h;let l=await this._snapshotFeatures(e);if(l.errors.length>0&&(this._supportsPagination=!1,l=await this._snapshotFeatures(e),l.errors.length>0))throw l.errors[0];const S={type:"object-id",fieldName:d};return this._queryEngine=new L({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,featureIdInfo:S,spatialReference:h,timeInfo:null,featureStore:new Q({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(l.features),{warnings:w(l),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new f("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(t,e.signal)).filter(P)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),await this._queryEngine.executeQueryForSnapping(t,e.signal)}async queryAttributeBins(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(t,e.signal)}async refresh(t){return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=I(e=>this._snapshotFeatures({signal:e})),this._snapshotTask.promise.then(e=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(e.features);for(const a of w(e))g.getLogger(x).warn(new _("wfs-layer:refresh-warning",a.message,a.details));e.errors?.length&&g.getLogger(x).warn(new _("wfs-layer:refresh-error","Refresh completed with errors",{errors:e.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t?.signal,a=this._maxTotalRecordCount,s=this._maxPageCount,n=this._supportsPagination&&s>1?await v(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let u=[];const o=[];if(n==null)try{u=await this._singleQuery(e)}catch(i){C(i)||o.push(i)}else{const i=Math.min(n,a),c=J(this,b(Math.ceil(i/this._maxRecordCount),1,s),e);await Promise.allSettled(Array.from({length:10}).map(()=>W(c,u,o)))}return p(e),{features:u,totalRecordCount:n,maxTotalRecordCount:a,maxPageCount:s,errors:o}}async _singleQuery(t){const e=Number.isFinite(this._maxRecordCount)&&this._maxRecordCount>0?this._maxRecordCount:void 0,a=await y(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,count:e,signal:t});return this._processGeoJSON(a,{signal:t})}async _pageQuery(t,e){const a=t*this._maxRecordCount,s=await y(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:a,count:this._maxRecordCount,signal:e});return this._processGeoJSON(s,{startIndex:a,signal:e})}_processGeoJSON(t,e){M(t,this._getFeatureSpatialReference.wkid);const{startIndex:a,signal:s}=e;p(s);const n=Z(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!$(this._spatialReference,this._getFeatureSpatialReference))for(const o of n)o.geometry!=null&&(o.geometry=j(k(N(o.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=a??1;for(const o of n){const i={};A(this._fieldsIndex,i,o.attributes,!0),o.attributes=i,i[this._objectIdField]==null&&(o.objectId=i[this._objectIdField]=u++)}return n}}function*J(r,t,e){for(let a=0;a<t;a++)yield r._pageQuery(a,e)}async function W(r,t,e){let a=r.next();for(;!a.done;){try{const s=await a.value;t.push(...s)}catch(s){C(s)||e.push(s)}a=r.next()}}function w(r){const t=[];return r.totalRecordCount!=null&&(r.features.length<r.totalRecordCount&&t.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${r.features.length} of ${r.totalRecordCount} in ${r.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount}}),r.totalRecordCount>r.maxTotalRecordCount&&t.push({name:"wfs-layer:large-dataset",message:`The number of ${r.totalRecordCount} features exceeds the maximum allowed of ${r.maxTotalRecordCount}.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount,maxTotalRecordCount:r.maxTotalRecordCount}})),t}export{pe as default};
