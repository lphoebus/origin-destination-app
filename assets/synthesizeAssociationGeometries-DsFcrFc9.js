import{b6 as f,b8 as a,ba as n,bb as y,eG as d,eI as l,eH as h,bH as b}from"./index-Bkom2Sdc.js";import{a as x}from"./Association-CuMQNTJx.js";let r=class extends f{constructor(t){super(t),this.maxGeometryCountExceeded=!1,this.associations=[]}};a([n({type:Boolean,json:{write:!0}})],r.prototype,"maxGeometryCountExceeded",void 0),a([n({type:[x],json:{write:!0}})],r.prototype,"associations",void 0),r=a([y("esri.rest.networks.support.AssociationGeometriesResult")],r);async function j(t,o,e){const s=d(t),i={...o.toJSON(),f:"json"},c=l({...s.query,...i});e?e.method="post":e={method:"post"};const p=h(c,e),m=`${s.path}/synthesizeAssociationGeometries`;return b(m,p).then(u=>G(u,o.outSpatialReference))}function G(t,o){const{data:e}=t;if(o)for(const s of e.associations)s.geometry.spatialReference||(s.geometry.spatialReference=o.clone());return r.fromJSON(e)}export{j as synthesizeAssociationGeometries};
