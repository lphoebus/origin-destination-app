import{b8 as i,la as D,fz as J,kJ as K,dv as G,kI as Q,kK as X,kL as V,kM as Z,kN as tt,kO as et,kP as st,kQ as ot,a_ as it,lb as rt,lc as j}from"./index-Bkom2Sdc.js";import{r as at}from"./vec3f32-WCVSSNPR.js";import{i as nt}from"./WGLContainer-C7Fkis0r.js";import{o as pt}from"./FeatureCommandQueue-BwfXXGpL.js";import{e as q}from"./utils-DDjZAYSk.js";import{P as dt,C as A,w as lt,Y as ht,c as _,_ as ct,d as ut,v as ft,f as B,m as n,r as vt,U as mt,g as N,i as yt,j as W,I as wt,k as _t}from"./GraphShaderModule-DIYQfoJR.js";import{t as U}from"./VertexElementDescriptor-BLyltQyJ.js";class P extends yt{}i([B(0,_)],P.prototype,"pos",void 0),i([B(1,_)],P.prototype,"uv",void 0);class xt extends wt{}class E extends W{}i([n(vt)],E.prototype,"dvs",void 0);class m extends W{}i([n(_)],m.prototype,"perspective",void 0),i([n(_)],m.prototype,"texSize",void 0),i([n(A)],m.prototype,"wrapAroundShift",void 0),i([n(A)],m.prototype,"opacity",void 0),i([n(mt)],m.prototype,"texture",void 0);class w extends dt{constructor(){super(...arguments),this.type="OverlayShader"}vertex(e){const t=e.uv.divide(this.config.texSize),s=new A(1).add(lt(t,this.config.perspective)),o=new ht(e.pos.add(new _(this.config.wrapAroundShift,0)),1),r=this.transform.dvs.multiply(o);return{uv:t,glPosition:new ct(r.xy.multiply(s),0,s)}}fragment(e){const t=ut(this.config.texture,e.uv).multiply(this.config.opacity),s=new ft;return s.fragColor=t,s}}i([n(E)],w.prototype,"transform",void 0),i([n(m)],w.prototype,"config",void 0),i([D(0,N(P))],w.prototype,"vertex",null),i([D(0,N(xt))],w.prototype,"fragment",null);class gt extends _t{constructor(){super(...arguments),this.type=25,this._mesh=null,this.shaders={overlay:new w}}render(e,t){const{context:s,painter:o}=e,r=this._getMesh(e,t);o.setPipelineState(q);const{isWrapAround:p,wrapAroundShift:c}=t.config,u={...t.config,wrapAroundShift:0},f={shader:this.shaders.overlay,uniforms:{transform:t.transform,config:u},defines:null,optionalAttributes:null,useComputeBuffer:!1};o.setPipelineState({...q,stencil:{write:!1,test:{compare:514,op:{fail:7680,zFail:7680,zPass:7681},mask:255}}}),o.submitDrawMeshUntyped(s,f,r,{stencilRef:0}),p&&(u.wrapAroundShift=c,o.submitDrawMeshUntyped(s,f,r,{stencilRef:0}))}shutdown(){J(this._mesh)}_getMesh(e,t){const{context:s}=e;if(this._mesh){const o=this._mesh.vertexBuffers.get("positions");if(!o)throw new Error("Buffer not found");o.setData(t.position)}else{const o=t.index!=null?t.index.length:t.position.length/2;this._mesh=new pt(s,{vertex:{positions:{data:t.position,layout:[new U("pos",2,G.FLOAT,0,8)]},uvs:{data:t.tex,layout:[new U("uv",2,G.UNSIGNED_SHORT,0,4)]}},index:t.index!=null?{index:{data:t.index}}:void 0,groups:[{index:t.index!=null?"index":void 0,primitive:K.TRIANGLE_STRIP}],parts:[{group:0,start:0,count:o}]})}return this._mesh}}class At extends nt{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=Q(),this._overlayTechnique=new gt}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}doRender(e){if(e.drawPhase!==1||!this.visible)return;super.doRender(e);const t=this._overlayTechnique;for(const s of this.children)s.draw(e,t)}onDetach(){this._overlayTechnique.shutdown()}_updateMatrices(e){const{state:t}=e,{id:s,size:o,pixelRatio:r,resolution:p,rotation:c,viewpoint:u,displayMat3:f}=t;if(this._viewStateId===s)return;const x=j(c),d=r*o[0],v=r*o[1];this._localOrigin=u.targetGeometry.clone();const{x:y,y:S}=this._localOrigin,g=X(y,t.spatialReference);this._localOrigin.x=g,this._localOrigin.y=S;const $=p*d,R=p*v,a=V(this._dvsMat3);Z(a,a,f),tt(a,a,et(d/2,v/2)),st(a,a,at(d/$,-v/R,1)),ot(a,a,-x),this._viewStateId=s}_updateOverlays(e,t){const{state:s}=e,{rotation:o,spatialReference:r,worldScreenWidth:p,size:c,viewpoint:u}=s,f=this._localOrigin;let x,d=0;const v=it(r);if(v&&r.isWrappable){const y=c[0],S=c[1],g=j(o),$=Math.abs(Math.cos(g)),R=Math.abs(Math.sin(g)),a=Math.round(y*$+S*R),[I,z]=v.valid,l=rt(r),{x:T,y:L}=u.targetGeometry,F=[T,L],b=[0,0];s.toScreen(b,F);const M=[0,0];let O;O=a>p?.5*p:.5*a;const C=Math.floor((T+.5*l)/l),Y=I+C*l,H=z+C*l,k=[b[0]+O,0];s.toMap(M,k),M[0]>H&&(d=l),k[0]=b[0]-O,s.toMap(M,k),M[0]<Y&&(d=-l),x={worldWidth:l,xBounds:[I,z]}}for(const y of t)y.updateDrawCoords(f,d,s,x)}}export{At as f};
