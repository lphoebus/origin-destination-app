import{iH as S,lA as _,lB as v,lC as b,b8 as E,bb as z}from"./index-Bkom2Sdc.js";import{f as y,d as $}from"./dataUtils-D1x3Zy4l.js";function T(e,r,t){const{extent:a,valid:u}=e,[n,l,i,s]=a;return!(t<l||t>s)&&(u!=null&&n>i?r>=i||r<=n:r>=n&&r<=i)}function j(e,r,t,a){const{extent:u,modelSize:n,valid:l}=e,[i,s,c]=u,f=k(i,c,l);let o=r/n[0]*f+i;return l!=null&&a&&(o=new S(l[0],l[1]).normalize(o)),[o,(n[1]-t)/n[1]*_(u)+s]}function k(e,r,t){if(t!=null&&e>r){const[a,u]=t;return u-e+(r-a)}return r-e}function A(e){return e?4:3}function F(e,r,t){const[a,u]=t.modelSize;let n=null;const l=new Map;r.forEach(s=>{l.set(s.lij,y(e,s))});const i=(s,c,f)=>v(s.extent,c,f);return(s,c)=>{const f=Math.round(s),o=Math.round(c);if(!e.wrapAround&&(f<0||f>=a||o<0||o>=u))return[0,0];const[d,h]=j(t,s,c,!0);if(!T(t,d,h))return[0,0];if(n==null||!i(n,d,h)){n=null;for(const[I,x]of r)if(i(x,d,h)){n=x;break}}if(n?.data==null)return[0,0];const g=l.get(n.lij);if(g==null)return[0,0];const{width:M,height:w,extent:p}=n;return g((d-p[0])/b(p)*M,w-(h-p[1])/_(p)*w)}}let m=class{constructor(){this._tileData=new Map}async generateStreamlines(e){const{flowData:r,flowExtentInfo:t,needsMagnitude:a,simulationSettings:u,startPositions:n}=e,l=D(y(u,r),u,t.modelSize,a,n);return{result:{streamlines:l},transferList:l?.map(i=>i.vertices.buffer)}}async generateTiledStreamlines(e){const{flowDataTiles:r,flowExtentInfo:t,needsMagnitude:a,reset:u,simulationSettings:n,startPositions:l}=e;this._updateTileData(r,u);const i=D(F(n,this._tileData,t),n,t.modelSize,a,l);return{result:{streamlines:i},transferList:i?.map(s=>s.vertices.buffer)??[]}}_updateTileData(e,r){r&&this._tileData.forEach((t,a)=>{e.get(a)==null&&this._tileData.delete(a)}),e.forEach((t,a)=>{t.type==="delete"?this._tileData.delete(a):t.type!=="on-worker"&&t.type!=="waiting"&&this._tileData.set(a,t.data)})}};m=E([z("esri.views.3d.support.flow.FlowWorker")],m);const B=m;function D(e,r,t,a,u){if(e==null)return;const n=$(r,e,t[0],t[1],{positions:u}),l=[],i=A(a);for(const{vertices:s,stage:c}of n){const f=new Float32Array(s.length*i);for(let o=0;o<s.length;o++)f[o*i]=s[o].x,f[o*i+1]=s[o].y,f[o*i+2]=s[o].t,a&&(f[o*i+3]=s[o].speed);l.push({vertices:f,stage:c,hasMagnitude:a})}return l}export{B as default};
