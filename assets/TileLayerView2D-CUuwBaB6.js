import{fp as w,fq as y,fr as I,fs as T,ft as V,ff as g,c1 as H,fd as n,fu as f,fc as v,bf as C,b8 as c,ba as d,bb as b}from"./index-Bkom2Sdc.js";import"./Container-BUOpKgJS.js";import"./WGLContainer-C7Fkis0r.js";import"./ProgramTemplate-D6UgULFC.js";import"./BufferObject-CTARDp2h.js";import"./Utils-BPwjYj-m.js";import"./GridShader-Dxjd8l2W.js";import"./FramebufferObject-EJw5XZ2C.js";import"./FeatureCommandQueue-BwfXXGpL.js";import"./UpdateTracking2D-BAgVtftM.js";import"./TexturedLineMeshWriter-BOvFaw60.js";import"./renderState-CKc66y4x.js";import"./glsl-B5bJgrnA.js";import"./testSVGPremultipliedAlpha-CxsgdSKj.js";import{O as q}from"./GraphicsView2D-Cudol1Qm.js";import"./earcut-D9gy186-.js";import"./vec3f32-WCVSSNPR.js";import{r as U,o as p,n as _}from"./imageUtils-BO73wksg.js";import{b as P}from"./LayerView2D-30FU1rxw.js";import{o as Q}from"./HighlightGraphicContainer-DUpsSGBP.js";import{d as S}from"./LayerView-dsZyO1fP.js";import{i as G}from"./RefreshableLayerView-DU3KLifq.js";import{S as L,P as k,i as F}from"./MapServiceLayerViewHelper-CZMbwxZi.js";import{r as z}from"./drapedUtils-obiSr_G_.js";import{r as E}from"./highlightOptionsUtils-DdL2oWF3.js";import"./VertexArrayObject-BCHRBpsS.js";import"./VertexAttributeLocations-BfZbt_DV.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./VertexBuffer-CsbdF0n4.js";import"./config-BOD8--da.js";import"./featureConversionUtils-nye7QKUe.js";import"./GraphShaderModule-DIYQfoJR.js";import"./ShaderBuilder-DRCHXYJf.js";import"./utils-b1TOb6Y0.js";import"./constants-BBnGEY1d.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-DKcmUT2Y.js";import"./constants-BHYAGdRm.js";import"./QueueProcessor-DqRCcjoo.js";import"./TurboLine-BsqzQnyg.js";import"./AttributeStore-CS019e7y.js";import"./FeatureStoreQueryAdapter-xTIuWByO.js";import"./queryUtils-CyiURm7K.js";import"./timeSupport-CXh2VZCm.js";import"./FeatureMetadata-gkZZdSVQ.js";import"./normalizeUtilsSync-BY_tIBIr.js";import"./densifyCurvedGeometry-z0hd02Ge.js";import"./dehydratedFeatures-Bgz_yYu_.js";import"./BitmapTechnique-C9b_HJ2h.js";import"./bitmapUtils-BLxWNiSq.js";import"./TileContainer-D8e9urlk.js";import"./layerViewUtils-CKJQaxCu.js";import"./AGraphicContainer-qU2ctLWU.js";import"./TechniqueInstance-CTCRZ9BY.js";import"./popupUtils-C135Psdh.js";const W=[0,0];let l=class extends G(U(P(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),this._highlightView?.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,i?.effectiveMinLOD,i?.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,h)=>this.fetchTile(e,h),scheduler:this.scheduler,priority:T.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),L(this,this.layer)){const e=this._highlightView=new q({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new Q(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(h,s)=>z(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:h,property:s})=>e.graphicUpdateHandler({graphic:h,property:s}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=F(t);if(e.length===0)return g();const h=E(i);return this._addHighlightGraphics(e,h),g(()=>!this.destroyed&&this._removeHighlightGraphics(e,h))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return H(this.layer.tileInfo?.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(W,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:h=0}=i;try{return await this._fetchImage(t,e)}catch(s){if(n(s))throw s;if(!this.resampling)return p(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(t.id);if(r){const a=new f(r),o=await this._fetchTileWithoutTilemapCache(a,{...i,resamplingLevel:h+1});return _(this._tileInfoView,o,a,t)}}return p(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:h,resamplingLevel:s=0}=i,r=new f(0,0,0,0);let a,o=null;try{if(o=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,r,{signal:h}),!this.resampling&&r.level!==t.level)return await v(i),p(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(m){if(n(m))throw m;if(this.resampling&&o==="unknown"&&s<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){r.set(u);try{a=await this._fetchTileWithTilemapCache(r,{...i,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?_(this._tileInfoView,a,r,t):a:p(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){n(i)||C.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};c([d()],l.prototype,"resampling",null),c([d()],l.prototype,"tilemapCache",null),l=c([b("esri.views.2d.layers.TileLayerView2D")],l);const $t=l;export{$t as default};
