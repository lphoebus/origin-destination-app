import{b6 as d,dP as w,b8 as o,ba as r,aY as c,eD as m,bb as y}from"./index-Bkom2Sdc.js";var s;let t=s=class extends d{static from(e){return w(s,e)}constructor(e){super(e),this.circuits=null,this.exportAcknowledgement=!1,this.moment=null,this.outSpatialReference=null,this.domainNetworkName=null,this.gdbVersion=null,this.sessionId=null}writeOutSR(e,i,n){if(e!=null){const{wkid:p,latestWkid:a,wkt:l,wkt2:u}=e;i[n]=JSON.stringify({wkid:p??void 0,latestWkid:a??void 0,wkt:l??void 0,wkt2:u??void 0})}}};o([r({json:{type:[String],write:!0}})],t.prototype,"circuits",void 0),o([r({json:{type:Boolean,write:!0}})],t.prototype,"exportAcknowledgement",void 0),o([r({type:Date,json:{type:Number,write:{writer:(e,i)=>{i.moment=e?e.getTime():null}}}})],t.prototype,"moment",void 0),o([r({type:c,json:{write:{allowNull:!0,target:"outSR"}}})],t.prototype,"outSpatialReference",void 0),o([m("outSpatialReference")],t.prototype,"writeOutSR",null),o([r({type:String,json:{write:!0}})],t.prototype,"domainNetworkName",void 0),o([r({type:String,json:{write:!0}})],t.prototype,"gdbVersion",void 0),o([r({type:String,json:{write:!0}})],t.prototype,"sessionId",void 0),t=s=o([y("esri.rest.networks.circuits.support.ExportCircuitsParameters")],t);const v=t;export{v as default};
