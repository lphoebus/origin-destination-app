import{b_ as s,b4 as p,cb as i}from"./index-Bkom2Sdc.js";import{c as m}from"./MeshVertexAttributes-DGlW1oXQ.js";import{e as c}from"./meshProperties-DWLWd_LJ.js";import{q as a}from"./vertexSpaceConversion-DwXc1pTo.js";import"./spatialReferenceEllipsoidUtils-BXlmM8F6.js";import"./computeTranslationToOriginAndRotation-DEguJhlW.js";import"./projectPointToVector-DMoufHKJ.js";import"./meshVertexSpaceUtils-DtTu-9Nz.js";import"./MeshLocalVertexSpace-7X1tyxoy.js";import"./vec3-8vIy6u5T.js";import"./BufferView-w_yOhrVp.js";import"./vec4-Cm2F75SQ.js";async function E(r,t,e){await Promise.resolve(),s(e);const o=a(r,t,{useEllipsoid:e?.useEllipsoid});if(!o)throw new p("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");return r.clone(c(void 0,{vertexAttributes:new m({...o,uv:i(r.vertexAttributes.uv),color:i(r.vertexAttributes.color)}),vertexSpace:t,transform:null}))}export{E as convertMeshVertexSpace};
