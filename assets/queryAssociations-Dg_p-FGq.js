import{bv as l,bb as a,bc as y,bd as m,dI as f,dK as g,dJ as b,aR as v,ih as w,b5 as I,dD as J}from"./index-C2z3vZ9k.js";import{d as S}from"./Association-CVcsAb81.js";let o=class extends l{constructor(e){super(e),this.associations=[]}};a([y({type:[S],json:{write:!0}})],o.prototype,"associations",void 0),o=a([m("esri.rest.networks.support.QueryAssociationsResult")],o);function $(s){const{returnDeletes:e,elements:r,gdbVersion:n,moment:i}=s.toJSON();return{returnDeletes:e,elements:JSON.stringify(r.map((t=>({globalId:t.globalId,networkSourceId:t.networkSourceId,terminalId:t.terminalId})))),types:JSON.stringify(s.types.map((t=>J.toJSON(t)))).replaceAll('"connectivity"','"junctionJunctionConnectivity"'),gdbVersion:n,moment:i??Date.now()}}async function N(s,e,r){const n=f(s),i={...$(e),f:"json"},t=g({...n.query,...i}),c=b(t,{...r,method:"post"}),u=`${n.path}/associations/query`,{data:p}=await v(u,c),d=o.fromJSON(p);return e.types.includes("connectivity")&&w(I.getLogger("esri/rest/networks/support/QueryAssociationsParameters"),"types",{replacement:"Please use 'junction-junction-connectivity' instead of 'connectivity'.",see:"https://arcg.is/11Tr8a#types",version:"4.29",warnOnce:!0}),d}export{N as queryAssociations};
