import{b6 as C,b8 as a,ba as i,bb as k,ya as J,eG as K,eH as F,bH as I,b4 as H,bf as R,ia as L,ic as O,f9 as T,bz as D,fi as E}from"./index-Bkom2Sdc.js";import{o as G,t as N,h as P,p as j}from"./Dictionary-BUZ72ai8.js";import{t as Z}from"./commonProperties-DHiB1uzW.js";import{r as $}from"./arcadeEnvironment-DKHoEUW5.js";let g=class extends C{constructor(s){super(s),this.text=null,this.detectedLanguage="en",this.detectedLanguageScore=-1}};a([i({type:String,json:{write:!0}})],g.prototype,"key",void 0),a([i({type:String,json:{write:!0}})],g.prototype,"text",void 0),a([i({type:String,json:{read:{source:"detectedLanguage.language"},write:{target:"detectedLanguage.language"}}})],g.prototype,"detectedLanguage",void 0),a([i({type:Number,json:{read:{source:"detectedLanguage.score"},write:{target:"detectedLanguage.score"}}})],g.prototype,"detectedLanguageScore",void 0),a([i({type:Object,json:{write:!0}})],g.prototype,"translation",void 0),g=a([k("esri.rest.support.TranslateResult")],g);async function Q(o,s,r){const t=s.toJSON();t.contents=JSON.stringify(t.contents),t.token=await J(s.portalUrl,s.apiKey,{signal:r?.signal,prompt:r?.authMode!=="no-prompt"});const n=K(o),e=F(n.query,{...r,query:t,method:"post",authMode:"anonymous"});return(await I(n.path,e)).data.results.map(c=>g.fromJSON(c))}let S=class extends C{constructor(o){super(o)}};a([i({type:String,json:{write:!0}})],S.prototype,"key",void 0),a([i({type:String,json:{write:!0}})],S.prototype,"text",void 0),S=a([k("esri.rest.support.TranslateContent")],S);let p=class extends C{constructor(o){super(o),this.to=null,this.contents=null,this.portalUrl="https://www.arcgis.com",this.translator="esri",this.from=null,this.apiKey=null,this.requestSource=null}};a([i({type:[String],json:{write:!0}})],p.prototype,"to",void 0),a([i({type:[S],json:{write:!0}})],p.prototype,"contents",void 0),a([i({type:String,json:{write:!0}})],p.prototype,"portalUrl",void 0),a([i({type:String,json:{write:!0,default:"esri"}})],p.prototype,"translator",void 0),a([i({type:String,json:{write:!0}})],p.prototype,"from",void 0),a([i(Z)],p.prototype,"apiKey",void 0),a([i({type:String,json:{name:"x-esri-request-source"}})],p.prototype,"requestSource",void 0),p=a([k("esri.rest.support.TranslateParameters")],p);class z{constructor(s,r){this.portal=s,this._debugLog=r}async translate(s){this.portal.loaded||await this.portal.load();const r=this.portal.helperServices?.aiUtilityServices;if(r==null)return{success:!1};const t=r.url+r.translateUtility;try{return s.requestSource??="arcade",{success:!0,results:(await Q(t,s,{authMode:"no-prompt"})).map(n=>n.toJSON())}}catch(n){return this._debugLog!=null&&(n instanceof Error||n instanceof H)&&this._debugLog(`TranslateText error: ${n.message}`),R.getLogger("esri.arcade.functions.aiServices").error(n),{success:!1}}}}class V{constructor(s,r,t){this._parameters=s,this._maxTotalContentSize=r,this._maxContentsLength=t,this._requests=[],this._normalizedContents=new Map,this._contentsTotalSize=0}tryAdd(s){const r=new Set(s.filter(e=>!this._normalizedContents.has(e.text)).map(e=>e.text));if(this._requests.length+r.size>this._maxContentsLength)return null;let t=0;for(const e of r)t+=e.length;if((t+this._contentsTotalSize)*(this._parameters.to.length??1)>this._maxTotalContentSize)return null;const n=this._requests.length;for(const{key:e,text:c}of s)E(this._normalizedContents,c,()=>[]).push({batchIdx:n,key:e});return this._requests.push(s),this._contentsTotalSize+=t,n}async send(s){const r=[],t=[];let n=0;for(const[y,f]of this._normalizedContents)r.push(new S({key:String(n++),text:y})),t.push(f);const e=new p(this._parameters);e.contents=r;const c=await s.translate(e);if(!c.success)return Array.from(this._requests,()=>c);const x=Array.from(this._requests,()=>({success:!0,results:[]}));for(const y of c.results){const f=Number(y.key);for(const h of t[f])x[h.batchIdx].results.push({...y,key:h.key})}return x}}function b(o){const s=[...new Set(o.to)].sort(),r=o.from??null,t=o.portalUrl,n=o.translator,e=o.apiKey??null;return JSON.stringify([s,r,t,n,e])}async function U(o,s,r){try{return(await o.yieldFor(r))[s]}catch{return{success:!1}}}class M{constructor(s,r,{maxTotalContentSize:t=5e4,maxContentsLength:n=1e3}={}){this._executor=s,this._service=r,this._openBatches=new Map,this._maxTotalContentSize=t,this._maxContentsLength=n}create(s){return{translate:async r=>{const t=b(r),{contents:n,to:e,from:c,translator:x,portalUrl:y,apiKey:f}=r;if(e==null)return{success:!1};if(n==null||n.every(u=>u.text.length===0))return{success:!1};const h=this._openBatches.get(t);if(h!=null){const u=h.data.tryAdd(n);if(u!=null)return await U(s,u,h);h.send()}const d=new V({to:e,from:c,translator:x,portalUrl:y,apiKey:f},this._maxTotalContentSize,this._maxContentsLength),v=d.tryAdd(n);if(v!=null){const u=this._executor.openBatch(d,{open:w=>{this._openBatches.set(t,w)},execute:w=>w.send(this._service),close:w=>{this._openBatches.get(t)===w&&this._openBatches.delete(t)}});return await U(s,v,u)}return await this._service.translate(r)}}}}function A(o){o.mode==="async"&&(o.functions[$("TranslateText")]=function(s,r){return o.standardFunctionAsync(s,r,async(t,n,e)=>{if(G(e,2,3,t,n),!L(e[0])&&!O(e[0])&&!N(e[0]))throw new T(t,"InvalidParameter",n);const c=P(e[0]);if(!L(e[1])&&!O(e[1])&&!N(e[1]))throw new T(t,"InvalidParameter",n);const x=P(e[1]);let y=null;if(e.length>=3){if(!L(e[2]))throw new T(t,"InvalidParameter",n);y=e[2]}const f=c.map((m,l)=>new S({key:String(l),text:m})),h=t.services?.portal??D.getDefault(),d=new p({to:x,contents:f,from:y,portalUrl:h.restUrl.replace(/\/sharing\/rest$/,"")}),v=new Map;let u=null;if(t.lrucache!=null){const m=t.lrucache;u??=b(d),d.contents=d.contents?.filter(l=>{const _=m.getCachedTranslation(u,l.text);return _==null||(v.set(l.key,{..._,key:l.key,text:l.text}),!1)})}if(d.contents?.length){const m=t.services?.translation??new z(h,t.console),l=await m.translate(d);if(!l.success)return new j({__proto__:null,success:!1});for(const _ of l.results){const q=d.contents?.find(B=>B.key===_.key)?.text;if(q==null)throw new T(null,"NeverReach",null);v.set(_.key,_),t.lrucache!=null&&(u??=b(d),t.lrucache.setCachedTranslation(u,q,{detectedLanguage:_.detectedLanguage,translation:_.translation}))}}const w=Array.from(f,m=>{const l=g.fromJSON(v.get(m.key));if(l==null)throw new T(null,"NeverReach",null);return l.text=m.text,j.convertJsonToArcade(l.toJSON(),t.timeZone??"system",!0)});return new j({__proto__:null,success:!0,results:w})})})}const st=Object.freeze(Object.defineProperty({__proto__:null,BatchTranslationServiceFactory:M,PortalTranslationService:z,getTranslateParametersKey:b,registerFunctions:A},Symbol.toStringTag,{value:"Module"})),rt=Object.freeze(Object.defineProperty({__proto__:null,BatchTranslationServiceFactory:M,PortalTranslationService:z,getTranslateParametersKey:b,registerFunctions:A},Symbol.toStringTag,{value:"Module"}));export{st as T,rt as a};
