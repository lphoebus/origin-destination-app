import{hr as c,hs as m,ht as v,hu as S,hv as w,hw as x,hx as b,bN as o,aY as d,bF as g,b4 as n,bU as p,bH as E,bf as h,hy as R,b8 as s,ba as a,hz as T,hA as L,bb as $}from"./index-Bkom2Sdc.js";import{R as C,E as u}from"./tiles3DUtils-CUX54LqS.js";import{j as y,w as N,R as O}from"./elevationInfoUtils-9Dliwvku.js";let t=class extends c(m(v(S(w(x(b(R))))))){constructor(e){super(e),this.operationalLayerType="GaussianSplatLayer",this.type="gaussian-splat",this.opacity=1,this.minScale=0,this.maxScale=0,this.url=null,this.rootTilesetJSON=null,this.fullExtent=new o(-180,-90,180,90,this.spatialReference),this.spatialReference=new d({wkid:4326,vcsWkid:115700}),this.esriCrsSpatialReference=null,this.esriCrsFullExtent=null}get supportedSpatialReferences(){return this.initialized&&this.esriCrsSpatialReference?[this.spatialReference,this.esriCrsSpatialReference]:[this.spatialReference]}get fullExtents(){return this.initialized&&this.esriCrsFullExtent?[this.fullExtent,this.esriCrsFullExtent]:[this.fullExtent]}set elevationInfo(e){e!=null&&e.mode!=="absolute-height"||this._set("elevationInfo",e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const i=e!=null?e.signal:null;if(!g("enable-feature:gaussianSplatLayer"))throw new n("GaussianSplatLayer-init:not-supported","This layer is currently not supported.");try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:r=>{if(r.typeKeywords?.includes("GaussianSplat"))return!0;throw new n("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service"})}},e)}catch(r){p(r)}this.url&&await E(this.url,{query:{...this.customParameters,token:this.apiKey},responseType:"json",signal:i}).then(l=>{this.rootTilesetJSON=l.data;const f=C(this.rootTilesetJSON);this.fullExtent=u(this.rootTilesetJSON,!1),this.spatialReference=this.fullExtent.spatialReference,f&&(this.esriCrsFullExtent=u(this.rootTilesetJSON,!0),this.esriCrsSpatialReference=this.esriCrsFullExtent.spatialReference)},l=>{p(l)})}_validateElevationInfo(e){const i="Gaussian Splat layers";y(h.getLogger(this),N(i,"absolute-height",e)),y(h.getLogger(this),O(i,e))}};s([a({type:["GaussianSplatLayer"]})],t.prototype,"operationalLayerType",void 0),s([a({readOnly:!0})],t.prototype,"type",void 0),s([a({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],t.prototype,"opacity",void 0),s([a({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],t.prototype,"minScale",void 0),s([a({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],t.prototype,"maxScale",void 0),s([a(T)],t.prototype,"url",void 0),s([a({type:o})],t.prototype,"fullExtent",void 0),s([a({type:d})],t.prototype,"spatialReference",void 0),s([a({readOnly:!0})],t.prototype,"supportedSpatialReferences",null),s([a({type:[o]})],t.prototype,"fullExtents",null),s([a({type:["show","hide"]})],t.prototype,"listMode",void 0),s([a(L)],t.prototype,"elevationInfo",null),t=s([$("esri.layers.GaussianSplatLayer")],t);const _=t;export{_ as default};
