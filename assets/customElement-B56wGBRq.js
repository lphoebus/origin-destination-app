import{L as D,e as $,u as L,a as N,s as f,n as V,j as A,x as k,i as K,b as z}from"./index-Bkom2Sdc.js";import{f as y,n as c,b as h,i as p,u as I,v as d,w as P,o as w,r as S,O as H,x as U}from"./utils-DvU6mgOR.js";/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.3.3 */const v={container:"container",hexInput:"hex-input",opacityInput:"opacity-input"},G=K`:host{--calcite-internal-color-focus: var( --calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)) )}.hex-input{--calcite-input-text-background-color: var(--calcite-color-picker-input-background-color);--calcite-input-text-border-color: var(--calcite-color-picker-input-border-color);--calcite-input-text-text-color: var(--calcite-color-picker-input-text-color);--calcite-input-prefix-background-color: var(--calcite-color-picker-input-prefix-background-color);--calcite-input-prefix-text-color: var(--calcite-color-picker-input-prefix-text-color)}.opacity-input{--calcite-input-number-background-color: var(--calcite-color-picker-input-background-color);--calcite-input-number-border-color: var(--calcite-color-picker-input-border-color);--calcite-input-number-text-color: var(--calcite-color-picker-input-text-color);--calcite-input-suffix-background-color: var(--calcite-color-picker-input-suffix-background-color);--calcite-input-suffix-text-color: var(--calcite-color-picker-input-suffix-text-color)}:host{display:block}.container{display:flex;inline-size:100%;flex-wrap:nowrap;align-items:center}.hex-input{flex-grow:1;text-transform:uppercase}.opacity-input{inline-size:100px;margin-inline-start:-1px}:host([hidden]){display:none}[hidden]{display:none}`,C=y(),x=class x extends D{constructor(){super(...arguments),this.hexInputRef=$(),this.opacityInputRef=$(),this.focusSetter=L()(this),this.internalColor=C,this.alphaChannel=!1,this.allowEmpty=!1,this.hexLabel="Hex",this.scale="m",this.value=c(h(C,this.alphaChannel),this.alphaChannel,!0),this.calciteColorPickerHexInputChange=N({cancelable:!1})}async setFocus(t){return this.focusSetter(()=>this.hexInputRef.value,t)}connectedCallback(){super.connectedCallback(),this.previousNonNullValue=this.value;const{allowEmpty:t,alphaChannel:e,value:a}=this;if(a){const n=c(a,e);p(n,e)&&this.internalSetValue(n,n,!1);return}t&&this.internalSetValue(void 0,void 0,!1)}willUpdate(t){t.has("value")&&(this.hasUpdated||this.value!==c(h(C,this.alphaChannel),this.alphaChannel,!0))&&this.internalSetValue(this.value,t.get("value"),!1)}onHexInputBlur(){const t=this.hexInputRef.value,e=t.value,a=`#${e}`,{allowEmpty:n,internalColor:l}=this,o=n&&!e,i=I(a);(d(a,!0)||d(a,!1))&&this.onHexInputChange(),!(o||p(a)&&i)&&(t.value=n&&!l?"":this.formatHexForInternalInput(P(l.object())))}onOpacityInputBlur(){const t=this.opacityInputRef.value,e=t.value,{allowEmpty:a,internalColor:n}=this;a&&!e||(t.value=a&&!n?"":this.formatOpacityForInternalInput(n))}onOpacityInputInput(){this.onOpacityInputChange()}onHexInputChange(){let e=this.hexInputRef.value.value;if(e){const a=c(e,!1);if(p(a)&&this.alphaChannel&&this.internalColor){const l=c(this.internalColor.hexa(),!0).slice(-2);e=`${a+l}`}}this.internalSetValue(e,this.value)}onOpacityInputChange(){const t=this.opacityInputRef.value;let e;if(!t.value)e=t.value;else{const a=w(Number(t.value));e=this.internalColor?.alpha(a).hexa()}this.internalSetValue(e,this.value)}onInputFocus(t){(t.type==="calciteInternalInputTextFocus"?this.hexInputRef:this.opacityInputRef).value.selectText()}onHexInputInput(){const t=`#${this.hexInputRef.value.value}`,e=this.value;p(t,this.alphaChannel)&&I(t,this.alphaChannel)&&this.internalSetValue(t,e)}onInputKeyDown(t){const{altKey:e,ctrlKey:a,metaKey:n,shiftKey:l}=t,{alphaChannel:o,hexInputRef:i,internalColor:s,value:u}=this,{key:r}=t,g=t.composedPath();if(r==="Tab"&&d(u,this.alphaChannel)||r==="Enter"){g.includes(i.value)?this.onHexInputChange():this.onOpacityInputChange(),r==="Enter"&&t.preventDefault();return}const R=r==="ArrowDown"||r==="ArrowUp",b=this.value;if(R){if(!u){this.internalSetValue(this.previousNonNullValue,b),t.preventDefault();return}const E=r==="ArrowUp"?1:-1,B=l?10:1;this.internalSetValue(h(this.nudgeRGBChannels(s,B*E,g.includes(i.value)?"rgb":"a"),o),b),t.preventDefault();return}const F=e||a||n,O=r.length===1,T=U.test(r);O&&!F&&!T&&t.preventDefault()}onHexInputPaste(t){const e=t.clipboardData.getData("text");p(e,this.alphaChannel)&&I(e,this.alphaChannel)&&(t.preventDefault(),this.hexInputRef.value.value=e.slice(1),this.internalSetValue(e,this.value))}internalSetValue(t,e,a=!0){if(t){const{alphaChannel:n}=this,l=c(t,n,n);if(p(l,n)){const{internalColor:o}=this,i=y(l),s=c(h(i,n),n),u=!o||s!==c(h(o,n),n);this.internalColor=i,this.previousNonNullValue=s,this.value=s,u&&a&&this.calciteColorPickerHexInputChange.emit();return}}else if(this.allowEmpty){this.internalColor=void 0,this.value=void 0,a&&this.calciteColorPickerHexInputChange.emit();return}this.value=e}formatHexForInternalInput(t){return t?t.replace("#","").slice(0,6):""}formatOpacityForInternalInput(t){return t?`${S(t.alpha())}`:""}nudgeRGBChannels(t,e,a){let n;const l=t.array(),o=l.slice(0,3);if(a==="rgb")n=[...o.map(s=>s+e),this.alphaChannel?l[3]:void 0];else{const i=w(S(t.alpha())+e);n=[...o,i]}return y(n)}render(){const{alphaChannel:t,hexLabel:e,internalColor:a,messages:n,scale:l,value:o}=this,i=this.formatHexForInternalInput(o),s=this.formatOpacityForInternalInput(a),u=l==="l"?"m":"s";return k`<div class=${f(v.container)}><calcite-input-text class=${f(v.hexInput)} .label=${n?.hex||e} .maxLength=${this.alphaChannel?8:6} @keydown=${this.onInputKeyDown} @paste=${this.onHexInputPaste} @calciteInputTextChange=${this.onHexInputChange} @calciteInputTextInput=${this.onHexInputInput} @calciteInternalInputTextBlur=${this.onHexInputBlur} @calciteInternalInputTextFocus=${this.onInputFocus} prefix-text=# .scale=${u} .value=${i} ${V(this.hexInputRef)}></calcite-input-text>${t?A("opacity-input",k`<calcite-input-number class=${f(v.opacityInput)} .label=${n?.opacity} .max=${H.max} max-length=3 .min=${H.min} number-button-type=none .numberingSystem=${this.numberingSystem} @keydown=${this.onInputKeyDown} @calciteInputNumberInput=${this.onOpacityInputInput} @calciteInternalInputNumberBlur=${this.onOpacityInputBlur} @calciteInternalInputNumberFocus=${this.onInputFocus} .scale=${u} suffix-text=% .value=${s} ${V(this.opacityInputRef)}></calcite-input-number>`):null}</div>`}};x.properties={internalColor:[16,{},{state:!0}],alphaChannel:[5,{},{type:Boolean}],allowEmpty:[5,{},{type:Boolean}],hexLabel:1,messages:[0,{},{attribute:!1}],numberingSystem:1,scale:[3,{},{reflect:!0}],value:[3,{},{reflect:!0}]},x.styles=G;let m=x;z("calcite-color-picker-hex-input",m);export{m as ColorPickerHexInput};
