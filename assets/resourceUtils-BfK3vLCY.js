import{bF as g}from"./index-Bkom2Sdc.js";class u{constructor(n){this.data=n,this.type="encoded-mesh-texture",this.encoding="image/ktx2"}}function p(t){return t?.type==="encoded-mesh-texture"}async function h(t){const n=new Blob([t]),o=await n.text();return JSON.parse(o)}async function l(t,n){if(n==="image/ktx2")return new u(t);const o=new Blob([t],{type:n});let r=URL.createObjectURL(o);switch(n){case"image/jpeg":r+="#.jpg";break;case"image/png":r+="#.png"}const e=new Image;if(g("esri-iPhone"))return new Promise((s,d)=>{const c=()=>{i(),s(e)},a=m=>{i(),d(m)},i=()=>{URL.revokeObjectURL(r),e.removeEventListener("load",c),e.removeEventListener("error",a)};e.addEventListener("load",c),e.addEventListener("error",a),e.src=r});try{e.src=r,await e.decode()}catch{console.warn("Failed decoding HTMLImageElement")}return URL.revokeObjectURL(r),e}export{u as e,h as n,l as r,p as t};
