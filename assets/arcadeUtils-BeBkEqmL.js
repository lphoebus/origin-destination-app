import{M as I,m as P,U as $,Q as E,n as D,q as V,r as k,u as C,v as y,w as M,A as L,B as Z}from"./arcade-BVm-0a_y.js";import{F as at}from"./arcade-BVm-0a_y.js";import{kU as z,kV as O,f9 as o,kW as v,fi as R,ip as _,bf as J,f7 as l,cb as N,ic as G,ia as U,i8 as q,gZ as B,a$ as Q,dR as W,dQ as j,gg as H,bN as X,f6 as K,f5 as Y}from"./index-Bkom2Sdc.js";import{r as c}from"./arcadeEnvironment-DKHoEUW5.js";import{V as ee,E as b,p as m,t as te,f as ne,H as re,B as ae,X as se}from"./Dictionary-BUZ72ai8.js";import{D as ie,w as oe,I as d}from"./Feature-BzAH4SBM.js";import{t as F}from"./ImmutableArray-BPVd6ESQ.js";import{a as le}from"./rasterFieldUtils-BBSwpsuA.js";import"./aiServices-Doncf71H.js";import"./commonProperties-DHiB1uzW.js";import"./WhereClause-GpJYBgPS.js";import"./unitConversion-BdeH7akM.js";import"./number-BIeHABHj.js";import"./featureConversionUtils-nye7QKUe.js";const ue=()=>J.getLogger("esri.arcade.Pixel");function x(e){return e.rasterFields.filter(n=>n.name.startsWith(le))}class T{constructor(n,t,r){this._graphic=t,this._timeZone=r,this.arcadeDeclaredClass="esri.arcade.Pixel",this._values=new Map,this._fields=new Map(n.map(i=>[c(i.name),i]))}static fromImageryGraphic(n,t){if(!z(n.origin)&&!O(n.origin))throw new o(null,"InvalidParameter",null);return new T(x(n.origin.layer),n,t)}static getDeclaredMembers(n){return x(n).map(t=>v(t.name)&&t.type==="string"?{name:t.name,type:"array",elementType:{type:"text"}}:ie(t)).filter(t=>t!=null)}keys(){return Array.from(this._fields.values()).map(n=>n.name).sort()}hasField(n){return this._fields.has(c(n))}field(n){const t=this._fields.get(c(n));if(t==null)throw new o(null,"FieldNotFound",null,{key:n});return R(this._values,t.name,()=>{const r=this._graphic.getAttribute(t.name);return r==null?null:v(t.name)&&typeof r=="string"?new F(r.split(/,\s*|\s+/)):_(r)||ee(r)?oe(r,t.type,this._timeZone??"system"):(ue().warn(`Unsupported type for attribute: ${t.name}. Ignoring value.`),null)})}isEmpty(){return this._fields.size<=0}castToText(n=!1){const t={};for(const r of this._fields.values())t[r.name]=this.field(r.name);return b(t,{useNumbersForDates:n})}}const p="Voxel.Position",u="Voxel.LocalTime";function ce(e){const n=e.getAttribute(p);if(typeof n!="string")throw new o(null,"InvalidParameter",null);const t=JSON.parse(n);if(!Array.isArray(t)||typeof t[0]!="number"||typeof t[1]!="number"||typeof t[2]!="number")throw new o(null,"InvalidParameter",null);return new F(t)}function fe(e,n){const t=e.getAttribute(u);if(t==null)return null;if(!_(t))throw new o(null,"InvalidParameter",null);return l.dateJSAndZoneToArcadeDate(t,n)}class ke{constructor(n,t){this._graphic=n,this._timeZone=t,this.arcadeDeclaredClass="esri.arcade.Voxel",this._layer=n.sourceLayer}static getDeclaredMembers(n){return n.fields.map(t=>{switch(t.name){case p:return{name:t.name,type:"array",elementType:{type:"number"}};case u:return{name:t.name,type:"date"};default:switch(t.type){case"string":return{name:t.name,type:"text"};case"double":return{name:t.name,type:"number"}}return null}}).filter(t=>t!=null)}getPosition(){return this._position!==void 0?this._position:this._position=ce(this._graphic)}getLocalTime(){return this._localTime!==void 0?this._localTime:this._localTime=fe(this._graphic,this._timeZone??"system")}keys(){return this._layer.fields.map(n=>n.name).sort()}hasField(n){return this._layer.fieldsIndex.has(n)}field(n){const t=this._layer.fieldsIndex?.get(n)?.name;if(t==null)throw new o(null,"FieldNotFound",null,{key:n});switch(t){case p:return this.getPosition();case u:return this.getLocalTime()}return this._graphic.attributes[t]??null}isEmpty(){return this._layer.fields.length<=0}castToText(n=!1){const t={...this._graphic.attributes};t[p]=this.getPosition(),u in t&&(t[u]=this.getLocalTime());for(const r of Object.keys(t))this._layer.fieldsIndex?.has(r)||delete t[r];return b(t,{useNumbersForDates:n})}}const pe={vars:{$feature:"any",$view:"any"}};function me(e){return e.replaceAll(/[|\\{}()[\]^$+*?.]/g,"\\$&")}function Ce(e){return e==null?null:G(e)||te(e)?"array":ne(e)?"date":U(e)?"text":q(e)?"boolean":B(e)?"number":e instanceof m?"dictionary":re(e)?"feature":e instanceof Q?"point":e instanceof W?"polygon":e instanceof j?"polyline":e instanceof H?"multipoint":e instanceof X?"extent":e instanceof K?"dateOnly":e instanceof Y?"time":ae(e)?"featureSet":se(e)?"featureSetCollection":null}function f(e){if(!e)return null;try{return P(e)}catch{}return null}function Me(e,n){const t=typeof e=="string"?f(e):e;if(!t)return null;try{return n=n||N(pe),I(t,n)}catch{}return null}function Le(e,n,t){return{vars:{$feature:e==null?new d:d.createFromGraphic(e,t),$view:n?.view},spatialReference:n?.sr,timeZone:t??null}}function Ze(e,n,t){return d.createFromGraphicLikeObject(n,e,t,null)}function ze(e,n){e.vars!=null&&(e.vars.$feature=n)}function Oe(e,n){let t;try{t=V(e,n)}catch{t=null}return t}function Re(e,n){let t;try{t=e?e(n):null}catch{t=null}return t}function Je(e,n){try{return e?e(n):Promise.resolve(null)}catch{return Promise.resolve(null)}}const de=["$feature","$aggregatedFeatures","$voxel"].map(e=>c(e));function Ne(e,n){if(!e)return[];const t=typeof e=="string"?f(e):e;if(!t)return[];const r=new Map;if(Array.isArray(n)||n==null)for(const a of de)r.set(a,n);else for(const[a,s]of n)r.set(c(a),s);const i=k(t).flatMap(({varId:a,memberNamePattern:s})=>{if(!r.has(a))return[];if(s.includes("*")){const g=r.get(a);if(g==null)return[];const S=new RegExp(`^${s.split(/\*+/).map(me).join(".*")}$`,"i");return g.filter(A=>S.test(A))}return s.toLowerCase()});return[...new Set(i.sort())]}function Ge(e){return $(e,"$view")}function Ue(e,n){return!!e&&$(e,n)}function qe(e){if(!e||e.spatialReference==null&&(e.scale==null||e.viewingMode==null))return;let n,t;const{timeProperties:r,timeZone:i}=e;if(r!=null){const{currentStart:a,currentEnd:s}=r;i!=null?(n=a!=null?l.dateJSAndZoneToArcadeDate(a,i):null,t=s!=null?l.dateJSAndZoneToArcadeDate(s,i):null):(n=a!=null?l.dateJSToArcadeDate(a):null,t=s!=null?l.dateJSToArcadeDate(s):null)}return{view:e.viewingMode&&e.scale!=null?new m({__proto__:null,viewingMode:e.viewingMode,scale:e.scale,timeProperties:n!=null||t!=null?new m({__proto__:null,currentStart:n,currentEnd:t,startIncluded:!0,endIncluded:!0}):null}):null,sr:e.spatialReference}}function Be({url:e,spatialReference:n,lrucache:t,interceptor:r}){const i=y();return i?i.createFeatureSetCollectionFromService(e,n,t,r):null}function Qe({layer:e,spatialReference:n,outFields:t,returnGeometry:r,lrucache:i,interceptor:a}){if(e===null)return null;const s=y();return s?s.constructFeatureSet(e,n,t,r??!0,i,a):null}function We(e){if(e?.map===null)return null;const n=y();return n?n.createFeatureSetCollectionFromMap(e.map,e.spatialReference,e.lrucache,e.interceptor):null}function je(e,n){return m.convertJsonToArcade(e,n)}function He(e,n,t=[]){return C(e,n,t)}function Xe(){return D()}function Ke(){return E()}function ye(e){return"type"in e&&(e.type==="class-breaks"||e.type==="dictionary"||e.type==="dot-density"||e.type==="pie-chart"||e.type==="simple"||e.type==="unique-value")}function he(e){return e.declaredClass==="esri.layers.support.LabelClass"}function ge(e){return e.declaredClass==="esri.PopupTemplate"}function h(e,n){if(!e)return!1;if(typeof e=="string")return n(e);const t=e;if(ye(t)){if(t.type==="dot-density"){const a=t.attributes?.some(s=>n(s.valueExpression));if(a)return a}const r=t.visualVariables,i=!!r&&r.some(a=>{let s=n(a.valueExpression);return a.type==="size"&&(w(a.minSize)&&(s=s||n(a.minSize.valueExpression)),w(a.maxSize)&&(s=s||n(a.maxSize.valueExpression))),s});return!(!("valueExpression"in t)||!n(t.valueExpression))||i}if(he(t)){const r=t.labelExpressionInfo?.expression;return!(!r||!n(r))||!1}return!!ge(t)&&(!!t.expressionInfos&&t.expressionInfos.some(r=>n(r.expression))||Array.isArray(t.content)&&t.content.some(r=>r.type==="expression"&&n(r.expressionInfo?.expression)))}function ve(e){const n=f(e);return!!n&&L(n)}function Ye(e){return h(e,ve)}function xe(e){const n=f(e);return!!n&&Z(n)}function et(e){return h(e,xe)}function tt(e){return h(e,n=>{const t=f(n);return!!t&&M(t)})}function w(e){return e&&e.declaredClass==="esri.renderers.visualVariables.SizeVariable"}export{m as Dictionary,T as Pixel,ke as Voxel,at as arcade,d as arcadeFeature,Qe as convertFeatureLayerToFeatureSet,je as convertJsonToArcade,We as convertMapToFeatureSetCollection,Be as convertServiceUrlToWorkspace,Le as createExecContext,Ze as createFeature,Me as createFunction,f as createSyntaxTree,Ge as dependsOnView,Ke as enableFeatureSetOperations,Xe as enableGeometryOperations,Oe as evalSyntaxTree,Je as executeAsyncFunction,Re as executeFunction,Ne as extractFieldNames,Ce as getArcadeType,qe as getViewInfo,Ye as hasGeometryFunctions,et as hasGeometryOperations,Ue as hasVariable,He as loadScriptDependencies,tt as requiresTrack,ze as updateExecContext};
