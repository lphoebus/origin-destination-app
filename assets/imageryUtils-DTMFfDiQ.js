import{P as n,$ as c}from"./utils-C7umzGDt.js";import{t as p}from"./rasterFieldUtils-8FBWYX_U.js";import{ax as u,aD as g,aC as s,aA as v}from"./index-C2z3vZ9k.js";import"./originUtils-av9iyGZ9.js";import"./saveUtils-CiwNsJLd.js";const y="Image Service",f="imagery-layer-save",d="imagery-layer-save-as",T="imagery-tile-layer-save",I="imagery-tile-layer-save-as",l="WCS",w="wcs-layer-save",x="wcs-layer-save-as";function m(e){if(e.type==="imagery"||e.type==="wcs")return{isValid:!0};const{raster:a}=e,r=p(a)[0];return{isValid:(r==null?void 0:r.datasetFormat)==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function o(e){const a=e.layerJSON;return Promise.resolve(a&&Object.keys(a).length?a:null)}async function A(e,a){const{parsedUrl:r,title:t,fullExtent:i}=e;a.url=r.path,a.title||(a.title=t);try{a.extent=await u(i)}catch{a.extent=void 0}g(a,s.METADATA),v(a,s.TILED_IMAGERY,e.type==="imagery-tile")}async function M(e,a){const r=e.type==="imagery"?f:e.type==="imagery-tile"?T:w,t=e.type==="wcs"?l:y;return n({layer:e,itemType:t,validateLayer:m,createItemData:o,errorNamePrefix:r},a)}async function S(e,a,r){const t=e.type==="imagery"?d:e.type==="imagery-tile"?I:x,i=e.type==="wcs"?l:y;return c({layer:e,itemType:i,validateLayer:m,createItemData:o,errorNamePrefix:t,newItem:a,setItemProperties:A},r)}export{M as save,S as saveAs};
