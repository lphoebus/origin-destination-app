import{dA as n,dB as a,dC as u,bf as _,dt as f,dD as c}from"./index-Bkom2Sdc.js";import{r as l}from"./VertexAttributeLocations-BfZbt_DV.js";const i=()=>_.getLogger("esri.views.webgl.VertexArrayObject");let b=class h{constructor(e,t,r,s){this._context=e,this._indexBuffer=r,this._buffers=t instanceof Map?t:new Map([["geometry",t]]),this._baseInstances=s==null?new Map:typeof s=="number"?new Map([["geometry",s]]):s,this.locations=n(l(this._buffers))}get glName(){return this._glName}get context(){return this._context}get buffers(){return n(this._buffers)}buffer(e="geometry"){return this.buffers.get(e)}get indexBuffer(){return this._indexBuffer}getByteLength(e){return this.buffer(e)?.sizeBytes??0}vertexCount(e){const t=this.buffer(e);return t?t.sizeBytes/t.layout[0].stride:0}get usedMemory(){return Array.from(this._buffers.values()).reduce((e,t)=>e+t.usedMemory,this._indexBuffer?.usedMemory??0+(this._buffers.size+(this._indexBuffer?1:0))*a)}dispose(){this._context?(this._buffers.forEach(e=>e.dispose()),this._buffers.clear(),this._indexBuffer=u(this._indexBuffer),this.disposeVAOOnly()):(this._glName||this._buffers.size>0)&&i().warn("Leaked WebGL VAO")}disposeVAOOnly(){this._context?(this._context.getBoundVAO()===this&&this._context.bindVAO(null),this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(f.VertexArrayObject,this)),this._context=null):this._glName&&i().warn("Leaked WebGL VAO")}bind(e=this.locations){const t=this._context.gl;this._glName?t.bindVertexArray(this._glName):(this._context.instanceCounter.increment(f.VertexArrayObject,this),this._glName=t.createVertexArray(),t.bindVertexArray(this._glName),this._bindLayout(e))}_bindLayout(e){const{_buffers:t,_indexBuffer:r}=this;if(t||i().error("Vertex buffer dictionary is empty!"),t.forEach((s,o)=>c(this._context,e,s,this._baseInstances.get(o)??0)),r!=null){const s=this._context.gl;this._context.gl.bindBuffer(s.ELEMENT_ARRAY_BUFFER,r.glName)}}unbind(){this._context.gl.bindVertexArray(null)}shallowCloneWithBaseInstances(e){return new h(this._context,this._buffers,this._indexBuffer,e)}};export{b as h};
