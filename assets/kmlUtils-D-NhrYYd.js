import{fS as I,dm as P,bQ as w,bH as k,cb as p,f2 as h,fT as S,fU as m,fV as d,aY as v,fW as x,f8 as E,fX as M,fY as O}from"./index-Bkom2Sdc.js";const F={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function H(s){const o=s.folders||[],r=o.slice(),t=new Map,n=new Map,u=new Map,y=new Map,c=new Map,f={esriGeometryPoint:n,esriGeometryPolyline:u,esriGeometryPolygon:y};(s.featureCollection?.layers||[]).forEach(e=>{const l=p(e);l.featureSet.features=[];const a=e.featureSet.geometryType;t.set(a,l);const g=e.layerDefinition.objectIdField;a==="esriGeometryPoint"?b(n,g,e.featureSet.features):a==="esriGeometryPolyline"?b(u,g,e.featureSet.features):a==="esriGeometryPolygon"&&b(y,g,e.featureSet.features)}),s.groundOverlays&&s.groundOverlays.forEach(e=>{c.set(e.id,e)}),o.forEach(e=>{e.networkLinkIds.forEach(l=>{const a=L(l,e.id,s.networkLinks);a&&r.push(a)})}),r.forEach(e=>{if(e.featureInfos){e.points=p(t.get("esriGeometryPoint")),e.polylines=p(t.get("esriGeometryPolyline")),e.polygons=p(t.get("esriGeometryPolygon")),e.mapImages=[];for(const l of e.featureInfos)switch(l.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const a=f[l.type].get(l.id);a&&e[F[l.type]]?.featureSet.features.push(a);break}case"GroundOverlay":{const a=c.get(l.id);a&&e.mapImages.push(a);break}}e.fullExtent=G([e])}});const i=G(r);return{folders:o,sublayers:r,extent:i}}function J(s,o,r,t){const n=P?.findCredential(s);s=I(s,{token:n?.token});const u=w.kmlServiceUrl;return k(u,{query:{url:s,model:"simple",folders:"",refresh:r!==0||void 0,outSR:JSON.stringify(o)},responseType:"json",signal:t})}function N(s,o,r=null,t=[]){const n=[],u={},y=o.sublayers,c=new Set(o.folders.map(f=>f.id));return y.forEach(f=>{const i=new s;if(r?i.read(f,r):i.read(f),t.length&&c.has(i.id)&&(i.visible=t.includes(i.id)),u[f.id]=i,f.parentFolderId!=null&&f.parentFolderId!==-1){const e=u[f.parentFolderId];e.sublayers||(e.sublayers=[]),e.sublayers?.unshift(i)}else n.unshift(i)}),n}function b(s,o,r){r.forEach(t=>{s.set(t.attributes[o],t)})}function $(s,o){let r;return o.some(t=>t.id===s&&(r=t,!0)),r}function L(s,o,r){const t=$(s,r);return t&&(t.parentFolderId=o,t.networkLink=t),t}async function j(s,o,r,t){const n=s[o];if(!n)return[];const u=E.fromJSON(n.featureSet).features,y=n.layerDefinition,c=M(y.drawingInfo.renderer),f=O.fromJSON(n.popupInfo),i=[];for(const e of u){const l=await c.getSymbolAsync(e);e.symbol=l,e.popupTemplate=f,e.visible=!0;const a=r.sublayerById.get(t);e.origin=a.origin,i.push(e)}return i}function G(s){const o=h(S),r=h(S);for(const t of s){if(t.polygons?.featureSet?.features)for(const n of t.polygons.featureSet.features)m(o,n.geometry),d(r,o);if(t.polylines?.featureSet?.features)for(const n of t.polylines.featureSet.features)m(o,n.geometry),d(r,o);if(t.points?.featureSet?.features)for(const n of t.points.featureSet.features)m(o,n.geometry),d(r,o);if(t.mapImages)for(const n of t.mapImages)m(o,n.extent),d(r,o)}return x(r,S)?void 0:{xmin:r[0],ymin:r[1],zmin:r[2],xmax:r[3],ymax:r[4],zmax:r[5],spatialReference:v.WGS84}}export{G as I,N as S,j as b,H as d,J as g};
