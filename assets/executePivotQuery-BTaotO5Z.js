import{dj as u,co as c,hl as f,bH as y,bP as m,k4 as p,eG as v,f8 as P}from"./index-Bkom2Sdc.js";import{v as l}from"./PivotQuery-ByYrKFVb.js";function g(i){const t=p(i),r=t.outPivots;if(r?.length){for(const o of r)o.pivotType==="Pivot"&&o.pivotParameters.outStatistic?o.pivotParameters.outStatistic=JSON.stringify(o.pivotParameters.outStatistic):o.pivotType==="Unpivot"&&(o.unPivotParameters.sourceFields=o.unPivotParameters.sourceFields.join(","));t.outPivots=JSON.stringify(r)}return t}async function S(i,t,r){return await $(i,t,r)}async function $(i,t,r={}){const o=typeof i=="string"?u(i):i,e=t.geometry?[t.geometry]:[],a=await c(e,null,{signal:r.signal}),n=a?.[0];n!=null&&((t=t.clone()).geometry=n);const s=f({...o.query,f:"json",...g(t)});return y(m(o.path,"queryPivot"),{...r,query:{...s,...r.query}})}async function h(i,t,r){const o=v(i),e={...r},{data:a}=await S(o,l.from(t),e);return P.fromJSON(a)}export{h as executePivotQuery};
