import{L as Z,o as j,c as H,s as M,U as o,x as X,a4 as m,i as I,b as A}from"./index-Bkom2Sdc.js";/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.3.3 */function B(t,s,n){const a=s[0]-t[0],c=n[0]-s[0],h=s[1]-t[1],l=n[1]-s[1],r=h/(a||c<0&&0),i=l/(c||a<0&&0),e=(r*c+i*a)/(a+c);return(Math.sign(r)+Math.sign(i))*Math.min(Math.abs(r),Math.abs(i),.5*Math.abs(e))||0}function S(t,s,n){const a=s[0]-t[0],c=s[1]-t[1];return a?(3*c/a-n)/2:n}function N(t,s,n,a,c){const[h,l]=t,[r,i]=s,e=(r-h)/3,$=c([h+e,l+e*n]).join(","),d=c([r-e,i-e*a]).join(","),g=c([r,i]).join(",");return`C ${$} ${d} ${g}`}function E({width:t,height:s,min:n,max:a}){const c=a[0]-n[0],h=a[1]-n[1];return l=>{const r=(l[0]-n[0])/c*t,i=s-(l[1]-n[1])/h*s;return[r,i]}}function G(t){const[s,n]=t[0],a=[s,n],c=[s,n];return t.reduce(({min:h,max:l},[r,i])=>({min:[Math.min(h[0],r),Math.min(h[1],i)],max:[Math.max(l[0],r),Math.max(l[1],i)]}),{min:a,max:c})}function R({data:t,min:s,max:n,t:a}){if(t.length===0)return"";const[c,h]=a(t[0]),[l,r]=a(s),[i]=a(n);let e,$,d;const g=t.reduce((b,v,p)=>{if($=t[p-2],d=t[p-1],p>1){const u=B($,d,v),k=e===void 0?S($,d,u):e,z=N($,d,k,u,a);return e=u,`${b} ${z}`}return b},`M ${l},${r} L ${l},${h} L ${c},${h}`),L=t[t.length-1],x=N(d,L,e,S(d,L,e),a);return`${g} ${x} L ${i},${r} Z`}const U=I`:host{--calcite-internal-color-focus: var( --calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)) )}:host{display:block;block-size:100%}.svg{fill:currentColor;stroke:transparent;margin:0;display:block;block-size:100%;inline-size:100%;padding:0}.svg .graph-path--highlight{fill:var(--calcite-graph-highlight-fill-color, var(--calcite-color-brand));opacity:.5}:host([hidden]){display:none}[hidden]{display:none}`,y={svg:"svg",graphPath:"graph-path",graphPathHighlight:"graph-path--highlight"},C="calcite-graph",f={host:t=>`${C}-${t}`,linearGradient:t=>`linear-gradient-${C}-${t}`,mask:(t,s)=>`${C}-${t}${s}`},w=class w extends Z{constructor(){super(...arguments),this.graphId=j(),this.resizeObserver=H("resize",()=>this.requestUpdate()),this.data=[]}connectedCallback(){super.connectedCallback(),this.resizeObserver?.observe(this.el)}disconnectedCallback(){super.disconnectedCallback(),this.resizeObserver?.disconnect()}render(){const{data:s,colorStops:n,el:a,highlightMax:c,highlightMin:h,min:l,max:r}=this,i=this.graphId,{clientHeight:e,clientWidth:$}=a;if(!s||s.length===0)return X`<svg aria-hidden=true class=${M(y.svg)} height=${e??o} preserveAspectRatio=none viewBox=${`0 0 ${$} ${e}`} width=${$??o}></svg>`;const{min:d,max:g}=G(s);let L=d,x=g;(l<d[0]||l>d[0])&&(L=[l,0]),(r>g[0]||r<g[0])&&(x=[r,g[1]]);const b=E({min:L,max:x,width:$,height:e}),[v]=b([h,x[1]]),[p]=b([c,x[1]]),u=R({data:s,min:d,max:g,t:b}),k=n?`url(#${f.linearGradient(i)})`:void 0;return X`<svg aria-hidden=true class=${M(y.svg)} height=${e??o} preserveAspectRatio=none viewBox=${`0 0 ${$} ${e}`} width=${$??o}>${n?m`<defs><linearGradient id=${f.linearGradient(i)??o} x1=0 x2=1 y1=0 y2=0>${n.map(({offset:z,color:O,opacity:Y})=>m`<stop offset=${`${z*100}%`} stop-color=${O??o} stop-opacity=${Y??o} />`)}</linearGradient></defs>`:null}${h!==void 0?[m`<mask height=100% id=${f.mask(i,1)??o} width=100% x=0% y=0%><path d=${`
            M 0,0
            L ${v-1},0
            L ${v-1},${e}
            L 0,${e}
            Z
          `} fill=white /></mask>`,m`<mask height=100% id=${f.mask(i,2)??o} width=100% x=0% y=0%><path d=${`
            M ${v+1},0
            L ${p-1},0
            L ${p-1},${e}
            L ${v+1}, ${e}
            Z
          `} fill=white /></mask>`,m`<mask height=100% id=${f.mask(i,3)??o} width=100% x=0% y=0%><path d=${`
                M ${p+1},0
                L ${$},0
                L ${$},${e}
                L ${p+1}, ${e}
                Z
              `} fill=white /></mask>`,m`<path class=${M(y.graphPath)} d=${u??o} fill=${k??o} mask=${`url(#${f.mask(i,1)})`} />`,m`<path class=${M(y.graphPathHighlight)} d=${u??o} fill=${k??o} mask=${`url(#${f.mask(i,2)})`} />`,m`<path class=${M(y.graphPath)} d=${u??o} fill=${k??o} mask=${`url(#${f.mask(i,3)})`} />`]:m`<path class=${M(y.graphPath)} d=${u??o} fill=${k??o} />`}</svg>`}};w.properties={colorStops:[0,{},{attribute:!1}],data:[0,{},{attribute:!1}],highlightMax:[9,{},{type:Number}],highlightMin:[9,{},{type:Number}],max:[11,{},{reflect:!0,type:Number}],min:[11,{},{reflect:!0,type:Number}]},w.styles=U;let P=w;A("calcite-graph",P);export{P as Graph};
