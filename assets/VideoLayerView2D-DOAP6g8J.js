import{io as X,hI as Y,ef as j,ea as c,ip as B,iq as J,en as N,er as K,es as Q,g6 as _,d9 as Z,be as z,ir as V,he as ee,bp as L,gI as te,f3 as ie,gG as R,gE as q,eg as F,aO as u,is as se,bb as v,bc as x,it as re,bd as oe}from"./index-C2z3vZ9k.js";import{p as U,h as ne}from"./videoUtils-C57MQ5aC.js";import{u as ae}from"./OverlayContainer-DNXmGGIF.js";import{e as le}from"./Container-CV2f8I_O.js";import{n as he,S as me,u as ye}from"./LayerView-CPeRSnbP.js";import{t as pe}from"./GraphicContainer-Bqo5FH1p.js";import{O as ce}from"./GraphicsView2D-DhAb0RB8.js";import"./vec3f32-WCVSSNPR.js";import"./WGLContainer-BZJApB0t.js";import"./Utils-C5jEUm36.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-BWlKZXFz.js";import"./StyleDefinition-CDh4Tp6C.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-BHcwWift.js";import"./FeatureCommandQueue-C1_QL2kt.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-B9_UmIx1.js";import"./FramebufferObject-VOwZdCdO.js";import"./ShaderBuilder-B3IMbU-q.js";import"./BindType-BBwFZqyN.js";import"./UpdateTracking2D-CbpOkpGW.js";import"./utils-CACl0e8b.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BcSu0-3Q.js";import"./utils-ehcGqGxa.js";import"./layerViewUtils-DH0dJCjx.js";import"./AGraphicContainer-CxUMwNUP.js";import"./TechniqueInstance-443j62v0.js";import"./TileContainer-CniZrGqU.js";import"./AttributeStore-DVD4bOTK.js";import"./queryUtils-2piN-80C.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CJsGYDu-.js";import"./normalizeUtilsSync-DMyauJc7.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-D2JQtFW9.js";const T=2;class ue extends le{constructor(t){super(),this.element=t,this._handles=new X,this.isWrapAround=!1,this.perspectiveTransform=Y(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(j((()=>this.element),(()=>{const i=this.element;this.ready(),i&&this._handles.add(B(i,"play",(()=>this.requestRender())))}),c))}getMesh(t){throw new Error("Method not implemented.")}destroy(){this._handles.destroy(),this.texture=J(this.texture)}get textureSize(){if(!this.texture)return[1,1];const t=this.texture.descriptor;return[t.width,t.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(t){const i=this.element;if(i==null)return;const{context:n}=t,{videoWidth:o,videoHeight:r}=i;if(o!==0&&r!==0){if(this.texture)i.paused||this.texture.setData(i);else{const s=new N;s.wrapMode=K.CLAMP_TO_EDGE,s.preMultiplyAlpha=!0,s.width=o,s.height=r,this.texture=new Q(n,s,i)}i.paused||(this.texture.generateMipmap(),this.requestRender()),super.beforeRender(t)}}_createTransforms(){return null}updateDrawCoords(t,i,n,o){const r=this.element,s=this._getFrameInfo();if(!r||!s)return;const{spatialReference:l}=n;this._initializeData(t,s,l);const{controlPoints:h,horizon:m}=s,y=Math.sqrt(h.length),a=y,{x:p,y:d}=t,f=this._vertices,C=h[0],W=h[y-1],k=h[(a-1)*y],I=h[(a-1)*y+y-1],G=_(m?m[0].mapPoint:C.mapPoint,l),P=_(m?m[1].mapPoint:W.mapPoint,l),S=_(k.mapPoint,l),A=_(I.mapPoint,l);this.clipGeometry=m?new he({geometry:Z.fromJSON({rings:[[[S.x,S.y],[A.x,A.y],[P.x,P.y],[G.x,G.y],[S.x,S.y]]],spatialReference:l})}):null;for(let g=0;g<h.length;g++){const E=h[g],{sourcePoint:M,mapPoint:$}=E;if(M==null||$==null)continue;const w=_($,l);f[g*T+0]=w.x-p,f[g*T+1]=w.y-d}let D=i;if(o){const g=Math.min(G.x,P.x,S.x,A.x),E=Math.max(G.x,P.x,S.x,A.x),{worldWidth:M,xBounds:$}=o,[w,H]=$;g<w&&E>w?D=M:E>H&&g<H&&(D=-M)}this.wrapAroundShift=D,this.isWrapAround=D!==0}draw(t,i){if(this.visible){if(!(this.isReady&&this._vertices&&this._indices&&this._texCoords))return void this.requestRender();this.stage||console.warn("OverlayMultipoint: stage is null"),i.render(t,{transform:{dvs:this.dvsMat3},config:{perspective:this.perspectiveTransform,texSize:this.textureSize,wrapAroundShift:this.wrapAroundShift,isWrapAround:this.isWrapAround,opacity:this.opacity,texture:{texture:this.texture,unit:0}},position:this._vertices,tex:this._texCoords,index:this._indices})}}_initializeData(t,i,n){if(this._vertices!=null&&this._indices!=null)return;const{controlPoints:o}=i,r=Math.sqrt(o.length),s=r,l=new Float32Array(T*o.length),h=new Uint16Array(2*o.length);for(let a=0;a<o.length;a++){const p=o[a],{sourcePoint:d,mapPoint:f}=p;if(d==null||f==null)continue;const C=_(f,n);l[a*T+0]=C.x-t.x,l[a*T+1]=C.y-t.y,h[2*a+0]=d.x,h[2*a+1]=d.y}const m=new Uint16Array(s*r+(s-2)*(r+2));let y=0;for(let a=0;a<s;a++){for(let p=0;p<r;p++)m[y++]=a*r+p,m[y++]=(a+1)*r+p;a<s-2&&(m[y++]=(a+1)*r+(r-1),m[y++]=(a+1)*r)}this._vertices=l,this._texCoords=h,this._indices=m}_getFrameInfo(){if(!this.groundControlPoints)return null;const t=this._getFrameControlPoints(),i=this.frameHorizonPoints;let n=null;if(i){const o=i.startX,r=i.startY,s=i.endX,l=i.endY;n=[{sourcePoint:V(o,r),mapPoint:new z(i.startLongitude,i.startLatitude)},{sourcePoint:V(s,l),mapPoint:new z(i.endLongitude,i.endLatitude)}]}return{controlPoints:t,horizon:n}}_getFrameControlPoints(){const t=this.groundControlPoints,i=t==null?void 0:t.length;if(!i)return[];const n=new Array(i),o=Math.max(...t.map((({x:s})=>s))),r=this.element.videoWidth/o;for(let s=0;s<i;s++){const{x:l,y:h,lat:m,lon:y}=t[s];n[s]={sourcePoint:V(l*r,-h*r),mapPoint:new z(y,m)}}return n}}const O=new ie([255,127,0]),de=10005,fe=10018;let b=class extends me(ye){constructor(){super(...arguments),this._graphicsLayer=new ee,this._frameOutlineGraphic=new L({symbol:new te({outline:{type:"simple-line",color:O}})}),this._frameCenterGraphic=new L({symbol:new R({color:O,style:"cross"})}),this._sensorTrailGraphic=new L({symbol:new q({color:O})}),this._sensorSightlineGraphic=new L({symbol:new q({color:O})}),this._sensorLocationGraphic=new L({symbol:new R({color:O})}),this._overlayContainer=null,this._sensorLocationSymbolType=null,this.layer=null,this.sensorLocationSymbol=null,this.symbolAngle=0,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=F(this._graphicsLayer)}initialize(){var e,t,i,n,o,r,s;this._sensorLocationSymbolType=(e=this.layer)==null?void 0:e.sensorSymbol.type,this._graphicsLayer.graphics.addMany([this._frameCenterGraphic,this._frameOutlineGraphic,this._sensorLocationGraphic,this._sensorSightlineGraphic,this._sensorTrailGraphic]),this.visibleTelemetryElements=new U({frame:((t=this.layer.telemetryDisplay)==null?void 0:t.frame)??!1,frameCenter:((i=this.layer.telemetryDisplay)==null?void 0:i.frameCenter)??!0,frameOutline:((n=this.layer.telemetryDisplay)==null?void 0:n.frameOutline)??!0,lineOfSight:((o=this.layer.telemetryDisplay)==null?void 0:o.lineOfSight)??!0,sensorLocation:((r=this.layer.telemetryDisplay)==null?void 0:r.sensorLocation)??!0,sensorTrail:((s=this.layer.telemetryDisplay)==null?void 0:s.sensorTrail)??!0})}attach(){this._overlayContainer=new ae,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new ce({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new pe(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([u((()=>{var e,t,i,n,o,r;return[(e=this.layer.telemetryDisplay)==null?void 0:e.frame,(t=this.layer.telemetryDisplay)==null?void 0:t.frameCenter,(i=this.layer.telemetryDisplay)==null?void 0:i.frameOutline,(n=this.layer.telemetryDisplay)==null?void 0:n.sensorLocation,(o=this.layer.telemetryDisplay)==null?void 0:o.sensorTrail,(r=this.layer.telemetryDisplay)==null?void 0:r.lineOfSight]}),(()=>this._updateVisibleTelemetryElements()),c),u((()=>{var e,t,i,n,o;return[this.layer.telemetry,(e=this.visibleTelemetryElements)==null?void 0:e.frameCenter,(t=this.visibleTelemetryElements)==null?void 0:t.frameOutline,(i=this.visibleTelemetryElements)==null?void 0:i.sensorLocation,(n=this.visibleTelemetryElements)==null?void 0:n.sensorTrail,(o=this.visibleTelemetryElements)==null?void 0:o.lineOfSight]}),(()=>this._updateGraphicGeometries()),c),u((()=>this.layer.metadata),(()=>this._updateSensorLocationSymbolAngle()),c),u((()=>{var e;return(e=this.layer)==null?void 0:e.frameCenterSymbol}),(()=>this._updateFrameCenterSymbol()),c),u((()=>{var e;return(e=this.layer)==null?void 0:e.frameOutlineSymbol}),(()=>this._updateFrameOutlineSymbol()),c),u((()=>{var e;return(e=this.layer)==null?void 0:e.sensorSightLineSymbol}),(()=>this._updateSensorSightlineSymbol()),c),u((()=>{var e;return(e=this.layer)==null?void 0:e.sensorSymbol}),(()=>this._updateSensorLocationSymbol()),c),u((()=>{var e;return(e=this.layer)==null?void 0:e.sensorTrailSymbol}),(()=>this._updateSensorTrailSymbol()),c),u((()=>this.symbolAngle),(()=>this._updateSensorLocationSymbol()),c)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=F(this.graphicsView)}supportsSpatialReference(e){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(e){this.graphicsView.processUpdate(e)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frame=this.layer.telemetryDisplay.frame,this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:e}=this.layer,{visibleTelemetryElements:t}=this;e&&t&&(t.frameOutline&&e.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,t.sensorTrail&&e.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,t.lineOfSight&&e.lineOfSight?this._sensorSightlineGraphic.geometry=this.layer.telemetry.lineOfSight:this._sensorSightlineGraphic.geometry=null,t.sensorLocation&&e.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,t.frameCenter&&e.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}_updateSensorLocationSymbolAngle(){var r,s,l,h,m,y,a,p,d,f;if(!((s=(r=this.layer)==null?void 0:r.metadata)!=null&&s.size))return;const{source:e,symbolOffset:t=0}=this.layer.sensorSymbolOrientation||{};if(!e&&!t)return;const i=((m=(h=(l=this.layer)==null?void 0:l.metadata)==null?void 0:h.get(de))==null?void 0:m.value)??0,n=((p=(a=(y=this.layer)==null?void 0:y.metadata)==null?void 0:a.get(fe))==null?void 0:p.value)??0,o=ne({cameraAzimuth:n,platformHeading:i,source:(d=this.layer.sensorSymbolOrientation)==null?void 0:d.source,symbolOffset:((f=this.layer.sensorSymbolOrientation)==null?void 0:f.symbolOffset)??0});this.symbolAngle=Math.round(Math.abs(o))}_updateSensorLocationSymbol(){switch(this._sensorLocationSymbolType){case"simple-marker":this.sensorLocationSymbol=this.layer.sensorSymbol.clone(),this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol.clone();break;case"picture-marker":this.sensorLocationSymbol=this.layer.sensorSymbol,this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol;break;case"cim":this.sensorLocationSymbol=this.layer.sensorSymbol,se(this.sensorLocationSymbol,this.symbolAngle,!0),this._sensorLocationGraphic.symbol=this.sensorLocationSymbol}}_updateFrameCenterSymbol(){var e;(e=this.layer)!=null&&e.frameCenterSymbol&&(this._frameCenterGraphic.symbol=this.layer.frameCenterSymbol.clone())}_updateFrameOutlineSymbol(){var e;(e=this.layer)!=null&&e.frameOutlineSymbol&&(this._frameOutlineGraphic.symbol=this.layer.frameOutlineSymbol.clone())}_updateSensorSightlineSymbol(){var e;(e=this.layer)!=null&&e.sensorSightLineSymbol&&(this._sensorSightlineGraphic.symbol=this.layer.sensorSightLineSymbol.clone())}_updateSensorTrailSymbol(){var e;(e=this.layer)!=null&&e.sensorTrailSymbol&&(this._sensorTrailGraphic.symbol=this.layer.sensorTrailSymbol.clone())}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;const e=new ue(this.layer.videoElement);this.addAttachHandles([u((()=>{var t;return[this.layer.frameHorizonPoints,this.layer.groundControlPoints,this.layer.frameOpacity,(t=this.layer.telemetryDisplay)==null?void 0:t.frame]}),(()=>{const{visibleTelemetryElements:t}=this;e.frameHorizonPoints=this.layer.frameHorizonPoints,e.groundControlPoints=this.layer.groundControlPoints,e.opacity=this.layer.frameOpacity,e.visible=(t==null?void 0:t.frame)??!1}),c)]),this._overlayContainer.addChild(e),this.view.stage.requestRender()}};v([x()],b.prototype,"graphicsView",void 0),v([x()],b.prototype,"layer",void 0),v([x({types:re})],b.prototype,"sensorLocationSymbol",void 0),v([x()],b.prototype,"symbolAngle",void 0),v([x({type:U})],b.prototype,"visibleTelemetryElements",void 0),b=v([oe("esri.views.2d.layers.VideoLayerView2D")],b);const it=b;export{it as default};
