import{jj as J,iv as N,fF as X,f$ as p,jk as Y,dC as B,fP as Q,fR as K,gh as g,dR as Z,a$ as z,jl as V,it as ee,c7 as L,hN as te,eQ as ie,hL as H,hJ as W,fz as j,bE as c,jm as se,b8 as _,ba as x,jn as re,bb as oe}from"./index-Bkom2Sdc.js";import{p as q,h as ne}from"./videoUtils-CBnqcvRD.js";import{f as ae}from"./OverlayContainer-DCoHc41S.js";import{p as R}from"./ControlPoint-BJp56ZC3.js";import{e as le}from"./Container-BUOpKgJS.js";import{n as he,b as me}from"./LayerView2D-30FU1rxw.js";import{i as ye}from"./GraphicContainer-D9ivYpIc.js";import{O as pe}from"./GraphicsView2D-Cudol1Qm.js";import{d as ce}from"./LayerView-dsZyO1fP.js";import"./vec3f32-WCVSSNPR.js";import"./WGLContainer-C7Fkis0r.js";import"./Utils-BPwjYj-m.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-D6UgULFC.js";import"./VertexArrayObject-BCHRBpsS.js";import"./VertexAttributeLocations-BfZbt_DV.js";import"./VertexBuffer-CsbdF0n4.js";import"./BufferObject-CTARDp2h.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-nye7QKUe.js";import"./FeatureCommandQueue-BwfXXGpL.js";import"./GraphShaderModule-DIYQfoJR.js";import"./FramebufferObject-EJw5XZ2C.js";import"./ShaderBuilder-DRCHXYJf.js";import"./UpdateTracking2D-BAgVtftM.js";import"./utils-b1TOb6Y0.js";import"./constants-BBnGEY1d.js";import"./QueueProcessor-DqRCcjoo.js";import"./utils-DDjZAYSk.js";import"./layerViewUtils-CKJQaxCu.js";import"./AGraphicContainer-qU2ctLWU.js";import"./TechniqueInstance-CTCRZ9BY.js";import"./TileContainer-D8e9urlk.js";import"./AttributeStore-CS019e7y.js";import"./FeatureStoreQueryAdapter-xTIuWByO.js";import"./queryUtils-CyiURm7K.js";import"./timeSupport-CXh2VZCm.js";import"./FeatureMetadata-gkZZdSVQ.js";import"./normalizeUtilsSync-BY_tIBIr.js";import"./densifyCurvedGeometry-z0hd02Ge.js";import"./dehydratedFeatures-Bgz_yYu_.js";const T=2;class ue extends le{constructor(e){super(),this.element=e,this._handles=new J,this.isWrapAround=!1,this.perspectiveTransform=N(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(X(()=>this.element,()=>{const t=this.element;this.ready(),t&&this._handles.add(Y(t,"play",()=>this.requestRender()))},p))}getMesh(e){throw new Error("Method not implemented.")}destroy(){super.destroy(),this._handles.destroy(),this.texture=B(this.texture)}get textureSize(){if(!this.texture)return[1,1];const e=this.texture.descriptor;return[e.width,e.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(e){const t=this.element;if(t==null)return;const{context:l}=e,{videoWidth:n,videoHeight:s}=t;if(n!==0&&s!==0){if(this.texture)t.paused||e.animationsEnabled&&this.texture.setData(t);else{const i=new Q(n,s);i.wrapMode=33071,i.preMultiplyAlpha=!0,this.texture=new K(l,i,t)}t.paused||this.texture.generateMipmap(),super.beforeRender(e)}}_createTransforms(){return null}updateDrawCoords(e,t,l,n){const s=this.element,i=this._getFrameInfo();if(!s||!i)return;const{spatialReference:a}=l;this._initializeData(e,i,a);const{controlPoints:h,horizon:m}=i,y=Math.sqrt(h.length),o=y,{x:u,y:S}=e,v=this._vertices,O=h[0],U=h[y-1],k=h[(o-1)*y],I=h[(o-1)*y+y-1],G=g(m?m[0].mapPoint:O.mapPoint,a),P=g(m?m[1].mapPoint:U.mapPoint,a),b=g(k.mapPoint,a),A=g(I.mapPoint,a);this.clipGeometry=m?new he({geometry:Z.fromJSON({rings:[[[b.x,b.y],[A.x,A.y],[P.x,P.y],[G.x,G.y],[b.x,b.y]]],spatialReference:a})}):null;for(let d=0;d<h.length;d++){const D=h[d],{sourcePoint:$,mapPoint:M}=D;if($==null||M==null)continue;const w=g(M,a);v[d*T+0]=w.x-u,v[d*T+1]=w.y-S}let E=t;if(n){const d=Math.min(G.x,P.x,b.x,A.x),D=Math.max(G.x,P.x,b.x,A.x),{worldWidth:$,xBounds:M}=n,[w,F]=M;d<w&&D>w?E=$:D>F&&d<F&&(E=-$)}this.wrapAroundShift=E,this.isWrapAround=E!==0}draw(e,t){if(this.visible){if(!(this.isReady&&this._vertices&&this._indices&&this._texCoords))return void this.requestRender();this.stage||console.warn("OverlayMultipoint: stage is null"),t.render(e,{transform:{dvs:this.dvsMat3},config:{perspective:this.perspectiveTransform,texSize:this.textureSize,wrapAroundShift:this.wrapAroundShift,isWrapAround:this.isWrapAround,opacity:this.opacity,texture:{texture:this.texture,unit:0}},position:this._vertices,tex:this._texCoords,index:this._indices})}}_initializeData(e,t,l){if(this._vertices!=null&&this._indices!=null)return;const{controlPoints:n}=t,s=Math.sqrt(n.length),i=s,a=new Float32Array(T*n.length),h=new Uint16Array(2*n.length);for(let o=0;o<n.length;o++){const u=n[o],{sourcePoint:S,mapPoint:v}=u;if(S==null||v==null)continue;const O=g(v,l);a[o*T+0]=O.x-e.x,a[o*T+1]=O.y-e.y,h[2*o+0]=S.x,h[2*o+1]=S.y}const m=new Uint16Array(i*s+(i-2)*(s+2));let y=0;for(let o=0;o<i;o++){for(let u=0;u<s;u++)m[y++]=o*s+u,m[y++]=(o+1)*s+u;o<i-2&&(m[y++]=(o+1)*s+(s-1),m[y++]=(o+1)*s)}this._vertices=a,this._texCoords=h,this._indices=m}_getFrameInfo(){if(!this.groundControlPoints)return null;const e=this._getFrameControlPoints(),t=this.frameHorizonPoints;let l=null;if(t){const n=t.startX,s=t.startY,i=t.endX,a=t.endY;l=[new R({sourcePoint:V(n,s),mapPoint:new z(t.startLongitude,t.startLatitude)}),new R({sourcePoint:V(i,a),mapPoint:new z(t.endLongitude,t.endLatitude)})]}return{controlPoints:e,horizon:l}}_getFrameControlPoints(){const e=this.groundControlPoints,t=e?.length;if(!t)return[];const l=new Array(t),n=Math.max(...e.map(({x:i})=>i)),s=this.element.videoWidth/n;for(let i=0;i<t;i++){const{x:a,y:h,lat:m,lon:y}=e[i];l[i]=new R({sourcePoint:V(a*s,-h*s),mapPoint:new z(y,m)})}return l}}const C=new ie([255,127,0]),de=10005,fe=10018;let f=class extends me(ce){constructor(){super(...arguments),this._graphicsLayer=new ee,this._frameOutlineGraphic=new L({symbol:new te({outline:{type:"simple-line",color:C}})}),this._frameCenterGraphic=new L({symbol:new H({color:C,style:"cross"})}),this._sensorTrailGraphic=new L({symbol:new W({color:C})}),this._sensorSightlineGraphic=new L({symbol:new W({color:C})}),this._sensorLocationGraphic=new L({symbol:new H({color:C})}),this._overlayContainer=null,this._sensorLocationSymbolType=null,this.layer=null,this.sensorLocationSymbol=null,this.symbolAngle=0,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=j(this._graphicsLayer)}initialize(){this._sensorLocationSymbolType=this.layer?.sensorSymbol.type,this._graphicsLayer.graphics.addMany([this._frameCenterGraphic,this._frameOutlineGraphic,this._sensorLocationGraphic,this._sensorSightlineGraphic,this._sensorTrailGraphic]),this.visibleTelemetryElements=new q({frame:this.layer.telemetryDisplay?.frame??!1,frameCenter:this.layer.telemetryDisplay?.frameCenter??!0,frameOutline:this.layer.telemetryDisplay?.frameOutline??!0,lineOfSight:this.layer.telemetryDisplay?.lineOfSight??!0,sensorLocation:this.layer.telemetryDisplay?.sensorLocation??!0,sensorTrail:this.layer.telemetryDisplay?.sensorTrail??!0})}attach(){this._overlayContainer=new ae,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new pe({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new ye(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([c(()=>[this.layer.telemetryDisplay?.frame,this.layer.telemetryDisplay?.frameCenter,this.layer.telemetryDisplay?.frameOutline,this.layer.telemetryDisplay?.sensorLocation,this.layer.telemetryDisplay?.sensorTrail,this.layer.telemetryDisplay?.lineOfSight],()=>this._updateVisibleTelemetryElements(),p),c(()=>[this.layer.telemetry,this.visibleTelemetryElements?.frameCenter,this.visibleTelemetryElements?.frameOutline,this.visibleTelemetryElements?.sensorLocation,this.visibleTelemetryElements?.sensorTrail,this.visibleTelemetryElements?.lineOfSight],()=>this._updateGraphicGeometries(),p),c(()=>this.layer.metadata,()=>this._updateSensorLocationSymbolAngle(),p),c(()=>this.layer?.frameCenterSymbol,()=>this._updateFrameCenterSymbol(),p),c(()=>this.layer?.frameOutlineSymbol,()=>this._updateFrameOutlineSymbol(),p),c(()=>this.layer?.sensorSightLineSymbol,()=>this._updateSensorSightlineSymbol(),p),c(()=>this.layer?.sensorSymbol,()=>this._updateSensorLocationSymbol(),p),c(()=>this.layer?.sensorTrailSymbol,()=>this._updateSensorTrailSymbol(),p),c(()=>this.symbolAngle,()=>this._updateSensorLocationSymbol(),p)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=j(this.graphicsView)}supportsSpatialReference(r){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(r){this.graphicsView.processUpdate(r)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.view.animationsEnabled&&this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frame=this.layer.telemetryDisplay.frame,this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){if(!this.view.animationsEnabled)return;const{telemetry:r}=this.layer,{visibleTelemetryElements:e}=this;r&&e&&(e.frameOutline&&r.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,e.sensorTrail&&r.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,e.lineOfSight&&r.lineOfSight?this._sensorSightlineGraphic.geometry=this.layer.telemetry.lineOfSight:this._sensorSightlineGraphic.geometry=null,e.sensorLocation&&r.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,e.frameCenter&&r.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}_updateSensorLocationSymbolAngle(){if(!this.view.animationsEnabled||!this.layer?.metadata?.size)return;const{source:r,symbolOffset:e=0}=this.layer.sensorSymbolOrientation||{};if(!r&&!e)return;const t=this.layer?.metadata?.get(de)?.value??0,l=this.layer?.metadata?.get(fe)?.value??0,n=ne({cameraAzimuth:l,platformHeading:t,source:this.layer.sensorSymbolOrientation?.source,symbolOffset:this.layer.sensorSymbolOrientation?.symbolOffset??0});this.symbolAngle=Math.round(Math.abs(n))}_updateSensorLocationSymbol(){switch(this._sensorLocationSymbolType){case"simple-marker":this.sensorLocationSymbol=this.layer.sensorSymbol.clone(),this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol.clone();break;case"picture-marker":this.sensorLocationSymbol=this.layer.sensorSymbol,this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol;break;case"cim":this.sensorLocationSymbol=this.layer.sensorSymbol,se(this.sensorLocationSymbol,this.symbolAngle,!0),this._sensorLocationGraphic.symbol=this.sensorLocationSymbol}}_updateFrameCenterSymbol(){this.layer?.frameCenterSymbol&&(this._frameCenterGraphic.symbol=this.layer.frameCenterSymbol.clone())}_updateFrameOutlineSymbol(){this.layer?.frameOutlineSymbol&&(this._frameOutlineGraphic.symbol=this.layer.frameOutlineSymbol.clone())}_updateSensorSightlineSymbol(){this.layer?.sensorSightLineSymbol&&(this._sensorSightlineGraphic.symbol=this.layer.sensorSightLineSymbol.clone())}_updateSensorTrailSymbol(){this.layer?.sensorTrailSymbol&&(this._sensorTrailGraphic.symbol=this.layer.sensorTrailSymbol.clone())}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;const r=new ue(this.layer.videoElement);this.addAttachHandles([c(()=>[this.layer.frameHorizonPoints,this.layer.groundControlPoints,this.layer.frameOpacity,this.layer.telemetryDisplay?.frame],()=>{if(!this.view.animationsEnabled)return;const{visibleTelemetryElements:e}=this;r.frameHorizonPoints=this.layer.frameHorizonPoints,r.groundControlPoints=this.layer.groundControlPoints,r.opacity=this.layer.frameOpacity,r.visible=e?.frame??!1},p)]),this._overlayContainer.addChild(r),this.view.stage.requestRender()}};_([x()],f.prototype,"graphicsView",void 0),_([x()],f.prototype,"layer",void 0),_([x({types:re})],f.prototype,"sensorLocationSymbol",void 0),_([x()],f.prototype,"symbolAngle",void 0),_([x({type:q})],f.prototype,"visibleTelemetryElements",void 0),f=_([oe("esri.views.2d.layers.VideoLayerView2D")],f);const ot=f;export{ot as default};
