import{dt as h,du as f,dv as n,bf as o,dw as b,dx as l,dy as d,bF as g,dz as x}from"./index-Bkom2Sdc.js";const c=()=>o.getLogger("esri.views.webgl.BufferObject"),T=!!g("esri-tests-disable-gpu-memory-measurements");let p=class r{static createIndex(e,t,s){return new r(e,34963,t,s)}static createUniform(e,t,s){return new r(e,35345,t,s)}static createPixelPack(e,t=35041,s){const i=new r(e,35051,t);return s&&i.setSize(s),i}static createPixelUnpack(e,t=35040,s){return new r(e,35052,t,s)}static createTransformFeedback(e,t=35044,s){const i=new r(e,35982,t);return i.setSize(s),i}constructor(e,t,s,i){this._context=e,this.bufferType=t,this.usage=s,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(h.BufferObject,this),this._glName=this._context.gl.createBuffer(),f(this._context.gl),i&&this.setData(i)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get sizeBytes(){if(this.bufferType===34963){if(this._indexType===n.UNSIGNED_INT)return 4*this._size;if(this._indexType===n.UNSIGNED_SHORT)return 2*this._size}return this._size}get usedMemory(){return T?0:this.sizeBytes}get _isVAOAware(){return this.bufferType===34963||this.bufferType===34962}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(h.BufferObject,this),this._context=null):this._glName&&c().warn("Leaked WebGL buffer object")}setSize(e,t=null){if(this.bufferType===34963&&t!=null)switch(this._indexType=t,t){case n.UNSIGNED_SHORT:e*=2;break;case n.UNSIGNED_INT:e*=4}this._setBufferData(e)}setData(e){if(!e)return;let t=e.byteLength;this.bufferType===34963&&(b(e)?this._indexType=n.UNSIGNED_BYTE:l(e)?(t/=2,this._indexType=n.UNSIGNED_SHORT):d(e)&&(t/=4,this._indexType=n.UNSIGNED_INT)),this._setBufferData(t,e)}_setBufferData(e,t=null){this._size=e;const s=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const i=this._context.gl;t!=null?i.bufferData(this.bufferType,t,this.usage):i.bufferData(this.bufferType,e,this.usage),f(i),this._isVAOAware&&this._context.bindVAO(s)}setSubData(e,t,s,i){if(!e)return;const u=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const{gl:a}=this._context;a.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,e,s,i-s),f(a),this._isVAOAware&&this._context.bindVAO(u)}getSubData(e,t=0,s,i){if(s<0||i<0)return;const u=y(e)?e.BYTES_PER_ELEMENT:1;if(u*((s??0)+(i??0))>e.byteLength)return;t+u*(i??0)>this.usedMemory&&c().warn("Potential problem getting subdata: requested data exceeds buffer size!");const a=this._context.gl;this.bufferType===35982?(this._context.bindBuffer(this,35982),a.getBufferSubData(35982,t,e,s,i),this._context.unbindBuffer(35982)):(this._context.bindBuffer(this,36662),a.getBufferSubData(36662,t,e,s,i),this._context.unbindBuffer(36662))}async getSubDataAsync(e,t=0,s,i){await this._context.clientWaitAsync(),this.getSubData(e,t,s,i)}};function y(_){return x(_)}export{p as o};
