const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/intersectionOperator-B-CVPdwF.js","assets/index-Bkom2Sdc.js","assets/index-CkucmIUh.css","assets/Point2D-DVg-Qhcx.js","assets/ProjectionTransformation-Bvt2x7E-.js","assets/Envelope2D-7paLNnHT.js","assets/Transformation2D-CNf0ySKF.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/OperatorDefinitions-DP7_WWTp.js","assets/jsonConverter-74r_fa1M.js","assets/operatorIntersection-q6dNySA8.js","assets/apiConverter-C8FhisLI.js"])))=>i.map(i=>d[i]);
import{b4 as p,fe as ut,f8 as Ve,bF as ct,m0 as mt,bX as je,eG as dt,bH as pt,bi as M,fX as ft,b6 as Je,b8 as g,ba as F,bb as N,b9 as yt,s6 as _e,s7 as A,bC as ht,gS as gt,b_ as z,fg as wt,bn as Ft,aW as L,aV as $,s8 as vt,s9 as St,sa as xt,gT as qt,pv as Vt,sb as _t,pu as zt,ej as Fe,sc as Ge,bf as Tt,sd as Q,gI as ze,aH as Et,aX as bt,se as B,d6 as Ue,kx as $t,pw as Lt,sf as j,bO as Nt,gN as Ze,c7 as Te,sg as Ct}from"./index-Bkom2Sdc.js";import{F as de,U as x,N as ne,I as Me,T as Mt,M as It}from"./utils-C4ZnkFTC.js";import{d as At,c as We,j as oe,m as he,q as He,C as I,$ as le,P as Xe,a as Ot,n as kt}from"./utils-CM17lTaw.js";import{v as Ke,p as Ye}from"./PivotQuery-ByYrKFVb.js";import{summaryStatistics as J,uniqueValues as Ee,histogram as ue,classBreaks as be,heatmapStatistics as Qt}from"./statsWorker-DLWvWdrP.js";import Bt from"./AttributeBinsQuery-DrwEkP8m.js";import{a as Pt,m as Rt,n as Dt,b as jt}from"./FixedIntervalBinParameters-9QRDBkMs.js";import"./ClassBreaksDefinition-DLcEIyEO.js";import"./queryUtils-CyiURm7K.js";function Jt(e,t){if(!e.view)throw new p(`${t}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new p(`${t}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if(e.view.type==="3d")throw new p(`${t}:invalid-parameters`,"3d view is not supported for binning")}let X=class Z{constructor(){this.connection=null}async open(t){this.connection=await ut("statsWorker",{strategy:"distributed",signal:t})}destroy(){this.connection?.close()}static getInstance(){return Z.instance||(Z.instance=new Z),Z.instance}async summaryStatistics(t,a){if(!this.connection)throw new p("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:t,features:a})}async uniqueValues(t,a){if(!this.connection)throw new p("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:t,features:a})}async classBreaks(t,a){if(!this.connection)throw new p("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:t,features:a})}async histogram(t,a){if(!this.connection)throw new p("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:t,features:a})}async heatmapStatistics(t,a){if(!this.connection)throw new p("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:t,features:a})}};async function Gt(e,t,a,i,r){return Zt(t,await Ut(e,t,a,i,r))}async function Ut(e,t,a,i,r){const s={...i},o=Wt(t,a),n=t.outStatistics?.[0]!=null,l=ct("featurelayer-pbf-statistics"),u=!n||l;let c;return u||(c=await mt(e,o,s,r)),a?.fieldsIndex,c.fields,c}async function Zt(e,t,a,i){return Ve.fromJSON(t)}function Wt(e,t){let a=je.from(e);return a.sourceSpatialReference=a.sourceSpatialReference??t?.sourceSpatialReference??null,a}async function Ht(e,t,a,i){const r=dt(e),{source:s,checkValueRange:o}=t,{classificationDefinition:n}=a,l={...a.toJSON(),f:"json"};let u=null;if(u=n?.type==="class-breaks-definition"?n.classificationField:n?.attributeField,s){const f={source:s?.toJSON()};l.layer=JSON.stringify(f)}l.classificationDef&&(l.classificationDef=JSON.stringify(l.classificationDef));let c={query:l};i&&(c={...i,...c});const d={url:r.path,field:u,checkValueRange:o},m=r.path+"/generateRenderer";return pt(m,c).then(f=>Xt(d,f))}function Xt(e,t){const{field:a,checkValueRange:i,url:r}=e,s=t?.data;if(!s)return;if(!i){const u=Ie(s);return Promise.resolve(u)}const o=new M({statisticType:"min",onStatisticField:a}),n=new M({statisticType:"max",onStatisticField:a}),l=new je({outStatistics:[o,n]});return Gt(r,l).then(u=>{const c=u.features[0].attributes;let d=null,m=null;for(const f in c)f.toLowerCase().startsWith("min")?d=c[f]:m=c[f];return Ie(s,d,m)})}function Ie(e,t,a){if(e.type==="classBreaks"){const r=ft(e);return{classBreaks:r.classBreakInfos.map((s,o)=>(o===0&&t!=null&&(s.minValue=t),o===r.classBreakInfos.length-1&&a!=null&&(s.maxValue=a),{minValue:s.minValue,maxValue:s.maxValue,label:s.label})),normalizationTotal:r.normalizationTotal}}const{uniqueValueInfos:i}=e;return{uniqueValues:i?.map((r,s)=>(s===0&&t!=null&&(r.value=t),s===i.length-1&&a!=null&&(r.value=a),{count:r.count,value:r.value,label:r.label}))??[]}}let O=class extends Je{constructor(t){super(t),this.classificationDefinition=null,this.where=null}};g([F({json:{name:"classificationDef",write:!0}})],O.prototype,"classificationDefinition",void 0),g([F({type:String,json:{write:!0}})],O.prototype,"where",void 0),O=g([N("esri.rest.support.GenerateRendererParameters")],O);let C=class extends Je{constructor(t){super(t),this.type="unique-value-definition",this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null}get uniqueValueFields(){const t=[];return this.attributeField&&t.push(this.attributeField),this.attributeField2&&t.push(this.attributeField2),this.attributeField3&&t.push(this.attributeField3),t}};g([yt({uniqueValueDef:"unique-value-definition"})],C.prototype,"type",void 0),g([F()],C.prototype,"attributeField",void 0),g([F()],C.prototype,"attributeField2",void 0),g([F()],C.prototype,"attributeField3",void 0),g([F({json:{write:!0}})],C.prototype,"fieldDelimiter",void 0),g([F({json:{write:!0}})],C.prototype,"uniqueValueFields",null),C=g([N("esri.rest.support.UniqueValueDefinition")],C);const et="no_dominant_category";function Kt(e){return{expression:Yt(e,{defaultValue:`'${et}'`})}}function Yt(e,t){const{defaultValue:a,layer:i}=t,r=[];if(a){const s=e.map(o=>`${o} <= 0`).join(" AND ");r.push(`WHEN ${s} THEN ${a}`)}for(const s of e){const o=e.reduce((u,c)=>(s!==c&&u.push(`${s} > ${c}`),u),[]).join(" AND "),n=i&&_e(i,s),l=`'${s}'`?`'${s}'`:n?A(s):s;r.push(`WHEN ${o} THEN ${l}`)}return`CASE ${r.join(" ")} ELSE ${a||"0"} END`}function ea(e){return e&&e.map(t=>`$feature["${t}"];`).join(`
`)+`
`||""}function ta(e,t=!1){const a=e.map(r=>`"${r}"`);return`
  var fieldNames = [ ${a.join(", ")} ];
  var numFields = ${a.length};
  var maxValueField = null;
  var maxValue = -Infinity;
  var value, i, totalValue = null;

  for(i = 0; i < numFields; i++) {
    value = $feature[fieldNames[i]];

    if(value > 0) {
      if(value > maxValue) {
        maxValue = value;
        maxValueField = fieldNames[i];
      }
      else if (value == maxValue) {
        maxValueField = null;
      }
    }
    ${t?`
  if(value != null && value >= 0) {
    if (totalValue == null) { totalValue = 0; }
    totalValue = totalValue + value;
  }
  `:""}
  }
  `}function $e(e){const t=ta(e);return`
  ${ea(e)}
  ${t}
  return maxValueField;
  `}let T=class extends ht{constructor(t){super(t),this.adapterName="layer-adapter"}};g([F({readOnly:!0})],T.prototype,"adapterName",void 0),g([F({constructOnly:!0})],T.prototype,"layer",void 0),g([F()],T.prototype,"geometryType",void 0),g([F()],T.prototype,"objectIdField",void 0),g([F()],T.prototype,"supportsSQLExpression",void 0),g([F()],T.prototype,"hasQueryEngine",void 0),g([F()],T.prototype,"minScale",void 0),g([F()],T.prototype,"maxScale",void 0),g([F()],T.prototype,"fullExtent",void 0),T=g([N("esri.smartMapping.support.adapters.LayerAdapter")],T);const aa=/_value$/i,ia=Math.LOG10E,ra={SECOND:1e3,MINUTE:6e4,HOUR:36e5},D=10;function H(e){return e.map(t=>t.toJSON())}function Ae(e,t){const a=[],i=e.layer,r="featureReduction"in i?i.featureReduction:null,s=r?.type==="binning",o=r!=null&&"fields"in r?r.fields?.map(n=>n.name?.toLowerCase()).filter(Boolean):[];if(!s||!t)return a;for(const n of t)o.includes(n.toLowerCase())||a.push(n);return a}function ce(e,t,a){const i=[];if(t)for(const r of t){const s=e.getField(r);s&&a&&"availableFields"in a&&!a.availableFields?.includes(s.name)&&i.push(s.name)}return i}function me(e,t){const a=e&&e.features;if(a?.length===0)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const i=a?.[0]?.attributes,r={};for(const s in i)r[s.replace(aa,"").toLowerCase()]=i[s];return r.totalcount!=null&&r.totalcount>=r.count&&(r.nullcount=r.totalcount-r.count),delete r.totalcount,r.min===r.max&&r.min!=null&&r.stddev==null&&(r.stddev=r.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach(s=>{r[s]!=null&&(r[s]=Math.ceil(r[s]))}),r.min===r.max&&r.min!=null&&(r.avg=r.min,r.stddev=r.variance=0)),r}function sa(e){const t=[],a=e.classBreaks,i=a[0].minValue,r=a[a.length-1].maxValue;a.forEach(o=>{t.push([o.minValue,o.maxValue])});const s={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:i,max:r,intervals:t,sqlExpr:G(s),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function G(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:s}=e,o=_e(s,t);let n=t;return a==="percent-of-total"?n=`((${o?A(t):t} / ${r}) * 100)`:a==="log"?n=`(log(${t}) * ${ia})`:a==="field"?n=`(${o?A(t):t} / ${i})`:a==="natural-log"?n=`(log(${o?A(t):t}))`:a==="square-root"&&(n=`(power(${o?A(t):t}, 0.5))`),n}function tt(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()!==t){a=e[i];break}}return a}function W(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()===t){a=e[i];break}}return a}function ve(e,t,a,i,r){const s={},o="countOFExpr";e&&e.features&&e.features.forEach(l=>{const u=l.attributes,c=tt(u,o),d=W(u,o);c!=null&&d!=null&&c!==0&&(s[c]=d)});const n=[];return oe(t,a,i).forEach((l,u)=>{const c=(u+1).toString();n.push({minValue:l[0],maxValue:l[1],count:s.hasOwnProperty(c)?s[c]:0})}),{bins:n,minValue:t,maxValue:a,normalizationTotal:r}}async function Le(e,t){const a=e&&e.features,{field:i,field2:r,field3:s,fieldDelimiter:o,layer:n,view:l,signal:u,labels:c}=t,d=`countOF${(!i||!r)&&i||"Expr"}`,m={};let f=!1;for(const y of a){const h=y.attributes,v=W(h,d);let w=i?W(h,i):tt(h,d),q=r?W(h,r):null,V=s?W(h,s):null;w===null&&v===0&&(f=!0),(w==null||typeof w=="string"&&w.trim()==="")&&(w=null),r&&(q==null||typeof q=="string"&&q.trim()==="")&&(q=null),s&&(V==null||typeof V=="string"&&V.trim()==="")&&(V=null);let _=w;r&&(_=`${he(_)}${o}${he(q)}`,s&&(_=`${_}${o}${he(V)}`)),m[_]==null?m[_]={count:v,data:_}:m[_].count=m[_].count+v}if(i&&f){const y=i+" is NULL";try{const h=await n.queryFeatureCount({whereClause:y,view:l,signal:u});return m.null.count=m.null.count+h,ge(m,c)}catch{return z(u),ge(m,c)}}return ge(m,c)}function ge(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}async function we(e,t,a){const i=e?a.getField(e):null,r=i?a.getFieldDomain(i.name):null;if(r)return r;const{uniqueValueInfos:s}=await a.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),o=s.map(n=>new vt({code:n.value}));return new St({codedValues:o})}async function pe(e,t){if(!e.returnAllCodedValues)return[];const{field:a,field2:i,field3:r}=e;if(a&&!i){const o=a?t.getField(a):null,n=o?t.getFieldDomain(o.name):null;return n?[n]:[]}const s=[];return a&&(s.push(we(a,e,t)),i&&(s.push(we(i,e,t)),r&&s.push(we(r,e,t)))),Promise.all(s)}function na(e,t){return xt(e,new Date(0),t,"milliseconds").sqlExpression}function oa(e,t){return`EXTRACT(${t} FROM ${e}) * ${ra[t]}`}function la(e){return e?A(["HOUR","MINUTE","SECOND"].map(t=>`(${oa(e,t)})`).join(" + ")):null}function b(e){return{viewingMode:e.type==="2d"?"map":e.viewingMode,scale:e.scale,spatialReference:e.spatialReference?.toJSON()}}function Ne(e,t){const a=new Set(e.map(r=>r.value)),i=t.filter(r=>!a.has(r));for(const r of i)e.push({value:r,count:0});e.sort((r,s)=>t.indexOf(r.value)-t.indexOf(s.value));for(const r of e)r.value===et&&(r.value=null);return{predominantCategoryInfos:e}}function Oe(e){const t="featureReduction"in e?e.featureReduction:null;return((t!=null&&"fields"in t?t.fields:null)??[]).map(a=>{const i=ua(a,e.fieldsIndex);return i?new wt({type:i,name:a.name,alias:a.alias}):null}).filter(Ft)}function ua(e,t){switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?null:"double":null;case"mode":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?"string":"double":null;default:return null}}function at(e,t){return L(t)?na(e,t?.name):$(t)?la(t?.name):null}function ke(e,t,a){let i=null;for(const r of a){const s=r?e.getField(r):null,o=fe(e,{...t,field:r,outStatisticTypes:{include:["min","max","sum","count"]}},s,!0,!0);i?i.outStatistics=i.outStatistics.concat(o.outStatistics):i=o}return i.where=e.createQuery()?.where,i}function it(e,t,a,i){return t.map(r=>{const s=new M;let o=null,n=null,l=`${r}_value${i?`_${i}`:""}`;if(r==="variance")o="var",n=a;else if(r==="nullcount"){const u=e.objectIdField;o="count",n=u&&e.getField(u)?u:"1",l="totalcount_value"}else r==="median"?(o="percentile-continuous",n=a,s.statisticParameters={value:.5}):(o=r,n=a);return s.statisticType=o,s.onStatisticField=n,s.outStatisticFieldName=l,s})}function fe(e,t,a,i=!0,r=!1){const{field:s,normalizationType:o,normalizationField:n,normalizationTotal:l,minValue:u,maxValue:c,filter:d}=t,m=e.supportsSQLExpression?at(e,a)||t.sqlExpression:null,f=G({field:s,normalizationType:o,normalizationField:n,normalizationTotal:l,layer:e}),y=m||f,h=y?ne(y,u,c):null,v=de({field:s,normalizationField:n,normalizationType:o}),w=x(t.sqlWhere,v),q=x(w,h),V=At({normalizationField:n,normalizationType:o,sqlExpression:m,supportsSQLExpression:e.supportsSQLExpression,minValue:u,maxValue:c}),_=gt(e.getField(s??void 0)),{include:K,exclude:Y}=t.outStatisticTypes||{},ye=We.filter(U=>(!K||K.includes(U))&&(!Y||!Y.includes(U))&&(U==="nullcount"?V:!_||U==="count")&&(U!=="median"||i)),P=e.createQuery();return P.where=x(P.where,q),P.sqlFormat=m?"standard":null,P.outStatistics=it(e,ye,y,r?s:void 0),E(P,d),P}function ca(e,t,a=!0){const{fields:i,filter:r}=t,{include:s,exclude:o}=t.outStatisticTypes||{},n=We.filter(c=>(!s||s.includes(c))&&(!o||!o.includes(c))&&(c!=="median"||a)),l=new Ke;l.where=x(e.createQuery()?.where,t.sqlWhere)??void 0;const u="new_value";return l.outPivots=[new Ye({sourceFields:i,valueFieldName:u})],l.outStatistics=it(e,n,u),E(l,r),l}function E(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship,e.timeExtent=e.timeExtent?.intersection(t.timeExtent)??t.timeExtent,e.distance=t.distance,e.units=t.units)}function rt(e,t){const{field:a,field2:i,field3:r,sqlExpression:s}=t,o=!(!a||!i),n=e.createQuery();return n.where=x(n.where,t.sqlWhere),n.sqlFormat=s?"standard":null,n.outStatistics=[ma(o?null:a,o?"1":s)].filter(Boolean),n.groupByFieldsForStatistics=[a||s,i,r].filter(Boolean),E(n,t.filter),n}function ma(e,t){const a="countOF"+(e||"Expr"),i=new M;return i.statisticType="count",i.onStatisticField=t?"1":e,i.outStatisticFieldName=a,i}function te(e,t,a,i=D,r,s,o){const{min:n,max:l,normTotal:u,excludeZerosExpr:c}=t,d=t.intervals||oe(n,l,i),m=t.sqlExpr||a;return da(e,d,m,c,r,s,o).then(f=>({bins:f.map((y,h)=>({minValue:d[h][0],maxValue:d[h][1],count:y.status==="fulfilled"?y.value:0})),minValue:n,maxValue:l,normalizationTotal:u}))}function da(e,t,a,i,r,s,o){const n=[],l=t.length;for(let u=0;u<l;u++){const c=x(i,x(a+" >= "+t[u][0],t[u][1]!==null?a+(u===l-1?" <= ":" < ")+t[u][1]:""));n.push(c)}return Promise.allSettled(n.map(u=>e.queryFeatureCount({whereClause:u,view:r,filter:s,signal:o})))}const st="countOFExpr",pa="lowerBoundary",fa="upperBoundary";function nt(e,t,a){const i=e.valueExpression||e.sqlExpression,r=e.signal;if(!i){const{field:s,normalizationType:o,normalizationField:n}=e,l=s?t.getField(s):null,u=L(l)||$(l);return{sqlExpression:u?at(t,l):G({field:s,normalizationType:o,normalizationField:n,normalizationTotal:a,layer:t}),sqlWhere:u?null:e.sqlWhere||de({field:s,normalizationType:o,normalizationField:n}),filter:e.filter,signal:r}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:r}}async function Se(e,t,a){const{field:i,normalizationType:r,normalizationField:s,signal:o}=e,n=de({field:i,normalizationType:r,normalizationField:s}),l=new O({classificationDefinition:He({field:i,normalizationType:r,normalizationField:s,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numBins||D}),where:x(n,a)});return t.generateRenderer(l,o).then(u=>{const{normalizationTotal:c,classBreaks:d}=u;return sa({field:i,normalizationType:r,normalizationField:s,normalizationTotal:c,classBreaks:d,where:n,layer:t})})}async function ya(e,t,a,i,r){const{field:s,sqlExpression:o,normalizationField:n,classificationMethod:l,normalizationType:u}=e,c=s?t.getField(s):null,d=$(c),m=zt(c)||d,f=e.numBins||D;if(m){if(u||l)throw new p(`${t.adapterName}:not-supported`,"NormalizationType and classificationMethod are not supported for date-only and time-only fields");const y=(i-a)/f/1e3,h=y/86400;return new Pt({field:s,expression:o,interval:{unit:d?"seconds":"days",value:Math.ceil(d?y:h)},start:a,end:i})}if(l==="defined-interval")return new Rt({field:s,expression:o,normalizationField:n,normalizationTotal:r,normalizationType:u,interval:e.definedInterval??Math.ceil((i-a)/f),start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null});if(l==="manual")throw new p(`${t.adapterName}:not-supported`,"Layer does not support manual classificationMethod");if(l==="natural-breaks"||l==="quantile"||l==="standard-deviation"){const y=G({field:s,normalizationField:n,normalizationTotal:r,normalizationType:u,layer:t}),h=e.minValue!==null&&e.maxValue!==null?ne(y,e.minValue,e.maxValue):void 0,v=await Se(e,t,h);if(!v.intervals)throw new p(`${t.adapterName}:invalid`,"Invalid intervals returned from generate renderer");const w=[a,...v.intervals.map(q=>q[1])];return new Dt({field:u?null:s,expression:u?y:o,boundaries:w})}return new jt({field:s,normalizationField:n,normalizationTotal:r,normalizationType:u,expression:o,numBins:f,start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null})}function xe(e,t,a,i){return a!=null&&i!=null?Promise.resolve({min:a,max:i}):t.summaryStatistics({...e,outStatisticTypes:{include:["min","max"]}}).then(r=>({min:r.min,max:r.max}))}async function ot(e,t,a,i){const{field:r,minValue:s,maxValue:o,filter:n,view:l}=e,u=r?t.getField(r):null,c=qt(u)||Vt(u),d=nt(e,t,a),{min:m,max:f}=await xe(d,t,s,o);if(m==null||f==null)return{query:null,min:m,max:f};const y=new M({statisticType:"count",outStatisticFieldName:st,onStatisticField:"1"}),{where:h,timeExtent:v}=i||{},w=x(h,d.sqlWhere),q="lowerBoundary",V="upperBoundary",_=new Bt({binParameters:await ya(e,t,m,f,a),outStatistics:[y],binOrder:e.sortOrder,where:w,timeExtent:v,lowerBoundaryAlias:q,upperBoundaryAlias:V,outTimeZone:l?.timeZone&&c?_t(l.timeZone):null});return E(_,n),{query:_,min:m,max:f}}function Qe(e,t=!1){return typeof e!="string"?e:(t?new Date(`1970-01-01T${e}Z`):new Date(e)).getTime()}function lt(e,t,a){const i=$(t);return{...a,bins:e.features.map(r=>({minValue:Qe(r.attributes[pa],i),maxValue:Qe(r.attributes[fa],i),count:r.attributes[st]}))}}function Be(e,t,a){const{valueExpression:i,view:r}=e,{featuresJSON:s,graphics:o,fieldInfos:n}=t,l={field:e.field,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:a,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&r&&(s||o)&&(l.viewInfoParams=b(r),l.timeZone=r.timeZone,l.fieldInfos=n),l}const ha=5;let ee=null,k=class extends T{constructor(){super(...arguments),this._hasLocalSource=!1,this.adapterName="in-memory-layer-adapter"}destroy(){this.workerClient?.destroy()}async _waitForLayerViewUpdate(e){if(!e)throw new p(`${this.adapterName}:insufficient-data`,"layerView is required to fetch the features");const t=new AbortController,a=Fe(()=>!e.updating,t.signal);await Ge(a,5e3,t).catch(i=>{throw Tt.getLogger(this).warn("LayerView is taking too long to update. Aborting fetch from layerView."),i})}async _fetchFeatureSetFromMemory(e,t,a){const i=this.layer;if(this._hasLocalSource&&"queryFeatures"in i)return i.queryFeatures(e);if(!t)throw new p(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=await t.whenLayerView(this.layer);return await this._waitForLayerViewUpdate(r),r.queryFeatures(e,{signal:a})}async _fetchFeaturesFromMemory(e,t,a,i){const r=this.layer,s=i==="json";if(this._hasLocalSource&&"queryFeatures"in r){const n=await r.queryFeatures(t);return s?H(n.features):n.features}if(await this._waitForLayerViewUpdate(e),s&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:n}=await e.queryFeaturesJSON(t,{signal:a});return n}if(!("queryFeatures"in e))throw new p(`${this.adapterName}:not-supported`,"'queryFeatures' is not supported on the layerView");const o=await e.queryFeatures(t,{signal:a});return s?H(o.features):o.features}_fetchFeaturesForStats(e,t){return Q({field:e.field,field2:e.field2,field3:e.field3,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,filter:e.filter,requiredFields:a,signal:e.signal},t))}async _summaryStatsFromClientQuery(e,t){const{view:a,signal:i}=e,r=fe(this,e,t),s=await this._fetchFeatureSetFromMemory(r,a,i),o=me(s,L(t)||$(t));return I(o,e.outStatisticTypes)}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:s,query:o}=t,n={include:["sum"]},l=(!i&&!r&&s&&"querySummaryStatistics"in s?await s.querySummaryStatistics(o,{field:e},{signal:a}):i?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:n},i):await J({attribute:{field:e,outStatisticTypes:n},features:r??[]})).sum;if(l==null)throw new p(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:s,signal:o}=e,n={field:i,valueExpression:r,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:c,query:d,fieldInfos:m}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"querySummaryStatistics"});return r&&a&&(l||u)&&(n.fieldType=t?.type?ze.toJSON(t.type):null,n.viewInfoParams=b(a),n.timeZone=a.timeZone,n.fieldInfos=m),s==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:l,graphics:u,layerView:c,query:d},o)),!l&&!u&&c&&"querySummaryStatistics"in c?c.querySummaryStatistics(d,n,{signal:o}):l?this.workerClient.summaryStatistics(n,l):J({attribute:n,features:u})}async _getFilteredFeatures(e,t){let a=e;const i=t?.geometry;if(t?.spatialRelationship==="intersects"&&i){const r=await Et(()=>import("./intersectionOperator-B-CVPdwF.js").then(s=>s.i),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11]));a=e.filter(({geometry:s})=>!(!s||!r.execute(s,i)))}return e.length&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic"?{graphics:a}:{featuresJSON:a}}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t?.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:s,field3:o,normalizationField:n,valueExpression:l,layerViewFunc:u,signal:c}=e;let d=e.returnGeometry;if(d==null&&l){if(!ee){const{arcadeUtils:q}=await bt();ee=q}const w=ee.hasGeometryOperations(l);w&&await ee.enableGeometryOperations(),d=w}let m=null,f=null,y=null,h=null,v=null;if(i)try{const w=this.layer.type==="subtype-sublayer"?this.layer.parent:this.layer;m=await i.whenLayerView(w),f=u!=null&&m!=null&&u in m&&typeof m[u]=="function"}catch{f=!1}if(f)try{await this._waitForLayerViewUpdate(m);const w=await Q({field:r,field2:s,field3:o,normalizationField:n,valueExpression:l});ce(this,w,m).length?f=!1:(y=this.layer.createQuery(),y.outFields=w,y.returnGeometry=!1,E(y,a)),m.suspended&&(f=!1)}catch{f=!1}return f||(h=await this._fetchFeaturesForStats({field:r,field2:s,field3:o,valueExpression:l,normalizationField:n,returnGeometry:d,filter:a,view:i,signal:c},"json"),v=(await Q({valueExpression:l})).map(w=>this.getField(w)?.toJSON()).filter(Boolean)),{layerView:m,query:y,featuresJSON:h,fieldInfos:v}}async _uvFromClientQuery(e,t){const{view:a,signal:i}=e,r=rt(this,e),s=await this._fetchFeatureSetFromMemory(r,a,i),o=await Le(s,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:B,view:e.view,signal:e.signal});return le(o,t,e.returnAllCodedValues,B)}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:s,signal:o}=e,{featuresJSON:n,graphics:l,layerView:u,query:c,fieldInfos:d}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryUniqueValues"}),m={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:B,valueExpression:r,domains:t,returnAllCodedValues:s};return r&&a&&(n||l)&&(m.viewInfoParams=b(a),m.timeZone=a.timeZone,m.fieldInfos=d),!n&&!l&&u&&"queryUniqueValues"in u?u.queryUniqueValues(c,m,{signal:o}):n?this.workerClient.uniqueValues(m,n):Ee({attribute:m,features:l})}_histogramForField(e){let t=null;return t=e.minValue!=null&&e.maxValue!=null?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics({...e,outStatisticTypes:{include:["min","max","count"]}}).then(a=>{if(!a.count)throw new p(`${this.adapterName}:insufficient-data`,"Either the layer has no features or none of the features have data for the field");return{min:a.min,max:a.max}}),t.then(a=>te(this,{min:a.min,max:a.max},e.field,e.numBins??void 0,e.view,e.filter,e.signal))}async _histogramFromQueryAttributeBinsFromMemory(e){const{field:t,normalizationType:a,signal:i}=e,r=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAttributeBins"}),{featuresJSON:s,graphics:o,layerView:n,query:l}=r,u=a==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,r,i):void 0;if(!n||!("queryAttributeBins"in n)||s||o){const y=Be(e,r,u);return s?this.workerClient.histogram(y,s):ue({attribute:y,features:o})}const{query:c,min:d,max:m}=await ot(e,this,u,l);if(!c)return{bins:[],minValue:d,maxValue:m,normalizationTotal:u};const f=await n.queryAttributeBins(c,{signal:i});return lt(f,t?this.getField(t):null,{minValue:d,maxValue:m,normalizationTotal:u})}async _histogramFromMemory(e){const{field:t,signal:a}=e,i=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryHistogram"}),{featuresJSON:r,graphics:s,layerView:o,query:n}=i,l=e.normalizationType==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,i,a):void 0,u=Be(e,i,l);return!r&&!s&&o&&"queryHistogram"in o?o.queryHistogram(n,u,{signal:a}):r?this.workerClient.histogram(u,r):ue({attribute:u,features:s})}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,i=e.numClasses||ha,r=[],s=(a-t)/i;for(let l=0;l<i;l++){const u=t+l*s;r.push({minValue:u,maxValue:u+s})}r[i-1].maxValue=a;const o={classBreaks:r,normalizationTotal:e.normalizationTotal},n=Xe(o,e.classificationMethod);return Promise.resolve(n)}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:o,layerView:n,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryClassBreaks"}),c={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(s||o)&&(c.viewInfoParams=b(t),c.timeZone=t.timeZone,c.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(c.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:o,layerView:n,query:l},r)),!s&&!o&&n&&"queryClassBreaks"in n?n.queryClassBreaks(l,c,{signal:r}):s?this.workerClient.classBreaks(c,s):be({attribute:c,features:o})}async _heatmapStatsFromMemory(e){const{view:t,field:a,radius:i,signal:r}=e;Ue(t,"InMemoryLayerAdapter: must have a view");try{const u=await t.whenLayerView(this.layer);if("queryHeatmapStatistics"in u&&!u.updating&&!e.filter)return await u.queryHeatmapStatistics({field:e.field,radius:e.radius})}catch{z(r)}const{featuresJSON:s,graphics:o}=await this._processStatsFromMemoryParams({...e,returnGeometry:!0}),n=new $t({extent:t.extent,tolerance:t.type==="2d"?t.state.resolution:t.pixelSizeAt?.(t.center)}),l={field:a,radius:i,transform:Lt(n),spatialReference:t.spatialReference?.toJSON(),size:t.size};return s?.length||o?.length?s?this.workerClient.heatmapStatistics(l,s):Qt({attribute:l,features:o}):{min:null,max:null}}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}createQuery(){return this.layer.createQuery()}async summaryStatistics(e){const{field:t,valueExpression:a,sqlExpression:i,features:r,view:s}=e,o=t?this.getField(t):null,n=!!a,l=s?.type==="3d";if(!a&&i&&!this.supportsSQLExpression)throw new p(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return n||r||l?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,o)}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,view:r}=e,s=await pe(e,this),o=!!t,n=r?.type==="3d";if(!t&&a&&!this.supportsSQLExpression)throw new p(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return o||i||n?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s)}async histogram(e){const{features:t,valueExpression:a,normalizationType:i,sqlExpression:r}=e,s=t||!!a;if(!a&&r&&!this.supportsSQLExpression)throw new p(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return s||i?this._histogramFromMemory(e):this._histogramForField(e)}async classBreaks(e){return e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:i}=e;if(!a)throw new p(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=this.layer.createQuery();r.where=x(r.where,t);const s=await a.whenLayerView(this.layer);return await Fe(()=>!s.updating,i),s.queryFeatureCount(r,{signal:i})}async generateRenderer(e,t){throw new p(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:i,filter:r}=e,s=$e(t),o=await this._uvFromMemory({valueExpression:s,view:a,signal:i,filter:r});return Ne(o.uniqueValueInfos,t)}async heatmapStatistics(e){return this._heatmapStatsFromMemory(e)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,filter:o,signal:n}=e,l=this.layer.createQuery(),u=1;if(l.outSpatialReference=a?.spatialReference,l.returnGeometry=!!s,l.outFields=r,E(l,o),!a)throw new p(`${this.adapterName}:not-supported`,"view is required to get sample features for Layer");const c=await a.whenLayerView(this.layer);if(ce(this,r,c).length)throw new p(`${this.adapterName}:not-supported`,"Required fields need to be passed in the outFields for Layer");const d=await this._fetchFeaturesFromMemory(c,l,n,t),m=i!=null&&i>0&&i<=d.length?i:d.length;return j(d,m,u)}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.type==="stream"||!!a.capabilities?.query?.supportsSqlExpression,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent="fullExtent"in a?a.fullExtent:a.parent?.fullExtent,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=X.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};g([F({readOnly:!0})],k.prototype,"adapterName",void 0),g([F({constructOnly:!0})],k.prototype,"layer",void 0),k=g([N("esri.smartMapping.support.adapters.InMemoryLayerAdapter")],k);const Pe=5,Re=2e4,ga=4e5;let S=class extends k{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){const e=this.layer;if(!e.capabilities?.query?.supportsStatistics||this.geometryType==="multipatch"&&!Nt(e.url)&&e.version<10.5)throw new p(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then(a=>a.features)}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(H)}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:Pe,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:t==="field"?a:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then(i=>{let r,s,o;if(i.classBreakInfos?.some(l=>(l.hasAvg&&(r=l),!!r)),r){const l=r.maxValue-r.minValue;s=r.minValue+l/2,o=4*l}const n={min:i.minValue,max:i.maxValue,avg:s,stddev:o};return I(n,e.outStatisticTypes)})}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),e.normalizationType==="percent-of-total"&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const a=L(t)||$(t),i="capabilities"in this.layer?this.layer.capabilities:null,r=fe(this,e,t,i?.query?.supportsPercentileStatistics??!1),s=await this.layer.queryFeatures(r,{signal:e.signal}),o=me(s,a);return I(o,e.outStatisticTypes)}async _summaryStatsForFieldsBasic(e){const{outStatisticTypes:t,fields:a}=e,i=50,r=[];for(let n=0;n<a.length;n+=i){const l=a.slice(n,n+i),u=ke(this,e,l);r.push(this.layer.queryFeatures(u,{signal:e.signal}))}const s=(await Promise.all(r)).flatMap(n=>n.features).map(n=>n.attributes).reduce((n,l)=>Object.assign(n,l),{}),o={};for(const n in s){const l=n.match(/^(\w+)_value_/);if(!(s[n]==null||!l))switch(l[1]){case"min":o.min=o.min==null?s[n]:Math.min(o.min,s[n]);break;case"max":o.max=o.max==null?s[n]:Math.max(o.max,s[n]);break;case"sum":o.sum=(o.sum||0)+s[n];break;case"count":o.count=(o.count||0)+s[n]}}return I(o,t)}async _summaryStatsForFieldsAdvanced(e,t){const{outStatisticTypes:a,fields:i}=e,r=a?.exclude?.includes("variance")||a?.include&&!a.include.includes("variance"),s=a?.exclude?.includes("stddev")||a?.include&&!a.include.includes("stddev");if(t.sum==null||!t.count||r&&s)return t;t.avg=t.sum/t.count;const o=50,n=[];for(let u=0;u<i.length;u+=o){const c=i.slice(u,u+o),d=ke(this,e,c);d.outStatistics=[];for(const m of c){const f=`sumOfSquares_${m}`,y=`(power(${_e(this.layer,m)?A(m):m} - ${t.avg}, 2))`,h=new M({statisticType:"sum",onStatisticField:y,outStatisticFieldName:f});d.outStatistics.push(h)}n.push(this.layer.queryFeatures(d,{signal:e.signal}))}const l=(await Promise.all(n)).reduce((u,c)=>u+Object.values(c.features[0].attributes).reduce((d,m)=>d+m,0),0);return t.variance=l/(t.count-1),t.stddev=Math.sqrt(t.variance),I(t,a)}async _summaryStatsForFields(e){const t=await this._summaryStatsForFieldsBasic(e);return this._summaryStatsForFieldsAdvanced(e,t)}async _summaryStatsUsingQueryPivot(e){await this._isStatsSupportedOnService();const t="capabilities"in this.layer?this.layer.capabilities:null,a=ca(this,e,t?.query?.supportsPercentileStatistics??!1),i=await this.layer.queryPivot(a,{signal:e.signal}),r=me(i,!1);return I(r,e.outStatisticTypes)}_uvFromGenRenderer(e,t){const a=e.field??void 0,i=new C({attributeField:a}),r=new O({classificationDefinition:i});return this.generateRenderer(r,e.signal).then(s=>{const o={},n=this.getField(a);return s.uniqueValues.forEach(l=>{let u=l.value;u!=null&&u!==""&&(typeof u!="string"||u.trim()!==""&&u.toLowerCase()!=="<null>")||(u=null),o[u]==null?o[u]={count:l.count,data:Ze(n)&&u?Number(u):u}:o[u].count=o[u].count+l.count}),{count:o}}).then(s=>le(s,[t],e.returnAllCodedValues))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(rt(this,e),{signal:e.signal})).then(a=>Le(a,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:B,view:e.view,signal:e.signal})).then(a=>le(a,t,e.returnAllCodedValues,B))}_getNormalizationTotal(e,t,a,i){return e&&t==="percent-of-total"?this.summaryStatistics({field:e,outStatisticTypes:{include:["sum"]},filter:a,signal:i}).then(r=>r.sum):Promise.resolve(null)}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then(t=>{const a=nt(e,this,t);return xe(a,this,e.minValue,e.maxValue).then(i=>{const r=i.min,s=i.max;if(r==null||s==null)return{bins:[],minValue:r,maxValue:s,normalizationTotal:t};const o=e.numBins||D,n=oe(r,s,o),l=De(a.sqlExpression,n,e.minValue!=null&&e.maxValue!=null),u=new M({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),c=this.layer.createQuery();return c.where=x(c.where,a.sqlWhere),c.sqlFormat="standard",c.outStatistics=[u],c.groupByFieldsForStatistics=[l],c.orderByFields=[l],E(c,e.filter),this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(c,{signal:a.signal})).then(d=>ve(d,r,s,o,t))})})}async _histogramForFields(e){const{min:t,max:a}=await xe({fields:e.fields,sqlWhere:e.sqlWhere,filter:e.filter,signal:e.signal},this,e.minValue,e.maxValue);if(t==null||a==null)return{bins:[],minValue:t,maxValue:a};const i="newField",r=e.numBins||D,s=De(i,oe(t,a,r),e.minValue!=null&&e.maxValue!=null),o=new M({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:i}),n=new Ke,{where:l,timeExtent:u}=this.createQuery();return n.where=x(l,e.sqlWhere),n.outPivots=[new Ye({sourceFields:e.fields,valueFieldName:i})],n.outStatistics=[o],n.groupByFieldsForStatistics=[s],n.orderByFields=[s],n.timeExtent=u,E(n,e.filter),this._isStatsSupportedOnService().then(()=>this.layer.queryPivot(n,{signal:e.signal})).then(c=>ve(c,t,a,r))}async _histogramFromQueryAttributeBins(e){const{field:t,normalizationType:a,filter:i,signal:r}=e,s=await this._getNormalizationTotal(t,a,i,r),{query:o,min:n,max:l}=await ot(e,this,s,this.createQuery());if(!o)return{bins:[],minValue:n,maxValue:l,normalizationTotal:s};const u=await this.layer.queryAttributeBins(o,{signal:r});return lt(u,t?this.getField(t):null,{minValue:n,maxValue:l,normalizationTotal:s})}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,signal:s}=e,o=de({field:t,normalizationType:a,normalizationField:i}),n=G({field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:this}),l=ne(n,e.minValue,e.maxValue),u=He({field:t,normalizationType:a,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||Pe}),c=new O({classificationDefinition:u});return c.where=x(o,l),this.generateRenderer(c,s).then(d=>Xe(d,e.classificationMethod))}async summaryStatistics(e){const{field:t,fields:a,normalizationType:i,valueExpression:r,sqlExpression:s,view:o,features:n,useFeaturesInView:l}=e,u=t?this.getField(t):null,c=L(u)||$(u),d=r&&!(s&&this.supportsSQLExpression),m=this._hasLocalSource||n||l,f=o&&o.type==="3d";if(a?.length){const y={...e,fields:a};if(!this.layer.capabilities?.operations?.supportsQueryPivot)return await this._summaryStatsForFields(y);try{return await this._summaryStatsUsingQueryPivot(y)}catch{return await this._summaryStatsForFields(y)}}if(m||d)return d||n||l||f||this._hasLocalSource&&!this.layer.capabilities.query.supportsStatistics?this._summaryStatsFromMemory(e,u):this._summaryStatsFromClientQuery(e,u);if(!this.supportsSQLExpression&&(c||s||i==="natural-log"||i==="square-root"))throw new p(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(i&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,u)).catch(()=>(z(e.signal),this._summaryStatsFromMemory(e,u)))}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,useFeaturesInView:r,signal:s}=e,o=t&&!(a&&this.supportsSQLExpression),n=this._hasLocalSource||i||r||o,l=e.view,u=l&&l.type==="3d",c=await pe(e,this);return n?o||i||r||u||this._hasLocalSource&&!this.layer.capabilities.query.supportsStatistics?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c):this._uvFromServiceQuery(e,c).catch(d=>(z(s),!e.field||e.field2||e.field3||e.filter?d:this._uvFromGenRenderer(e,c[0]))).catch(()=>(z(s),u?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c)))}async histogram(e){const{field:t,normalizationType:a,normalizationField:i,classificationMethod:r,view:s,filter:o,signal:n}=e,l=t?this.getField(t):null,u=L(l)||$(l),c=e.valueExpression||e.sqlExpression,d=e.valueExpression&&!(e.sqlExpression&&this.supportsSQLExpression),m=this._hasLocalSource||e.features||e.useFeaturesInView||d,f=this.supportsSQLExpression,y=!r||r==="equal-interval",h=e.minValue,v=e.maxValue,w=h!=null&&v!=null,q=e.numBins||D;if(e.fields?.length){if(!f)throw new p(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");if(!this.layer.capabilities?.operations?.supportsQueryPivot)throw new p(`${this.adapterName}:not-supported`,"Layer does not support pivot queries");return this._histogramForFields(e)}if(m)return this._histogramFromMemory(e);if(this.layer.capabilities?.operations?.supportsQueryBins&&e.useQueryAttributeBins)try{return await this._histogramFromQueryAttributeBins(e)}catch{return z(n),this._histogramFromQueryAttributeBinsFromMemory(e)}if((c||f)&&y){if(!f&&(c||a==="natural-log"||a==="square-root"))throw new p(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(u&&y)throw new p(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return a||!y?Se(e,this).then(V=>{if(!w)return te(this,V,t,q,s,o,n);if(h>V.max||v<V.min)throw new p(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(y)return te(this,{min:h,max:v,sqlExpr:V.sqlExpr,excludeZerosExpr:V.excludeZerosExpr},t,q,s,o,n);{const _={field:t,normalizationType:a,normalizationField:i,normalizationTotal:V.normTotal,layer:this},K=G(_),Y=ne(K,h,v);return Se(e,this,Y).then(ye=>te(this,ye,t,q,s,o,n))}}):this._histogramForField(e)}async classBreaks(e){const t=e.analyzeData!==!1,a=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;return t&&a?this._classBreaksFromMemory(e):(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch(()=>(z(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){if(this._hasLocalSource)throw new p(`${this.adapterName}:not-supported`,"Layer does not support count query");const t=this.layer,a=t.createQuery();return a.where=x(a.where,e.whereClause),E(a,e.filter),t.queryFeatureCount(a,{signal:e.signal})}async generateRenderer(e,t){const a=this.layer;if(this._hasLocalSource||a.version<10.1)throw new p(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const i=a.createQuery();return e.where=x(e.where,i.where),Ht(a.parsedUrl?.path??"",{source:a.dynamicDataSource??void 0,gdbVersion:a.gdbVersion??void 0},e,{signal:t})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new p(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:a,signal:i,filter:r}=e,s=$e(t),o=Kt(t),n=a&&this._hasLocalSource?await this._uvFromMemory({valueExpression:s,view:a,signal:i,filter:r}):await this._uvFromServiceQuery({sqlExpression:o.expression,valueExpression:s,signal:i,filter:r});return Ne(n.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,requiredFields:i,returnGeometry:r,filter:s,signal:o}=e,n=e.sampleSize;if(n==null||n===0)return[];const l=this.layer.createQuery(),u=1,c=t==="json";l.outSpatialReference=a?.spatialReference,l.returnGeometry=!!r,l.outFields=i,E(l,s);let d=[],m=!1;if(a)try{const f=await a.whenLayerView(this.layer);if(m=!ce(this,i,f).length,m){if(n>=1&&!e.filter&&"getSampleFeatures"in f){await this._waitForLayerViewUpdate(f);const y=await f.getSampleFeatures({minFeatureCount:n,sampleSize:n});if(y!=null)return c?y:y.map(h=>Te.fromJSON(h))}if(d=await this._fetchFeaturesFromMemory(f,l,o,t),d.length>=n&&n>0)return j(d,n,u)}}catch{z(o)}try{if(this._hasLocalSource)return m?d:c?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o);const f=await this.queryFeatureCount({view:a,filter:s,signal:o}),y=this.layer.capabilities.query.maxRecordCount;let h=n===-1?f:n;if(h=y&&h>y?y:h,f<=d.length||d.length>=y)return d;if(l.maxAllowableOffset=e.resolution||(a?a.extent.width/a.width/a.scale:Ct(this.layer.spatialReference))*ga,f<=h)return c?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o);if(f<=Re){const v=this.layer.createQuery();E(v,s);const w=await this.layer.queryObjectIds();return l.objectIds=j(w,h,u),c?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o)}return this.layer.capabilities?.query?.supportsPagination&&(l.num=Math.min(h,Re)),c?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o)}catch{return z(o),d}}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.capabilities?.query?.supportsSqlExpression,this._hasLocalSource=a.type==="parquet"||!a.url&&!!a.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=X.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};function De(e,t,a){const i=[],r=t.length;return t.forEach((s,o)=>{const[n,l]=s;let u=null;u=o!==0||a?o!==r-1||a?x(`${e} >= ${n}`,`${e} ${o===r-1?" <= ":" < "} ${l}`):`${e} >= ${n}`:`${e} < ${l}`,i.push("WHEN ("+u+") THEN "+(o+1))}),["CASE",i.join(" "),"ELSE 0","END"].join(" ")}g([F({readOnly:!0})],S.prototype,"adapterName",void 0),g([F({constructOnly:!0})],S.prototype,"layer",void 0),S=g([N("esri.smartMapping.support.adapters.FeatureLayerAdapter")],S);let ae=class extends S{constructor(){super(...arguments),this.adapterName="csv-layer-adapter"}async _createGenerateRendererResult(t,a,i,r,s){const o=t?.features;if(!o?.length)throw new p("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const l=H(o);let u=null;if(r==="percent-of-total"&&(u=(await this.workerClient.summaryStatistics({field:a},l)).sum,u==null))throw new p("csv-layer-adapter:invalid","invalid normalizationTotal");if(s?.type==="class-breaks-definition"){const d=(await Me({field:a,normalizationType:r,normalizationField:i,normalizationTotal:u},l)).filter(m=>Number.isFinite(m));return Ot({definition:s,values:d,normalizationTotal:u})}const c=(await Me({field:a},l)).filter(d=>d!=null&&typeof d=="string"&&d.trim()!=="");return kt(c)}generateRenderer(t,a){const i=t.classificationDefinition;let r=null,s=null,o=null;i?.type==="class-breaks-definition"?(r=i.classificationField,s=i.normalizationField,o=i.normalizationType):r=i?.attributeField;const n=this.layer;return Q({field:r,normalizationField:s}).then(l=>{const u=n.createQuery();return u.returnGeometry=!1,u.outFields=l,u.where=x(u.where,t.where),n.queryFeatures(u,{signal:a}).then(c=>this._createGenerateRendererResult(c,r,s,o,i))})}load(t){const a=this.layer.load(t).then(async i=>{this.geometryType=i.geometryType,this.objectIdField=i.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=X.getInstance(),await this.workerClient.open(t.signal)});return this.addResolvingPromise(a),Promise.resolve(this)}};g([F({readOnly:!0})],ae.prototype,"adapterName",void 0),ae=g([N("esri.smartMapping.support.adapters.CSVLayerAdapter")],ae);let ie=class extends S{constructor(){super(...arguments),this.adapterName="feature-layer-binning-adapter"}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:s,query:o}=t,n={include:["sum"]},l=(!i&&!r&&s&&"queryAggregateSummaryStatistics"in s?await s.queryAggregateSummaryStatistics(o,{field:e,outStatisticTypes:n},{signal:a}):i?await this.workerClient.summaryStatistics({field:e},i):await J({attribute:{field:e,outStatisticTypes:n},features:r})).sum;if(l==null)throw new p(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t?.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:s,field3:o,normalizationField:n,valueExpression:l,returnGeometry:u,layerViewFunc:c,signal:d}=e;let m=null,f=null,y=null,h=null,v=null;if(i)try{if(m=await i.whenLayerView(this.layer),Ue(m),f=c!=null&&c in m&&typeof m[c]=="function",f){await this._waitForLayerViewUpdate(m);const w=await Q({field:r,field2:s,field3:o,normalizationField:n,valueExpression:l});Ae(this,w).length?f=!1:(y="createAggregateQuery"in m?m.createAggregateQuery():null,y?(y.outFields=w,y.returnGeometry=!1,E(y,a)):f=!1),m.suspended&&(f=!1)}}catch{f=!1}if(!f&&(v=Oe(this.layer).map(w=>w.toJSON()),h=await this._fetchFeaturesForStats({field:r,field2:s,field3:o,valueExpression:l,normalizationField:n,returnGeometry:u,filter:a,view:i,signal:d},"json"),!h?.length))throw new p(`${this.adapterName}:insufficient-data`,"No features are available to calculate statistics");return{layerView:m,query:y,featuresJSON:h,fieldInfos:v}}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:s,signal:o}=e,n={field:i,valueExpression:r,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:c,query:d,fieldInfos:m}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateSummaryStatistics"});return r&&a&&(l||u)&&(n.fieldType=t?.type?ze.toJSON(t.type):null,n.viewInfoParams=b(a),n.timeZone=a.timeZone,n.fieldInfos=m),s==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:l,graphics:u,layerView:c,query:d},o)),!l&&!u&&c&&"queryAggregateSummaryStatistics"in c?c.queryAggregateSummaryStatistics(d,n,{signal:o}):l?this.workerClient.summaryStatistics(n,l):J({attribute:n,features:u})}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:s,signal:o}=e,{featuresJSON:n,graphics:l,layerView:u,query:c,fieldInfos:d}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateUniqueValues"}),m={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:B,valueExpression:r,domains:t,returnAllCodedValues:s};return r&&a&&(n||l)&&(m.viewInfoParams=b(a),m.timeZone=a.timeZone,m.fieldInfos=d),!n&&!l&&u&&"queryAggregateUniqueValues"in u?u.queryAggregateUniqueValues(c,m,{signal:o}):n?this.workerClient.uniqueValues(m,n):Ee({attribute:m,features:l})}async _histogramFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:o,layerView:n,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateHistogram"}),c={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&t&&(s||o)&&(c.viewInfoParams=b(t),c.timeZone=t.timeZone,c.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(c.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:o,layerView:n,query:l},r)),!s&&!o&&n&&"queryAggregateHistogram"in n?n.queryAggregateHistogram(l,c,{signal:r}):s?this.workerClient.histogram(c,s):ue({attribute:c,features:o})}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:o,layerView:n,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateClassBreaks"}),c={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(s||o)&&(c.viewInfoParams=b(t),c.timeZone=t.timeZone,c.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(c.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:o,layerView:n,query:l},r)),!s&&!o&&n&&"queryAggregateClassBreaks"in n?n.queryAggregateClassBreaks(l,c,{signal:r}):s?this.workerClient.classBreaks(c,s):be({attribute:c,features:o})}getField(e=""){return Oe(this.layer)?.find(a=>a.name.toLowerCase()===e?.toLowerCase())}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null}getFieldDomain(e,t){return null}async summaryStatistics(e){const{field:t}=e,a=t?this.getField(t):null,i=L(a)||$(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new p(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(e,a)}async uniqueValues(e){const t=await pe(e,this);return this._uvFromMemory(e,t)}async histogram(e){const{field:t}=e,a=t?this.getField(t):null,i=L(a)||$(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new p(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._histogramFromMemory(e)}async classBreaks(e){return(e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)).catch(()=>(z(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){const t=await e.view?.whenLayerView(this.layer);if(!t||!("queryAggregateCount"in t)||!t.queryAggregateCount)throw new p(`${this.adapterName}:not-supported`,"LayerView is not supported.");await this._waitForLayerViewUpdate(t);const a=t.createAggregateQuery();return a.where=x(a.where,e.whereClause),E(a,e.filter),t.queryAggregateCount(a,{signal:e.signal})}generateRenderer(e,t){throw new p(`${this.adapterName}:not-supported`,"'generateRenderer' is not supported.")}heatmapStatistics(e){throw new p(`${this.adapterName}:not-supported`,"'heatmapStatistics' is not supported.")}async predominantCategories(e){const{fields:t,view:a,signal:i}=e,r=$e(t),s=await this._uvFromMemory({valueExpression:r,view:a,signal:i});return Ne(s.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,filter:o,signal:n}=e;if(!a)throw new p(`${this.adapterName}:not-supported`,"'view' is required to get sample features for binning.");if(a.type==="3d")throw new p(`${this.adapterName}:not-supported`,"3d 'view' is not supported to get sample features for binning.");const l=await a.whenLayerView(this.layer);if(!("queryAggregateJSON"in l&&l.queryAggregateJSON&&"queryAggregates"in l&&l.queryAggregates))throw new p(`${this.adapterName}:not-supported`,"LayerView is not supported.");if(await this._waitForLayerViewUpdate(l),Ae(this,r).length)throw new p(`${this.adapterName}:insufficient-data`,"Layer does not have required fields");const u=1,c=t==="json",d=l.createAggregateQuery();d.outSpatialReference=a?.spatialReference,d.returnGeometry=!!s,d.outFields=r,E(d,o);const{features:m}=c?await l.queryAggregateJSON(d,{signal:n}):await l.queryAggregates(d,{signal:n});return m.length&&i!=null&&i>0&&i<=m.length?j(m,i,u):m}load(e){const t=this.layer.load(e).then(async a=>{const i="featureReduction"in a?a.featureReduction:null;if(i?.type!=="binning"&&i?.type!=="cluster")throw new p(`${this.adapterName}:invalid-parameters`,`Feature reduction type ${i?.type} is not supported`);this.geometryType=i?.type==="cluster"?"point":"polygon",this.objectIdField=null,this.supportsSQLExpression=!1,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=X.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};g([F({readOnly:!0})],ie.prototype,"adapterName",void 0),ie=g([N("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],ie);const wa=ie;let R=class extends T{constructor(e){super(e),this._featureLayerAdapter=null,this.workerClient=null,this.adapterName="scene-layer-adapter"}destroy(){this.workerClient?.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!e||!a.length)return e;const i=this.layer.objectIdField,r=e.clone(),s=t.filter(n=>{const l=this.layer.getField(n);return!a.includes(l.name)}),o=s.some(n=>this.layer.getField(n).name===i);return r.outFields=o?s:[...s,i],r}async _fetchFeaturesFromMemory(e,t,a){if(!e)throw new p("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=await e.whenLayerView(this.layer),r=new AbortController,s=r.signal,o=Fe(()=>!i.updating,s);await Ge(o,5e3,r);const n=ce(this,a,i);z(s);const l=this._updateQuery(t,a??[],n),u=await i.queryFeatures(l,{signal:s});z(s);const c=u.features;return n.length?i.whenGraphicAttributes(c,n):c}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(H)}_fetchFeaturesForStats(e,t){return Q({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t))}async _processStatsFromMemoryParams(e){const t=e.features;if(t?.length)return t.length&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic"?{graphics:t}:{featuresJSON:t};const{view:a,field:i,normalizationField:r,valueExpression:s,signal:o}=e,n=await this._fetchFeaturesForStats({field:i,valueExpression:s,normalizationField:r,view:a,signal:o},null);if(!n?.length)throw new p("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:n}}_getCachedStatistics(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new p("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):a.queryCachedStatistics(t?.name,{signal:e.signal}).then(i=>{const r=i.stats,{min:s,max:o,totalValuesCount:n}=r;let{avg:l,stddev:u,sum:c,variance:d,count:m}=r;return s===0&&o===0||(l=l===0?null:l,c=c===0?null:c,u=u===0?null:u,d=d===0?null:d,m=m===0?null:m),m==null&&(c!=null&&l!=null?m=Math.round(c/l):n!=null&&(m=n)),{avg:l,count:m,max:o,min:s,stddev:u,sum:c,variance:d}})}async _getNormalizationTotal(e,t,a){const i={include:["sum"]},r=(t?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:i},t):await J({attribute:{field:e,outStatisticTypes:i},features:a})).sum;if(r==null)throw new p("scene-layer-adapter:invalid","invalid normalizationTotal");return r}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:i,normalizationField:r,valueExpression:s}=e,{featuresJSON:o,graphics:n}=await this._processStatsFromMemoryParams(e),l={field:i,valueExpression:s,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes};return e.valueExpression&&a&&o&&(l.fieldType=t?.type?ze.toJSON(t.type):null,l.viewInfoParams=b(a),l.timeZone=a.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(l.normalizationTotal=await this._getNormalizationTotal(i,o,n)),o?this.workerClient.summaryStatistics(l,o):J({attribute:l,features:n})}_getCachedStatisticsForUniqueValues(e,t){const a=this.layer,i=t?.name,r=t&&e.field?this.getFieldDomain(e.field):null;return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new p("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):a.queryCachedStatistics(i,{signal:e.signal}).then(s=>{const o=s.stats;if(!o.mostFrequentValues)throw new Error;const n=s.labels?.labels,l={},u=[],c="countOF"+i;o.mostFrequentValues.forEach(m=>{const f=new Te({attributes:{}});f.attributes[i]=t&&t.name!==a.objectIdField&&(Ze(t)||L(t))?Number(m.value):m.value,f.attributes[c]=m.count,u.push(f)}),n&&n.forEach(m=>{l[m.value]=m.label});const d=new Ve({features:u});return Le(d,{layer:this,field:e.field,labels:l,view:e.view,signal:e.signal})}).then(s=>le(s,[r],e.returnAllCodedValues))}async _getUniqueValuesFromMemory(e,t){const{view:a,field:i,field2:r,field3:s,valueExpression:o,returnAllCodedValues:n}=e,l={field:i,field2:r,field3:s,fieldDelimiter:B,valueExpression:o,domains:t,returnAllCodedValues:n},{featuresJSON:u,graphics:c}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&u&&(l.viewInfoParams=b(a),l.timeZone=a.timeZone),u?this.workerClient.uniqueValues(l,u):Ee({attribute:l,features:c})}_getCachedStatisticsForHistogram(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new p("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):a.queryCachedStatistics(t&&t.name,{signal:e.signal}).then(i=>{const r=i.stats,{minValue:s,maxValue:o}=e,n=s??r.min,l=o??r.max,u=e.numBins||10,c=Fa(r.histogram,n,l,u);return ve(c,n,l,u)})}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:i,valueExpression:r}=e,{featuresJSON:s,graphics:o}=await this._processStatsFromMemoryParams(e),n={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&s&&(n.viewInfoParams=b(t),n.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotal(a,s,o)),s?this.workerClient.classBreaks(n,s):be({attribute:n,features:o})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:i,graphics:r}=await this._processStatsFromMemoryParams(e),s={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&i&&(s.viewInfoParams=b(t),s.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotal(a,i,r)),i?this.workerClient.histogram(s,i):ue({attribute:s,features:r})}getField(e){return this.layer.getField(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}createQuery(){return this.layer.createQuery()}summaryStatistics(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.summaryStatistics(e);if(e.filter)throw new p("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t?.name)?this._getCachedStatistics(e,t).catch(()=>(z(e.signal),this._getSummaryStatisticsFromMemory(e,t))):this._getSummaryStatisticsFromMemory(e,t)}async uniqueValues(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.uniqueValues(e);if(e.filter)throw new p("scene-layer-adapter:not-supported","filter is not supported");const t=await pe(e,this),{field:a,field2:i}=e,r=a&&i,s=this.getField(a);return!r&&s&&this._hasCachedStatistics(s.name)?this._getCachedStatisticsForUniqueValues(e,s).catch(()=>(z(e.signal),this._getUniqueValuesFromMemory(e,t))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.histogram(e);if(e.filter)throw new p("scene-layer-adapter:not-supported","filter is not supported");return t&&this._hasCachedStatistics(t.name)?this._getCachedStatisticsForHistogram(e,t).catch(()=>(z(e.signal),this._getHistogramFromMemory(e))):this._getHistogramFromMemory(e)}classBreaks(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.classBreaks(e);if(e.filter)throw new p("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t?.name)?Promise.reject(new p("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new p("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,t):Promise.reject(new p("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new p("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new p("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){if(e.filter)throw new p("scene-layer-adapter:not-supported","filter is not supported");const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,signal:o}=e,n=1,l=t==="json",u=this.createQuery();u.outFields=r,u.returnGeometry=!!s,u.where=null,u.num=i;let c=[];try{if(c=l?await this._fetchFeaturesJSONFromMemory(a,u,r):await this._fetchFeaturesFromMemory(a,u,r),c.length&&i!=null&&i>0&&i<=c.length)return j(c,i,n)}catch{z(o)}let d=null;if(this._featureLayerAdapter){const m={...e};delete m.view,d=await this._featureLayerAdapter.getSampleFeatures(m,t)}return d?.length?d:j(c,c.length,n)}load(e){const t=this.layer.load(e).then(async a=>{this.workerClient=X.getInstance(),await this.workerClient.open(e.signal);const i=a.associatedLayer;if(this.geometryType=a.geometryType,i!=null)return this._featureLayerAdapter=new S({layer:i}),this._featureLayerAdapter.load(e).then(()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent});this.objectIdField=a.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=a.fullExtent});return this.addResolvingPromise(t),Promise.resolve(this)}};function Fa(e,t=e.minimum,a=e.maximum,i){const r=[];for(let u=0;u<i;u++)r[u]=0;const s=e.counts.length,o=e.minimum,n=e.maximum;for(let u=0;u<s;u++){const c=(u+.5)/s,d=((1-c)*o+c*n-t)/(a-t)*i;d>=0&&d<=i&&(r[d===i?i-1:Math.floor(d)]+=e.counts[u])}const l=[];return r.forEach((u,c)=>{const d=new Te({attributes:{}});d.attributes.EXPR_1=c+1,d.attributes.countOFExpr=u,l.push(d)}),new Ve({features:l})}g([F({readOnly:!0})],R.prototype,"adapterName",void 0),g([F({constructOnly:!0})],R.prototype,"layer",void 0),R=g([N("esri.smartMapping.support.adapters.SceneLayerAdapter")],R);let re=class extends R{constructor(e){super(e),this.adapterName="point-cloud-layer-adapter"}getField(e){return this.layer.fieldsIndex.get(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then(()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1});return this.addResolvingPromise(t),Promise.resolve(this)}};g([F({readOnly:!0})],re.prototype,"adapterName",void 0),re=g([N("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],re);let se=class extends k{constructor(){super(...arguments),this.adapterName="stream-layer-adapter"}async _summaryStatsFromClientQuery(e,t){const{signal:a,view:i}=e,r=fe(this,e,t);r.outStatistics=r.outStatistics?.filter(n=>n.outStatisticFieldName!=="totalcount_value");const s=await this._fetchFeatureSetFromMemory(r,i,a),o=me(s,L(t)||$(t));return I(o,e.outStatisticTypes)}};g([F({readOnly:!0})],se.prototype,"adapterName",void 0),se=g([N("esri.smartMapping.support.adapters.StreamLayerAdapter")],se);const qe={0:{adapter:S,type:"catalog",label:"CatalogLayer"},1:{adapter:S,type:"catalog-footprint",label:"CatalogFootprintLayer"},2:{adapter:ae,type:"csv",label:"CSVLayer"},3:{adapter:S,type:"feature",label:"FeatureLayer"},5:{adapter:S,type:"imagery",label:"ImageryLayer"},4:{adapter:S,type:"geojson",label:"GeoJSONLayer"},6:{adapter:S,type:"knowledge-graph-sublayer",label:"KnowledgeGraphSublayer"},7:{adapter:k,type:"ogc-feature",label:"OGCFeatureLayer"},8:{adapter:S,type:"oriented-imagery",label:"OrientedImageryLayer"},9:{adapter:S,type:"parquet",label:"ParquetLayer"},10:{adapter:re,type:"point-cloud",label:"PointCloudLayer"},11:{adapter:R,type:"scene",label:"SceneLayer"},12:{adapter:se,type:"stream",label:"StreamLayer"},13:{adapter:S,type:"subtype-group",label:"SubtypeGroupLayer"},14:{adapter:S,type:"subtype-sublayer",label:"SubtypeSublayer"},15:{adapter:S,type:"wfs",label:"WFSLayer"}},Ce=[0,1,2,3,4,6,7,8,9,10,11,12,13,14,15],va=[2,3,4,7,6,8,9,12,15];function Sa(e){return e.map(t=>qe[t].label)}function xa(e,t=Ce,a){if(e instanceof T)return e;const i=qa(e,t);return i?a?new wa({layer:e}):new i({layer:e}):null}function qa(e,t=Ce){let a=null;return t.some(i=>{const r=e.type===qe[i].type;return r&&(a=qe[i].adapter),r}),a}async function Va(e){if(!e?.layer||!e.field&&!e.valueExpression)throw new p("unique-values:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");const t=e.valueExpression||e.sqlExpression,a=t&&!e.sqlExpression;if(t){if(a){if(!e.view)throw new p("unique-values:missing-parameters","View is required when 'valueExpression' is specified")}else if(!e.valueExpression)throw new p("unique-values:missing-parameters","'valueExpression' parameters are required")}e.forBinning&&Jt(e,"unique-values");const{layer:i,...r}=e,s=[...Ce,5],o=e.forBinning?va:s,n=xa(i,o,e.forBinning);if(!n)throw new p("unique-values:invalid-parameters","'layer' must be one of these types: "+Sa(o).join(", "));const l={layerAdapter:n,...r},u=l.signal!=null?{signal:l.signal}:null;await n.load(u);const c=await Q({field:l.field,field2:l.field2,field3:l.field3,valueExpression:l.valueExpression}),d=Mt(n,c,"unique-values:invalid-parameters");if(d)throw d;l.filter&&!l.filter.spatialRelationship&&(l.filter.spatialRelationship="intersects");const m=It(l.filter,"summary-statistics:invalid-parameters");if(m)throw m;return l}async function ka(e){const{layerAdapter:t,...a}=await Va(e);return t.uniqueValues(a)}export{ka as default};
