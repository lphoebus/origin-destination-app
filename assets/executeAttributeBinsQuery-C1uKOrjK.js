import{dj as f,co as c,hl as y,bH as S,bP as g,hq as m,gM as R,c1 as p,eG as d}from"./index-Bkom2Sdc.js";import{i as q}from"./AttributeBinsFeatureSet-BsDhvskh.js";import x from"./AttributeBinsQuery-DrwEkP8m.js";import"./queryUtils-CyiURm7K.js";import"./FixedIntervalBinParameters-9QRDBkMs.js";function J(i){const e=i.geometry,n=i.toJSON(),t=n;let r,a,o;if(e!=null&&(a=e.spatialReference,o=m(a),t.geometryType=R(e),t.geometry=JSON.stringify(e),t.inSR=o),n.outSR?(t.outSR=m(n.outSR),r=i.outSpatialReference):e&&(t.outSR=t.inSR,r=a),t.bin&&=JSON.stringify(t.bin),t.quantizationParameters&&=JSON.stringify(t.quantizationParameters),t.outStatistics&&=JSON.stringify(t.outStatistics),t.outTimeReference&&=JSON.stringify(t.outTimeReference),n.timeExtent){const s=n.timeExtent,{start:u,end:l}=s;u==null&&l==null||(t.time=u===l?u:`${u??"null"},${l??"null"}`),delete n.timeExtent}return i.defaultSpatialReference&&p(a,r)&&(t.defaultSR=t.inSR,delete t.inSR,delete t.outSR),t}async function N(i,e,n){return e.timeExtent!=null&&e.timeExtent.isEmpty?{data:{features:[]}}:await O(i,e,n)}async function O(i,e,n={}){const t=typeof i=="string"?f(i):i,r=e.geometry?[e.geometry]:[],a=await c(r,null,{signal:n.signal}),o=a?.[0];o!=null&&((e=e.clone()).geometry=o);const s=y({...t.query,f:"json",...J(e)});return S(g(t.path,"queryBins"),{...n,query:{...s,...n.query}})}async function h(i,e,n){const{data:t}=await N(d(i),x.from(e),n);return q.fromJSON(t)}export{h as executeAttributeBinsQuery};
