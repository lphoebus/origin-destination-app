import{eN as O,eO as R,eP as j,b7 as C,eQ as A,da as G,be as S,eR as V,eS as Y,eT as v,eU as D,ay as E,eV as P}from"./index-C2z3vZ9k.js";import{m as U,B as _}from"./utils-D9T8729Q.js";let f=null;const L=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function k(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function K(e,t,n,i){const s=A(n)?G(n):null,o=s?Math.round((s.valid[1]-s.valid[0])/t.scale[0]):null;return e.map((l=>{const a=new S(l.geometry);return V(t,a,a),l.geometry=s?k(a,o??0,i[0]):a,l}))}function W(e,t=18,n,i,s){const o=new Float64Array(i*s);t=Math.round(P(t));let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const N=Y(n);for(const{geometry:p,attributes:$}of e){const{x:g,y:c}=p,w=Math.max(0,g-t),F=Math.max(0,c-t),M=Math.min(s,c+t),x=Math.min(i,g+t),h=+N($);for(let d=F;d<M;d++)for(let m=w;m<x;m++){const b=d*i+m,I=D(m-g,d-c,t)*h,u=o[b]+=I;l=Math.min(l,u),a=Math.max(a,u)}}return{min:l,max:a}}function q(e){const t=L.exec(e);if(!t)return null;const{hh:n,mm:i,ss:s,ms:o}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(s)*v.seconds+Number(o||0)}async function X(e,t,n=!0){if(!t)return[];const{field:i,field2:s,field3:o,fieldDelimiter:l,fieldInfos:a,timeZone:N}=e,p=i&&(a==null?void 0:a.find((u=>u.name.toLowerCase()===i.toLowerCase()))),$=!!p&&O(p),g=!!p&&R(p),c=e.valueExpression,w=e.normalizationType,F=e.normalizationField,M=e.normalizationTotal,x=[],h=e.viewInfoParams;let d=null,m=null;if(c){if(!f){const{arcadeUtils:u}=await j();f=u}f.hasGeometryOperations(c)&&await f.enableGeometryOperations(),d=f.createFunction(c),m=h?f.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new C(h.spatialReference)}):null}const b=e.fieldInfos,I=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&b?{fields:b}:null;return t.forEach((u=>{const y=u.attributes;let r;if(c){const T=I?{...u,layer:I}:u,z=f.createExecContext(T,m,N);r=f.executeFunction(d,z)}else y&&(r=y[i],s?(r=`${U(r)}${l}${U(y[s])}`,o&&(r=`${r}${l}${U(y[o])}`)):typeof r=="string"&&n&&(g?r=r?new Date(r).getTime():null:$&&(r=r?q(r):null)));if(w&&typeof r=="number"&&isFinite(r)){const T=y&&parseFloat(y[F]);r=_(r,w,T,M)}x.push(r)})),x}function ee(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let s;return n==="field"?s="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(s=`(${t} > 0)`),s}function te(e,t,n){const i=t!=null?e+" >= "+t:"",s=n!=null?e+" <= "+n:"";let o="";return o=i&&s?B(i,s):i||s,o?"("+o+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function ne(e,t){if(e&&e.spatialRelationship!=="intersects")return new E(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function ie(e,t,n){const i=Q({layer:e,fields:t});if(i.length)return new E(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const s=Z({layer:e,fields:t});return s.length?new E(n,"Unsupported fields: "+s.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function Q(e){const t=e.layer;return e.fields.filter((n=>!t.getField(n)))}function Z(e){const t=e.layer;return e.fields.filter((n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics}))}export{ee as F,q as I,ne as M,te as N,ie as T,B as U,X as b,W as w,K as x};
