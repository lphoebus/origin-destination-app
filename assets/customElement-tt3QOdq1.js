import{L as D,a as L,d as A,N as R,s as x,n as $,x as V,i as K,b as k}from"./index-C2z3vZ9k.js";import{i as z}from"./keyed-BknSWaOu.js";import{c as m,n as h,b as c,i as p,u as d,v as f,w as P,o as w,r as N,O as H,x as U}from"./utils4-Caci1xZm.js";import"./global-DteFDqGz.js";/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.2.1 */const C={container:"container",hexInput:"hex-input",opacityInput:"opacity-input"},G=K`:host{display:block}.container{display:flex;inline-size:100%;flex-wrap:nowrap;align-items:center}.hex-input{flex-grow:1;text-transform:uppercase}.opacity-input{inline-size:100px;margin-inline-start:-1px}:host([hidden]){display:none}[hidden]{display:none}`,y=m(),I=class I extends D{constructor(){super(...arguments),this.internalColor=y,this.alphaChannel=!1,this.allowEmpty=!1,this.hexLabel="Hex",this.scale="m",this.value=h(c(y,this.alphaChannel),this.alphaChannel,!0),this.calciteColorPickerHexInputChange=L({cancelable:!1})}async setFocus(){return await A(this),R(this.hexInputNode)}connectedCallback(){super.connectedCallback(),this.previousNonNullValue=this.value;const{allowEmpty:t,alphaChannel:n,value:a}=this;if(a){const e=h(a,n);p(e,n)&&this.internalSetValue(e,e,!1);return}t&&this.internalSetValue(void 0,void 0,!1)}willUpdate(t){t.has("value")&&(this.hasUpdated||this.value!==h(c(y,this.alphaChannel),this.alphaChannel,!0))&&this.internalSetValue(this.value,t.get("value"),!1)}onHexInputBlur(){const t=this.hexInputNode,n=t.value,a=`#${n}`,{allowEmpty:e,internalColor:l}=this,s=e&&!n,i=d(a);(f(a,!0)||f(a,!1))&&this.onHexInputChange(),!(s||p(a)&&i)&&(t.value=e&&!l?"":this.formatHexForInternalInput(P(l.object())))}onOpacityInputBlur(){const t=this.opacityInputNode,n=t.value,{allowEmpty:a,internalColor:e}=this;a&&!n||(t.value=a&&!e?"":this.formatOpacityForInternalInput(e))}onOpacityInputInput(){this.onOpacityInputChange()}onHexInputChange(){let n=this.hexInputNode.value;if(n){const a=h(n,!1);if(p(a)&&this.alphaChannel&&this.internalColor){const l=h(this.internalColor.hexa(),!0).slice(-2);n=`${a+l}`}}this.internalSetValue(n,this.value)}onOpacityInputChange(){var a;const t=this.opacityInputNode;let n;if(!t.value)n=t.value;else{const e=w(Number(t.value));n=(a=this.internalColor)==null?void 0:a.alpha(e).hexa()}this.internalSetValue(n,this.value)}onInputFocus(t){t.type==="calciteInternalInputTextFocus"?this.hexInputNode.selectText():this.opacityInputNode.selectText()}onHexInputInput(){const t=`#${this.hexInputNode.value}`,n=this.value;p(t,this.alphaChannel)&&d(t,this.alphaChannel)&&this.internalSetValue(t,n)}onInputKeyDown(t){const{altKey:n,ctrlKey:a,metaKey:e,shiftKey:l}=t,{alphaChannel:s,hexInputNode:i,internalColor:o,value:r}=this,{key:u}=t,g=t.composedPath();if(u==="Tab"&&f(r,this.alphaChannel)||u==="Enter"){g.includes(i)?this.onHexInputChange():this.onOpacityInputChange(),u==="Enter"&&t.preventDefault();return}const S=u==="ArrowDown"||u==="ArrowUp",b=this.value;if(S){if(!r){this.internalSetValue(this.previousNonNullValue,b),t.preventDefault();return}const T=u==="ArrowUp"?1:-1,B=l?10:1;this.internalSetValue(c(this.nudgeRGBChannels(o,B*T,g.includes(i)?"rgb":"a"),s),b),t.preventDefault();return}const O=n||a||e,E=u.length===1,F=U.test(u);E&&!O&&!F&&t.preventDefault()}onHexInputPaste(t){const n=t.clipboardData.getData("text");p(n,this.alphaChannel)&&d(n,this.alphaChannel)&&(t.preventDefault(),this.hexInputNode.value=n.slice(1),this.internalSetValue(n,this.value))}internalSetValue(t,n,a=!0){if(t){const{alphaChannel:e}=this,l=h(t,e,e);if(p(l,e)){const{internalColor:s}=this,i=m(l),o=h(c(i,e),e),r=!s||o!==h(c(s,e),e);this.internalColor=i,this.previousNonNullValue=o,this.value=o,r&&a&&this.calciteColorPickerHexInputChange.emit();return}}else if(this.allowEmpty){this.internalColor=void 0,this.value=void 0,a&&this.calciteColorPickerHexInputChange.emit();return}this.value=n}storeHexInputRef(t){this.hexInputNode=t}storeOpacityInputRef(t){this.opacityInputNode=t}formatHexForInternalInput(t){return t?t.replace("#","").slice(0,6):""}formatOpacityForInternalInput(t){return t?`${N(t.alpha())}`:""}nudgeRGBChannels(t,n,a){let e;const l=t.array(),s=l.slice(0,3);if(a==="rgb")e=[...s.map(o=>o+n),this.alphaChannel?l[3]:void 0];else{const i=w(N(t.alpha())+n);e=[...s,i]}return m(e)}render(){const{alphaChannel:t,hexLabel:n,internalColor:a,messages:e,scale:l,value:s}=this,i=this.formatHexForInternalInput(s),o=this.formatOpacityForInternalInput(a),r=l==="l"?"m":"s";return V`<div class=${x(C.container)}><calcite-input-text class=${x(C.hexInput)} .label=${(e==null?void 0:e.hex)||n} .maxLength=${this.alphaChannel?8:6} @keydown=${this.onInputKeyDown} @paste=${this.onHexInputPaste} @calciteInputTextChange=${this.onHexInputChange} @calciteInputTextInput=${this.onHexInputInput} @calciteInternalInputTextBlur=${this.onHexInputBlur} @calciteInternalInputTextFocus=${this.onInputFocus} prefix-text=# .scale=${r} .value=${i} ${$(this.storeHexInputRef)}></calcite-input-text>${t?z("opacity-input",V`<calcite-input-number class=${x(C.opacityInput)} .label=${e==null?void 0:e.opacity} .max=${H.max} max-length=3 .min=${H.min} number-button-type=none .numberingSystem=${this.numberingSystem} @keydown=${this.onInputKeyDown} @calciteInputNumberInput=${this.onOpacityInputInput} @calciteInternalInputNumberBlur=${this.onOpacityInputBlur} @calciteInternalInputNumberFocus=${this.onInputFocus} .scale=${r} suffix-text=% .value=${o} ${$(this.storeOpacityInputRef)}></calcite-input-number>`):null}</div>`}};I.properties={internalColor:[16,{},{state:!0}],alphaChannel:[5,{},{type:Boolean}],allowEmpty:[5,{},{type:Boolean}],hexLabel:1,messages:[0,{},{attribute:!1}],numberingSystem:1,scale:[3,{},{reflect:!0}],value:[3,{},{reflect:!0}]},I.styles=G;let v=I;k("calcite-color-picker-hex-input",v);export{v as ColorPickerHexInput};
