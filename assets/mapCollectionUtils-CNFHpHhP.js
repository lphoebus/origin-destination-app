import{cn as p,fA as _,g9 as C,ga as v,gb as y,de as b,gc as h,gd as I}from"./index-Bkom2Sdc.js";function w(n,t,s){const o=s?.createCollection?.()??new p,i=s?.recycleItems?new M:null,c=(e,r=0)=>{if(!e?.length)return;const a=o.splice(r,e.length);i?i.processRemoved(e):a.forEach(g)},l=(e,r=0)=>{if(!e?.length)return;const a=[];for(const u of e){const d=i?.use(u);if(d)a.push(d);else{const f=t(u);i?.register(u,f),a.push(f)}}o.addMany(a,r)},m=_(n,"after-splice",({added:e,start:r,removed:a})=>{c(a,r),l(e,r)},{sync:!0,onListenerRemove:e=>c(e.items),onListenerAdd:e=>l(e.items)});return o.addHandles(m),o}class M{constructor(){this._originalToMapped=new Map,this._removedItemCandidates=new Set,this._garbageCollectionQueued=!1}processRemoved(t){if(!t?.length)return;const{_removedItemCandidates:s}=this;for(const o of t)this._getItem(o)?.markRemoved()&&(s.add(o),this._queueGarbageCollection())}use(t){const s=this._getItem(t);return s&&(s.removed=!1),s?.item}register(t,s){this._originalToMapped.set(t,new R(s))}_getItem(t){return this._originalToMapped.get(t)}_queueGarbageCollection(){this._garbageCollectionQueued||(this._garbageCollectionQueued=!0,queueMicrotask(()=>this._garbageCollectCandidates()))}_garbageCollectCandidates(){this._garbageCollectionQueued=!1;const{_removedItemCandidates:t}=this,s=Array.from(t);t.clear(),s.forEach(o=>this._garbageCollectIfRemoved(o))}_garbageCollectIfRemoved(t){const{_originalToMapped:s}=this,o=this._getItem(t);o?.removed&&(g(o.item),s.delete(t))}}class R{constructor(t){this.item=t,this.removed=!1}markRemoved(){return this.removed=!0,!0}}function g(n){typeof n=="object"&&n&&("destroy"in n&&typeof n.destroy=="function"?n.destroy():C(n))}function Q(n,t,s){const o=new p,i=w(n,e=>v(async r=>{const a=await t(e,r);if(y(r))throw g(a),b();return a}),s),c=()=>null,l=async e=>{const r=await e.promise,a=i.indexOf(e);a<0||o.splice(a,1,r)};o.addMany(i.items.map(c));for(const e of i)h(l(e));const m=i.on("after-splice",({added:e,start:r,deleteCount:a})=>{const u=o.splice(r,a);for(const d of u)g(d);if(e?.length){o.addMany(e.map(c),r);for(const d of e)h(l(d))}});return o.addHandles([I(i),m]),o}export{w as c,Q as u};
