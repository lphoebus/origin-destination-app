const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/CatalogLayer-tsfziCJt.js","assets/index-Bkom2Sdc.js","assets/index-CkucmIUh.css","assets/utils-CM17lTaw.js","assets/ClassBreaksDefinition-DLcEIyEO.js","assets/FeatureLayerSource-BXUkLNxp.js","assets/MeshLocalVertexSpace-7X1tyxoy.js","assets/meshVertexSpaceUtils-DtTu-9Nz.js","assets/External-SumGqUUM.js","assets/applyEditsUtils-ZeHzgzgD.js","assets/MeshTransform-BjVAZmOC.js","assets/quat-B12ICwBr.js","assets/quatf64-aQ5IuZRd.js","assets/axisAngleDegrees-CiE1BNcG.js","assets/editingSupport-D_nDe5ru.js","assets/clientSideDefaults-I-4nPcub.js","assets/QueryEngineCapabilities-DJC_YILC.js","assets/QueryTask-CnbIf4V8.js","assets/executeForIds-BzofPlMX.js","assets/featureConversionUtils-nye7QKUe.js","assets/OrientedImageryLayer-XVvvuEZh.js"])))=>i.map(i=>d[i]);
import{bm as m,bn as k,bo as O,b4 as y,bp as B,bq as f,br as K,bs as u,bt as z,bu as H,bv as j,aH as I,bw as q}from"./index-Bkom2Sdc.js";import{i as b}from"./originUtils-CUyL9ZOO.js";import{P as Q,w as g,d as W,v as X,$ as Z,p as N,f as ee,I as x,m as E}from"./utils-B1xfry1O.js";import{n as ae,l as te}from"./fetchService-R3ilQsEp.js";import"./saveUtils-DSRPRt58.js";const T="Feature Service",v="feature-layer-utils",re=`${v}-save`,ne=`${v}-save-as`,p=`${v}-saveall`,d=`${v}-saveall-as`;function S(e){return{isValid:q(e)&&(!("dynamicDataSource"in e)||!e.dynamicDataSource),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}function w(e,a){const t=B(e,"portal-item");return a?.isTable&&(t.layerContainerType="tables"),t}function R(e){const a=w(e),t=w(e);return t.layerContainerType="tables",{forLayers:a,forTables:t}}function D(e){const a=[],t=[];for(const{layer:r,layerJSON:o}of e)se(r)?t.push(o):a.push(o);return{layers:a,tables:t}}function se(e,a){return e.isTable}function J(e){return D([e])}async function C(e,a){return/\/\d+\/?$/.test(e.url)?J(a[0]):G(a,e)}async function G(e,a){if(e.reverse(),!a)return D(e);const t=await oe(a,e);for(const r of e)U(r.layer,r.layerJSON,t);return ce(t,e),t}async function oe(e,a){let t=await e.fetchData("json");if(le(t)&&!K(e,u.HOSTED_SERVICE))return t;t||={},ie(t);const{layer:{url:r,customParameters:o,apiKey:n}}=a[0];return await ue(t,{url:r??"",customParameters:o,apiKey:n},a.map(s=>s.layer.layerId)),t}function le(e){return!!(e&&Array.isArray(e.layers)&&Array.isArray(e.tables))}function ie(e){e.layers||=[],e.tables||=[]}function ce(e,a){const t=[],r=[];for(const{layer:o}of a){const{isTable:n,layerId:s}=o;n?r.push(s):t.push(s)}L(e.layers,t),L(e.tables,r)}function L(e,a){if(e.length<2)return;const t=[];for(const{id:r}of e)t.push(r);H(t.sort(P),a.slice().sort(P))&&e.sort((r,o)=>{const n=a.indexOf(r.id),s=a.indexOf(o.id);return n<s?-1:n>s?1:0})}function P(e,a){return e<a?-1:e>a?1:0}async function ue(e,a,t){const{url:r,customParameters:o,apiKey:n}=a,{serviceJSON:s,layersJSON:l}=await ae(r,{customParameters:o,apiKey:n}),i=_(e.layers,s.layers,t),c=_(e.tables,s.tables,t);e.layers=i.itemResources,e.tables=c.itemResources;const h=[...i.added,...c.added],V=l?[...l.layers,...l.tables]:[];await ye(e,h,r,V)}function _(e,a,t){const r=j(e,a,(n,s)=>n.id===s.id);e=e.filter(n=>!r.removed.some(s=>s.id===n.id));const o=r.added;return o.forEach(({id:n})=>{e.push({id:n})}),{itemResources:e,added:o.filter(({id:n})=>!t.includes(n))}}async function ye(e,a,t,r){const o=await fe(a),n=a.map(({id:s,type:l})=>new(o.get(l))({url:t,layerId:s,sourceJSON:r.find(({id:i})=>i===s)}));await Promise.allSettled(n.map(s=>s.load())),n.forEach(s=>{const{layerId:l,loaded:i,defaultPopupTemplate:c}=s;if(!i||c==null)return;const h={id:l,popupInfo:c.toJSON()};U(s,s.operationalLayerType==="ArcGISFeatureLayer"?h:{...h,layerType:s.operationalLayerType},e)})}async function fe(e){const a=[];e.forEach(({type:o})=>{switch(te(o)){case"CatalogLayer":a.push(I(()=>import("./CatalogLayer-tsfziCJt.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])).then(n=>n.default));break;case"FeatureLayer":a.push(I(()=>import("./index-Bkom2Sdc.js").then(n=>n.zC),__vite__mapDeps([1,2])).then(n=>n.default));break;case"OrientedImageryLayer":a.push(I(()=>import("./OrientedImageryLayer-XVvvuEZh.js"),__vite__mapDeps([20,1,2])).then(n=>n.default))}});const t=await Promise.all(a),r=new Map;return e.forEach(({type:o},n)=>{r.set(o,t[n])}),r}function U(e,a,t){e.isTable?A(t.tables,a):A(t.layers,a)}function A(e,a){const t=e.findIndex(({id:r})=>r===a.id);t===-1?e.push(a):e[t]=a}function F(e,a){if(!e.length)throw new y(`${a}:missing-parameters`,"'layers' array should contain at least one feature layer")}function pe(e,a){const t=e.map(r=>r.portalItem.id);if(new Set(t).size>1)throw new y(`${a}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item")}function M(e,a){const t=e.map(r=>r.layerId);if(new Set(t).size!==t.length)throw new y(`${a}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service")}async function de(e){F(e,p),await Promise.all(e.map(a=>a.load()));for(const a of e)N(a,p,S),ee({layer:a,itemType:T,errorNamePrefix:p});pe(e,p),M(e,p)}function me(e){if(!("layerType"in e))return!!e.charts?.length;switch(e.layerType){case"OrientedImageryLayer":return!!e.charts?.length;case"SubtypeGroupLayer":return!!e.layers.some(a=>!!a.charts?.length);case"SubtypeGroupTable":return!!e.tables.some(a=>!!a.charts?.length);case"CatalogLayer":return!!e.footprintLayer?.charts?.length}}function $(e,a){let t=0,r=0,o=0,n=0;for(const s of[...a.layers,...a.tables])if(me(s)&&n++,"layerType"in s)switch(s.layerType){case"OrientedImageryLayer":t++;break;case"SubtypeGroupLayer":r++;break;case"SubtypeGroupTable":o++}f(e,u.ORIENTED_IMAGERY_LAYER,t>0),f(e,u.SUBTYPE_GROUP_LAYER,r>0),f(e,u.SUBTYPE_GROUP_TABLE,o>0),f(e,u.CHARTS,n>0)}function Y(e,a,t){z(a,u.METADATA),f(a,u.MULTI_LAYER,e.length>1),f(a,u.SINGLE_LAYER,e.length===1),f(a,u.TABLE,t.tables.length>0&&t.layers.length===0),$(a,t)}async function he(e,a,t){$(a,t)}async function be(e,a,t){const{url:r,layerId:o,title:n,fullExtent:s,isTable:l}=e,i=m(r);a.url=(i?.serverType==="FeatureServer"?r:`${r}/${o}`)??null,a.title||=n,a.extent=null,l||s==null||(a.extent=await O(s)),Y([e],a,t)}function we(e,a){for(const n of e){const s=n.parsedUrl.path,l=m(s);if(!l?.url.path)throw new y(`${a}:invalid-parameters`,E(n,`has unsupported url pattern: ${s}`),{layer:n});const c=l?.serverType;if(c!=="FeatureServer"&&c!=="MapServer")throw new y(`${a}:invalid-parameters`,E(n,`has unsupported server type: ${c}`),{layer:n});if(c==="MapServer"&&e.length>1)throw new y(`${a}:invalid-parameters`,"Only one layer or table in a map service can be saved")}const t=m(e[0].parsedUrl.path),r=t?.url.path;if(!e.every(n=>m(n.parsedUrl.path)?.url.path===r))throw new y(`${a}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service")}async function Te(e){F(e,d),await Promise.all(e.map(a=>a.load()));for(const a of e)N(a,d,S);we(e,d),M(e,d)}function ve(e,a){$(e,a),x(e)}async function Se(e,a,t){let r=0;for(const{isTable:s}of e)s||r++;const o=e[0].parsedUrl.path,n=m(o);if(a.url=n?.serverType==="FeatureServer"?n.url.path:o,a.title||=n.title,a.extent=null,r>0){const s=e.map(l=>l.fullExtent).filter(k).reduce((l,i)=>l.clone().union(i));s&&(a.extent=await O(s))}Y(e,a,t),x(a)}async function _e(e,a){return Q({layer:e,itemType:T,validateLayer:S,createJSONContext:t=>w(t,e),createItemData:(t,r)=>C(r,[t]),errorNamePrefix:re,setItemProperties:he},a)}async function Ae(e,a){await de(e);const t=e[0].portalItem,r=R(t),o=await Promise.all(e.map(s=>g(s,s.isTable?r.forTables:r.forLayers,a))),n=await C(t,e.map((s,l)=>({layer:s,layerJSON:o[l]})));return ve(t,n),await t.update({data:n}),await Promise.all(e.slice(1).map(s=>s.portalItem.reload())),b(r.forLayers),b(r.forTables),t.clone()}async function Oe(e,a,t){return Z({layer:e,itemType:T,validateLayer:S,createJSONContext:r=>w(r,e),createItemData:(r,o)=>Promise.resolve(J(r)),errorNamePrefix:ne,newItem:a,setItemProperties:be},t)}async function ge(e,a,t){await Te(e);const r=W({itemType:T,errorNamePrefix:d,newItem:a}),o=R(r),n=await Promise.all(e.map(l=>g(l,l.isTable?o.forTables:o.forLayers,t))),s=await G(e.map((l,i)=>({layer:l,layerJSON:n[i]})));await Se(e,r,s),await X(r,s,t);for(const l of e)l.portalItem=r.clone();return b(o.forLayers),b(o.forTables),r}export{_e as save,Ae as saveAll,ge as saveAllAs,Oe as saveAs};
