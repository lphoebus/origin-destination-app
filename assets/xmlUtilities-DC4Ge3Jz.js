const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/densifyOperator-CsqgPb7b.js","assets/index-C2z3vZ9k.js","assets/index-DaKHjF4b.css","assets/Point2D-l7nV1LsO.js","assets/ProjectionTransformation-BRAx5GYC.js","assets/Envelope2D-CLx0zf4a.js","assets/Transformation2D-CVTPK6Pf.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/OperatorDefinitions-DP7_WWTp.js","assets/jsonConverter-BvPb5ebA.js","assets/apiConverter-COA75KDK.js","assets/differenceOperator-7J50u6R_.js","assets/lengthOperator-BgEhknFu.js"])))=>i.map(i=>d[i]);
import{bv as Pe,dT as Z,mT as ge,b5 as ie,d7 as ne,be as B,aZ as j,ay as N,aR as Re,hg as Fe,b7 as Ie,cA as De,mU as Be,bb as g,bc as I,gJ as be,bd as oe,eb as Ce,al as Y,d9 as $e,h6 as Je,cr as ze,dF as He,da as Me}from"./index-C2z3vZ9k.js";import{r as V,g as we,N as Ne,i as Ee,a as Oe,p as Se,f as We,d as ce,w as Le,v as Ae,h as qe}from"./rasterFieldUtils-8FBWYX_U.js";import{u as Ge,N as ue,p as Ve,l as je,c as Ue,j as Qe,W as he,h as Xe,a as Ze,b as Ye,q as Ke,D as et,z as tt,B as me,t as it,i as fe}from"./RasterJobHandlerMixin-BvcPsI_9.js";import{j as nt,l as rt,h as st,_ as at,a as ot}from"./RasterSymbolizer-yBAeRvh9.js";import{QueueProcessor as lt}from"./QueueProcessor-BcSu0-3Q.js";import{i as ct,m as ut,h as ht,x as mt,s as ft}from"./RawBlockCache-4JaVFecA.js";import{T as ee,D as ve,j as dt,u as pt,l as yt}from"./dataUtils-0RHTvcdC.js";import{e as Q,v as re,A as de,u as pe,f as xt,o as te,Q as X,s as gt,i as Rt,_ as It,V as se}from"./rasterProjectionHelper-BadGIF5p.js";import{r as ae,p as bt}from"./clipUtils-BvllJZeO.js";import{T as wt}from"./rasterFunctionHelper-DfjBovTR.js";const ye=8,St=256;let vt=0,v=class extends Pe{constructor(){super(...arguments),this._tileFetchQueue=new lt({concurrency:32,process:(t,i)=>this._fetchRawTile(t.pyramidLevel,t.row,t.col,{...t.options,signal:i})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}normalizeCtorArgs(t){return t!=null&&t.ioConfig&&(t={...t,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:Z.create(),...t.ioConfig}}),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,i=Q(t.spatialReference);return i!=null&&t.extent.width>=i/2}get _hasNoneOrGCSShiftTransform(){const{transform:t}=this.rasterInfo;return t==null||t.type==="gcs-shift"}set rasterJobHandler(t){var i,s;this._set("rasterJobHandler",t),V(this)&&((s=(i=this.primaryRasters)==null?void 0:i.rasters)==null||s.forEach((e=>e.rasterJobHandler=t)))}get rasterId(){return this.url||"rasterId-"+vt++}set url(t){this._set("url",ge(t,ie.getLogger(this)))}async open(t){return this._openPromise??(this._openPromise=re().then((()=>this._open(t)))),this._openPromise}async fetchTile(t,i,s,e={}){const n=e.tileInfo||this.rasterInfo.storageInfo.tileInfo,a=this.getTileExtentFromTileInfo(t,i,s,n);return e={noClip:!0,...e},this.fetchPixels(a,n.size[0],n.size[1],e)}async identify(t,i={}){var z;t=ne(B,t).clone().normalize();const{multidimensionalDefinition:s,timeExtent:e}=i,{rasterInfo:n}=this,{hasMultidimensionalTranspose:a,multidimensionalInfo:r}=n;let{transposedVariableName:o}=i;const c=r!=null&&a&&(e!=null||we(s));c&&!o&&(o=s!=null&&s.length>0?s[0].variableName??void 0:r.variables[0].name,i={...i,transposedVariableName:o}),i=this._getRequestOptionsWithSliceId(i);const{spatialReference:l,extent:u}=n,{datumTransformation:h}=i;let f=de(t,l,h);if(!u.intersects(f))return{location:f,value:null};if(n.transform!=null){const C=n.transform.inverseTransform(f);if(!n.nativeExtent.intersects(C))return{location:C,value:null};f=C}let p=0;const y=o!=null&&r!=null&&n.hasMultidimensionalTranspose;if(V(this)){const C=this.primaryRasters.rasters[0];if(y)return C.identify(f,i);const{pixelSize:H}=n,_=3,E=H.x*_/2,O=H.y*_/2,W=new j({xmin:f.x-E,xmax:f.x+E,ymin:f.y-O,ymax:f.y+O,spatialReference:l}),P={interpolation:"nearest",multidimensionalDefinition:s,sliceId:i.sliceId},{pixelBlock:T}=await C.fetchPixels(W,_,_,P),{pixelBlock:k}=await this.fetchPixels(W,_,_,P);if(T==null)return{location:f,value:null};const F=Math.floor(_*_*.5),L=!T.mask||T.mask[F]?T.pixels.map((D=>D[F])):null;let $;return k!=null&&($=!k.mask||k.mask[F]?k.pixels.map((D=>D[F])):void 0),{location:f,value:L,processedValue:$,pyramidLevel:0}}if(!y){if(i.srcResolution)p=pe(i.srcResolution,n,this.ioConfig.sampling).pyramidLevel;else if(p=await this.computeBestPyramidLevelForLocation(t,i),p==null)return{location:f,value:null}}const x=this.identifyPixelLocation(f,p,null,y);if(x===null)return{location:f,value:null};const{row:d,col:m,rowOffset:R,colOffset:b,blockWidth:S}=x,w=await this._tileFetchQueue.push({pyramidLevel:p,row:d,col:m,options:i},{signal:i.signal});if(!((z=w==null?void 0:w.pixels)!=null&&z.length))return{location:f,value:null};const J=R*S+b;return this._processIdentifyResult(w,{srcLocation:f,position:J,pyramidLevel:p,useTransposedTile:!!y,requestSomeSlices:c,identifyOptions:i})}async fetchPixels(t,i,s,e={}){t=xt(t),e=this._getRequestOptionsWithSliceId(e);const{_hasNoneOrGCSShiftTransform:n}=this;if(e.requestRawData&&n)return this._fetchPixels(t,i,s,e);const a=Q(t.spatialReference),r=te(t);if(a==null||r===0||r===1&&this._isGlobalWrappableSource&&n)return this._fetchPixels(t,i,s,e);if(r>=3)return{extent:t,pixelBlock:null};const o=[],{xmin:c,xmax:l}=t,u=Math.round(a/(l-c)*i),h=u-Math.round((a/2-c)/(l-c)*i);let f=0;const p=[];for(let m=0;m<=r;m++){const R=new j({xmin:m===0?c:-a/2,xmax:m===r?l-a*m:a/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),b=m===0?u-h:m===r?i-f:u;f+=b,p.push(b);const S=e.disableWrapAround&&m>0?null:this._fetchPixels(R,b,s,e);o.push(S)}const y=(await Promise.all(o)).map((m=>m==null?void 0:m.pixelBlock));let x=null;const d={width:i,height:s};return this.rasterJobHandler?x=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:y,srcMosaicSize:d,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:p},e)).pixelBlock:x=ee(y,d,{blockWidths:p}),{extent:t,srcExtent:X(t,this.rasterInfo.spatialReference,e.datumTransformation),pixelBlock:x}}async fetchRawPixels(t,i,s,e={}){i={x:Math.floor(i.x),y:Math.floor(i.y)};const n=await this._fetchRawTiles(t,i,s,e),{nativeExtent:a,nativePixelSize:r,storageInfo:o}=this.rasterInfo,c=2**t,l=r.x*c,u=r.y*c,h=new j({xmin:a.xmin+l*i.x,xmax:a.xmin+l*(i.x+s.width-1),ymin:a.ymax-u*(i.y+s.height-1),ymax:a.ymax-u*i.y,spatialReference:a.spatialReference});if(!n)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:p}=n;if(f.length===1&&f[0]!=null&&f[0].width===s.width&&f[0].height===s.height)return{extent:h,srcExtent:h,pixelBlock:n.pixelBlocks[0]};const y=t>0?o.pyramidBlockWidth:o.blockWidth,x=t>0?o.pyramidBlockHeight:o.blockHeight,d={x:i.x%y,y:i.y%x};let m;return this.rasterJobHandler?m=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:p,destDimension:s,clipOffset:d,clipSize:s,coefs:null,sampleSpacing:null,interpolation:e.interpolation,alignmentInfo:null,blockWidths:null},e)).pixelBlock:m=ee(f,p,{clipOffset:d,clipSize:s}),{extent:h,srcExtent:h,pixelBlock:m}}fetchRawTile(t,i,s,e){throw new N("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return X(this.rasterInfo.extent,t)}decodePixelBlock(t,i){return!this.rasterJobHandler||i.useCanvas?nt(t,i):this.rasterJobHandler.decode({data:t,options:i})}async request(t,i,s=0){const{customFetchParameters:e}=this.ioConfig,{range:n,query:a,headers:r}=i;s=s??i.retryCount??this.ioConfig.retryCount;const o=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await Re(t,{...i,query:{...a,...e},headers:{...r,...o}})}catch(c){if(s>0)return s--,this.request(t,i,s);throw c}}getSliceIndex(t){const{multidimensionalInfo:i}=this.rasterInfo;return i==null||t==null||t.length===0?null:Ne(t,i)}getTileExtentFromTileInfo(t,i,s,e){const n=e.lodAt(t);return this.getTileExtent({x:n.resolution,y:n.resolution},i,s,e.origin,e.spatialReference,e.size)}updateTileInfo(){const{storageInfo:t,spatialReference:i,extent:s,pixelSize:e}=this.rasterInfo,{pyramidResolutions:n}=t;if(!t.tileInfo){const a=[],r=t.maximumPyramidLevel||0;let o=(e.x+e.y)/2,c=1/.0254*96*o;for(let u=0;u<=r&&(a.unshift(new Fe({level:r-u,resolution:o,scale:c})),u!==r);u++)if(n){const h=(n[u].x+n[u].y)/2;c*=h/o,o=h}else o*=2,c*=2;const l=new B({x:s.xmin,y:s.ymax,spatialReference:i});t.tileInfo=new Z({origin:l,size:[t.blockWidth,t.blockHeight],spatialReference:i,lods:a}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,i=512,s=512,e){const{width:n,height:a,nativeExtent:r,pixelSize:o,spatialReference:c}=t,l=new B({x:r.xmin,y:r.ymax,spatialReference:c});e==null&&(e=Math.max(0,Math.round(Math.log(Math.max(n,a))/Math.LN2-8)));const u=this.computeBlockBoundary(r,512,512,{x:r.xmin,y:r.ymax},[o],e);t.storageInfo=new rt({blockWidth:i,blockHeight:s,pyramidBlockWidth:i,pyramidBlockHeight:s,origin:l,firstPyramidLevel:1,maximumPyramidLevel:e,blockBoundary:u})}async computeBestPyramidLevelForLocation(t,i={}){return 0}computeBlockBoundary(t,i,s,e,n,a=0,r=2){if(n.length===1&&a>0){n=[...n];let{x:u,y:h}=n[0];for(let f=0;f<a;f++)u*=r,h*=r,n.push({x:u,y:h})}const o=[],{x:c,y:l}=e;for(let u=0;u<n.length;u++){const{x:h,y:f}=n[u];o.push({minCol:Math.floor((t.xmin-c+.1*h)/i/h),maxCol:Math.floor((t.xmax-c-.1*h)/i/h),minRow:Math.floor((l-t.ymax+.1*f)/s/f),maxRow:Math.floor((l-t.ymin-.1*f)/s/f)})}return o}getPyramidPixelSize(t){const{nativePixelSize:i}=this.rasterInfo,{pyramidResolutions:s,pyramidScalingFactor:e}=this.rasterInfo.storageInfo;if(t===0)return i;if(s!=null&&s.length)return s[t-1];const n=e**t;return{x:i.x*n,y:i.y*n}}identifyPixelLocation(t,i,s,e){const{spatialReference:n,nativeExtent:a,storageInfo:r}=this.rasterInfo,{maximumPyramidLevel:o,origin:c,transposeInfo:l}=r,u=e&&l!=null?l.tileSize[0]:r.blockWidth,h=e&&l!=null?l.tileSize[1]:r.blockHeight,f=de(t,n,s);if(!a.intersects(f)||i<0||i>o)return null;const p=this.getPyramidPixelSize(i),{x:y,y:x}=p,d=(c.y-f.y)/x/h,m=(f.x-c.x)/y/u,R=Math.min(h-1,Math.floor((d-Math.floor(d))*h)),b=Math.min(u-1,Math.floor((m-Math.floor(m))*u));return{pyramidLevel:i,row:Math.floor(d),col:Math.floor(m),rowOffset:R,colOffset:b,blockWidth:u,srcLocation:f}}getTileExtent(t,i,s,e,n,a){const[r,o]=a,c=e.x+s*r*t.x,l=c+r*t.x,u=e.y-i*o*t.y,h=u-o*t.y;return new j({xmin:c,xmax:l,ymin:h,ymax:u,spatialReference:n})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,i,s){const e=this.rasterInfo.storageInfo.blockBoundary[t];return!e||e.maxRow<i||e.maxCol<s||e.minRow>i||e.minCol>s}updateImageSpaceRasterInfo(t){const{pixelSize:i}=t,{width:s,height:e}=t,n=Ie.WebMercator;t.spatialReference=n,t.extent=t.nativeExtent=new j({xmin:-.5,ymax:.5,xmax:s-.5,ymin:.5-e,spatialReference:n}),t.isPseudoSpatialReference=!0,t.transform=null,t.pixelSize=new B({x:1,y:1,spatialReference:n});const{extent:a,storageInfo:r}=t;if(r){r.origin=new B({x:a.xmin,y:a.ymax,spatialReference:n});const{pyramidResolutions:o,tileInfo:c}=r;if(o&&o.forEach((l=>{l.x/=i.x,l.y/=i.y})),c){c.origin=r.origin;const l=(t.nativePixelSize.x+t.nativePixelSize.y)/2;c.lods.forEach(((u,h)=>{u.resolution=l*2**h,u.scale=96*u.resolution/.0254}))}}}async _fetchPixels(t,i,s,e={}){let n=te(t);if(n>=2)return{extent:t,pixelBlock:null};const a=this._getSourceDataInfo(t,i,s,e),{pyramidLevel:r,srcResolution:o,srcExtent:c,srcWidth:l,srcHeight:u,ul:h}=a;if(l===0||u===0)return{extent:t,srcExtent:c,pixelBlock:null};const{rasterInfo:f}=this,p=f.transform,y=(p==null?void 0:p.type)==="gcs-shift",x=Q(t.spatialReference)!=null;!y&&x||(n=te(a.srcExtent,y));const d=await this._fetchRawTiles(r,h,{width:l,height:u,wrapCount:n},e);if(!d)return{extent:t,srcExtent:c,pixelBlock:null};const m=f.storageInfo,R=r>0?m.pyramidBlockWidth:m.blockWidth,b=r>0?m.pyramidBlockHeight:m.blockHeight;let{x:S,y:w}=f.pixelSize;if(r>0){const{pyramidResolutions:M,pyramidScalingFactor:ke}=m;if(M!=null&&M[r-1])({x:S,y:w}=M[r-1]);else{const le=ke**r;S*=le,w*=le}}const J=f.spatialReference,z=new B({x:S,y:w,spatialReference:J}),C=R===l&&b===u&&h.x%R===0&&h.y%b===0,H=new B({x:(t.xmax-t.xmin)/i,y:(t.ymax-t.ymin)/s,spatialReference:t.spatialReference}),_=!t.spatialReference.equals(J),E=J.isGeographic?1e-9:1e-4,{datumTransformation:O}=e;if(!_&&C&&d.pixelBlocks.length===1&&R===i&&b===s&&_t(o,H,E))return{extent:t,srcExtent:c,srcTilePixelSize:z,pixelBlock:d.pixelBlocks[0]};const W=x&&Q(c.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,P=e.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");P&&!this.rasterJobHandler&&await re();const T=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:d.extent,pixelSize:H.toJSON(),datumTransformation:O,rasterTransform:p,hasWrapAround:n>0||W,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:P},e):gt({projectedExtent:t,srcBufferExtent:d.extent,pixelSize:H,datumTransformation:O,rasterTransform:p,hasWrapAround:n>0||W,isAdaptive:!1,includeGCSGrid:P});let k;const F=!e.requestRawData,L={rows:T.spacing[0],cols:T.spacing[1]},$=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(r,d.extent.xmin):void 0,{pixelBlocks:D,mosaicSize:A,isPartiallyFilled:U}=d;let q=null;if(this.rasterJobHandler)({pixelBlock:k,localNorthDirections:q}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:D,srcMosaicSize:A,destDimension:F?{width:i,height:s}:null,coefs:F?T.coefficients:null,sampleSpacing:F?L:null,projectDirections:P,gcsGrid:P?T.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:e.interpolation,alignmentInfo:$,blockWidths:null},e));else{const M=ee(D,A,{alignmentInfo:$});k=F?ve(M,{width:i,height:s},T.coefficients,L,e.interpolation):M,P&&T.gcsGrid&&(q=dt({width:i,height:s},T.gcsGrid),k=pt(k,this.rasterInfo.dataType,q))}return e.requestRawData||P?{extent:t,srcExtent:c,srcTilePixelSize:z,pixelBlock:k,transformGrid:T,localNorthDirections:q,isPartiallyFilled:U}:{extent:t,srcExtent:c,srcTilePixelSize:z,pixelBlock:k}}async _fetchRawTiles(t,i,s,e){const{origin:n,blockBoundary:a}=this.rasterInfo.storageInfo,{blockWidth:r,blockHeight:o}=this.getBlockWidthHeight(t);let{x:c,y:l}=i,{width:u,height:h,wrapCount:f}=s;const p=this._getRasterTileAlignmentInfo(t,0);e.buffer&&(c-=e.buffer.cols,l-=e.buffer.rows,u+=2*e.buffer.cols,h+=2*e.buffer.rows);let y=0,x=0,d=0;f&&p!=null&&({worldColumnCountFromOrigin:x,originColumnOffset:d,rightPadding:y}=p,x*p.blockWidth-y>=c+u&&(y=0));const m=Math.floor(c/r),R=Math.floor(l/o),b=Math.floor((c+u+y-1)/r),S=Math.floor((l+h+y-1)/o),w=a[t];if(!w)return null;const{minRow:J,minCol:z,maxCol:C,maxRow:H}=w;if(f===0&&(S<J||b<z||R>H||m>C))return null;const _=new Array;let E=!1;const O=this.ioConfig.allowPartialFill==null?e.allowPartialFill:this.ioConfig.allowPartialFill;for(let $=R;$<=S;$++)for(let D=m;D<=b;D++){let A=D;if(!e.disableWrapAround&&f&&p!=null&&x<=D&&(A=D-x-d),$>=J&&A>=z&&H>=$&&C>=A){const U=this._tileFetchQueue.push({pyramidLevel:t,row:$,col:A,options:e},{signal:e.signal});O?_.push(new Promise((q=>{U.then((M=>q(M))).catch((()=>{E=!0,q(null)}))}))):_.push(U)}else _.push(Promise.resolve(null))}if(_.length===0)return null;const W=await Promise.all(_),P={height:(S-R+1)*o,width:(b-m+1)*r},{spatialReference:T}=this.rasterInfo,k=this.getPyramidPixelSize(t),{x:F,y:L}=k;return{extent:new j({xmin:n.x+m*r*F,xmax:n.x+(b+1)*r*F,ymin:n.y-(S+1)*o*L,ymax:n.y-R*o*L,spatialReference:T}),pixelBlocks:W,mosaicSize:P,isPartiallyFilled:E}}_fetchRawTile(t,i,s,e){const{storageInfo:n}=this.rasterInfo,a=n.transposeInfo!=null&&!!e.transposedVariableName;if(!a){const h=n.blockBoundary[t];if(!h)return Promise.resolve(null);const{minRow:f,minCol:p,maxCol:y,maxRow:x}=h;if(i<f||s<p||i>x||s>y)return Promise.resolve(null)}const r=a?e.transposeVariableName:e.sliceId,o=this.rasterInfo.storageInfo.isBsqTile?e.bandIds:null,c=ct(this.rasterId,r,o),l=`${t}/${i}/${s}`;let u=ut(c,e.registryId,l);if(u==null){const h=new AbortController;u=this.fetchRawTile(t,i,s,{...e,signal:h.signal}),ht(c,e.registryId,l,u,h),u.catch((()=>mt(c,e.registryId,l)))}return e.signal&&De(e,(()=>{ft(c,e.registryId,l)})),u}_computeMagDirValues(t){var c;const{bandCount:i,dataType:s}=this.rasterInfo;if(!(i===2&&s==="vector-magdir"||s==="vector-uv")||(t==null?void 0:t.length)!==2||!((c=t[0])!=null&&c.length))return null;const e=t[0].length;if(s==="vector-magdir"){const l=t[1].map((u=>(u+360)%360));return[t[0],l]}const[n,a]=t,r=[],o=[];for(let l=0;l<e;l++){const[u,h]=yt([n[l],a[l]]);r.push(u),o.push(h)}return[r,o]}_getRasterTileAlignmentInfo(t,i){return this._rasterTileAlignmentInfo==null&&(this._rasterTileAlignmentInfo=Rt(this.rasterInfo)),this._rasterTileAlignmentInfo.pyramidsInfo==null?null:{startX:i,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[t]}}_getSourceDataInfo(t,i,s,e={}){const n={datumTransformation:e.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};e.srcResolution&&(n.srcResolution=e.srcResolution,this._updateSourceDataInfo(t,n));const a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:r,srcHeight:o,pyramidLevel:c}=n,l=r/i,u=o/s,h=c<a&&l*u>=16,f=c===a&&this._requireTooManySrcTiles(r,o,i,s);if(h||f||r===0||o===0){const p=new B({x:(t.xmax-t.xmin)/i,y:(t.ymax-t.ymin)/s,spatialReference:t.spatialReference});let y=It(p,this.rasterInfo.spatialReference,t,n.datumTransformation);const x=!y||e.srcResolution&&y.x+y.y<e.srcResolution.x+e.srcResolution.y;if(h&&e.srcResolution&&x){const d=Math.round(Math.log(Math.max(l,u))/Math.LN2)-1;if(a-c+3>=d){const m=2**d;y={x:e.srcResolution.x*m,y:e.srcResolution.y*m}}}y&&(n.srcResolution=y,this._updateSourceDataInfo(t,n))}return this._requireTooManySrcTiles(n.srcWidth,n.srcHeight,i,s)&&(n.srcWidth=0,n.srcHeight=0),n}_requireTooManySrcTiles(t,i,s,e){const{tileInfo:n}=this.rasterInfo.storageInfo,a=Math.ceil(t/n.size[0])*Math.ceil(i/n.size[1]),r=t/s,o=i/e,c=Math.max(1,(s+e)/1024);return a>=St*c||r>ye||o>ye}_updateSourceDataInfo(t,i){i.srcWidth=0,i.srcHeight=0;const{rasterInfo:s}=this,e=s.spatialReference,{srcResolution:n,datumTransformation:a}=i,{pyramidLevel:r,pyramidResolution:o,excessiveReading:c}=pe(n,s,this.ioConfig.sampling);if(c)return;let l=i.srcExtent||X(t,e,a);if(l==null)return;const u=s.transform;u&&(l=u.inverseTransform(l)),i.srcExtent=l;const{x:h,y:f}=s.storageInfo.origin,p=Math.floor((l.xmin-h)/o.x+.1),y=Math.floor((f-l.ymax)/o.y+.1),x=Math.floor((l.xmax-h)/o.x-.1),d=Math.floor((f-l.ymin)/o.y-.1),m=l.width<.1*o.x?0:x-p+1,R=l.height<.1*o.y?0:d-y+1;i.pyramidLevel=r,i.pyramidResolution=o,i.srcWidth=m,i.srcHeight=R,i.ul={x:p,y}}_getRequestOptionsWithSliceId(t){return this.rasterInfo.multidimensionalInfo!=null&&t.sliceId==null&&(t={...t,sliceId:this.getSliceIndex(t.multidimensionalDefinition)}),t}_processIdentifyResult(t,i){const{srcLocation:s,position:e,pyramidLevel:n,useTransposedTile:a}=i,r=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[e]))return{location:s,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(o==null||!a){const d=t.pixels.map((b=>b[e])),m={location:s,value:d,pyramidLevel:n},R=this._computeMagDirValues(d.map((b=>[b])));return R!=null&&R.length&&(m.magdirValue=R.map((b=>b[0]))),m}let c=t.pixels.map((d=>d.slice(e*r,e*r+r))),l=this._computeMagDirValues(c);const{requestSomeSlices:u,identifyOptions:h}=i;let f=Ee(o,h.transposedVariableName);if(u){const d=Oe(f,h.multidimensionalDefinition,h.timeExtent);c=c.map((m=>d.map((R=>m[R])))),l=l==null?void 0:l.map((m=>d.map((R=>m[R])))),f=d.map((m=>f[m]))}const p=t.noDataValues||this.rasterInfo.noDataValue,y={pixels:c,pixelType:t.pixelType};let x;return p!=null&&(Be(y,p),x=y.mask),{location:s,value:null,dataSeries:f.map(((d,m)=>{const R={value:(x==null?void 0:x[m])===0?null:c.map((b=>b[m])),multidimensionalDefinition:d.multidimensionalDefinition.map((b=>new Se({...b,isSlice:!0})))};return l!=null&&l.length&&(R.magdirValue=[l[0][m],l[1][m]]),R})),pyramidLevel:n}}};function _t(t,i,s){return Math.abs(t.x-i.x)<s&&Math.abs(t.y-i.y)<s}g([I()],v.prototype,"_rasterTileAlignmentInfo",void 0),g([I()],v.prototype,"_tileFetchQueue",void 0),g([I({readOnly:!0})],v.prototype,"_isGlobalWrappableSource",null),g([I({readOnly:!0})],v.prototype,"_hasNoneOrGCSShiftTransform",null),g([I()],v.prototype,"_openPromise",void 0),g([I()],v.prototype,"rasterJobHandler",null),g([I({readOnly:!0})],v.prototype,"rasterId",null),g([I(be)],v.prototype,"url",null),g([I({type:String,json:{write:!0}})],v.prototype,"datasetName",void 0),g([I({type:String,json:{write:!0}})],v.prototype,"datasetFormat",void 0),g([I()],v.prototype,"hasUniqueSourceStorageInfo",void 0),g([I()],v.prototype,"rasterInfo",void 0),g([I()],v.prototype,"ioConfig",void 0),g([I()],v.prototype,"sourceJSON",void 0),v=g([oe("esri.layers.support.rasterDatasets.BaseRaster")],v);const Tt=40;let G=class extends v{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}async fetchPixels(t,i,s,e={}){var b,S;const{rasters:n,rasterIds:a}=this.primaryRasters;let r=!1;const{interpolation:o}=e,c=(b=this.rasterFunction.flatWebGLFunctionChain)==null?void 0:b.hasFocalFunction;!e.requestRawData&&c&&(r=n.length===1&&!e.skipRasterFunction,e={...e,interpolation:"bilinear",requestRawData:r});const l=n.map((w=>w.fetchPixels(t,i,s,e))),u=await Promise.all(l),h=u.map((w=>w.pixelBlock)),f=r||e.requestRawData?u.map((w=>w.srcTilePixelSize)):null;if(e.skipRasterFunction||h.every((w=>w==null)))return u[0];const p=((S=u.find((w=>w.pixelBlock!=null)))==null?void 0:S.extent)??t;let y=this.rasterJobHandler?await this.rasterJobHandler.process({extent:p,primaryPixelBlocks:h,primaryPixelSizes:f,primaryRasterIds:a}):this.rasterFunction.process({extent:p,primaryPixelBlocks:h,primaryPixelSizes:f,primaryRasterIds:a});const{transformGrid:x}=u[0];if(!r||y==null||x==null){const w=e.noClip?null:this.getClippingGeometry(p.spatialReference);return e.noClip||e.requestRawData||y==null||!w||(y=await ae(y,p,w)),{...u[0],pixelBlock:y}}const d={rows:x.spacing[0],cols:x.spacing[1]};let m;this.rasterJobHandler?m=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[y],srcMosaicSize:{width:y.width,height:y.height},destDimension:{width:i,height:s},coefs:x.coefficients,sampleSpacing:d,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:o,alignmentInfo:void 0,blockWidths:null},e)).pixelBlock:m=ve(y,{width:i,height:s},x.coefficients,d,o);const R=e.noClip?null:this.getClippingGeometry(t.spatialReference);return e.noClip||e.requestRawData||m==null||R==null||(m=await ae(m,t,R)),{extent:t,srcExtent:u[0].srcExtent,pixelBlock:m}}getClippingGeometry(t){const i=this._clippingGeometry.get("0");if(!t||!i)return i;const s=Pt(t);let e=this._clippingGeometry.get(s);return e!=null||(e=t.equals(i.spatialReference)?i:se(i,t),this._clippingGeometry.set(s,e)),e}async _open(t){var l,u,h,f;const{rasterFunction:i}=this;i.isRoot=!0,(u=(l=this.primaryRasters)==null?void 0:l.rasters)!=null&&u.length?i.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=i.getPrimaryRasters(),this.rasterJobHandler&&((h=this.primaryRasters.rasters)==null||h.forEach((p=>p.rasterJobHandler=this.rasterJobHandler))));const{rasters:s,rasterIds:e}=this.primaryRasters,n=s.map((p=>p.rasterInfo?void 0:p.open(t)));await Promise.all(n);const a=s.map((({rasterInfo:p})=>p)),r=i.bind({rasterInfos:a,rasterIds:e});if(i.rawSourceRasterInfos=a,!r.success||a.length===0)throw new N("raster-function:open",`cannot bind the function: ${r.error??""}`);const o=i.functionName==="Table"?i:(f=i.functionArguments)==null?void 0:f.raster;(o==null?void 0:o.functionName)==="Table"&&(i.rasterInfo.attributeTable=Ce.fromJSON(o.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const c=a[0];this.hasUniqueSourceStorageInfo=a.length===1||a.slice(1).every((p=>kt(p,c))),this.set("sourceJSON",s[0].sourceJSON),this.set("rasterInfo",i.rasterInfo),await this._updateClipGeometry()}async syncJobHandler(){var t;return(t=this.rasterJobHandler)==null?void 0:t.updateRasterFunction(this.rasterFunction)}async _updateClipGeometry(){const t=this.rasterFunction.getClippingGeometries()[0];let i=t==null?void 0:t.clippingGeometry;if(i&&t.clippingType==="inside"){const{extent:s}=this.rasterInfo,e=await Y(()=>import("./densifyOperator-CsqgPb7b.js").then(r=>r.d),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10])),n=await Y(()=>import("./differenceOperator-7J50u6R_.js").then(r=>r.d),__vite__mapDeps([11,3,4,5,6,7,1,2,8,9,10]));let a=e.execute($e.fromExtent(s),2*(s.width+s.height)/Tt);a=se(a,i.spatialReference),i=n.execute(a,i)}this._clippingGeometry.clear(),i&&this._clippingGeometry.set("0",i)}};function kt(t,i){const{storageInfo:s,pixelSize:e,spatialReference:n,extent:a}=t,{storageInfo:r,pixelSize:o,spatialReference:c,extent:l}=i;return e.x===o.x&&e.y===o.y&&n.equals(c)&&a.equals(l)&&s.blockHeight===r.blockHeight&&s.blockWidth===r.blockWidth&&s.maximumPyramidLevel===r.maximumPyramidLevel}function Pt(t){return String(t.wkid??t.wkt??t.wkt2)}g([I({type:String,json:{write:!0}})],G.prototype,"datasetFormat",void 0),g([I()],G.prototype,"tileType",void 0),g([I()],G.prototype,"rasterFunction",void 0),g([I()],G.prototype,"primaryRasters",void 0),G=g([oe("esri.layers.support.rasterDatasets.FunctionRaster")],G);const xe=1e3,Ot=t=>{let i=class extends t{constructor(...e){var n;super(...e),this._isConstructedFromFunctionRaster=!1,this.bandIds=null,this.copyright=null,this.interpolation=null,this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=V((n=e[0])==null?void 0:n.raster)}destroy(){this._shutdownJobHandler()}get fullExtent(){var e;return(e=this.serviceRasterInfo)==null?void 0:e.extent}set multidimensionalDefinition(e){this._set("multidimensionalDefinition",e),this.updateRenderer()}set rasterFunction(e){var n;((n=e==null?void 0:e.functionName)==null?void 0:n.toLowerCase())==="none"&&(e=void 0),this._set("rasterFunction",e),this.updateRasterFunction()}set url(e){this._set("url",ge(e,ie.getLogger(this)))}get renderer(){if(this.type!=="imagery-tile")return this.internalRenderer;const{activePresetRendererName:e,presetRenderers:n}=this;if(e){const a=n==null?void 0:n.find((({name:r})=>r===e));return a==null?void 0:a.renderer.clone()}return this.internalRenderer}set renderer(e){this.type==="imagery-tile"&&(this.activePresetRendererName=null),this.internalRenderer=e}set internalRenderer(e){e==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("internalRenderer",e),this.updateRenderer())}readRenderer(e,n,a){var o,c;const r=(c=(o=n==null?void 0:n.layerDefinition)==null?void 0:o.drawingInfo)==null?void 0:c.renderer;return Ue(r,a)||void 0}async computeStatisticsHistograms(e,n){await this.load(n),e=ne(Qe,e).clone();const{serviceRasterInfo:a}=this;if(a==null)throw new N("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");const{geometry:r}=e;if(r==null)throw new N("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let o=r;const{spatialReference:c}=a;if(!r.spatialReference.equals(c)){await re();const d=r.type==="extent"?X(r,c):se(r,c);if(d==null)throw new N("imagery-tile-mixin:compute-statistics-histograms","geometry cannot be projected to the data source");o=d}const l=e.pixelSize??new B({x:a.pixelSize.x,y:a.pixelSize.y,spatialReference:c}),{extent:u,width:h,height:f}=bt(a,o,l),p=await this.fetchPixels(u,h,f,{...n,interpolation:"nearest"});if(p.pixelBlock==null)throw new N("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const y=await ae(p.pixelBlock,u,o),x=this._rasterJobHandler;return x?x.computeStatisticsHistograms({pixelBlock:y},n):st(y)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:n}=this.serviceRasterInfo??{};if(n==null)return e;const a=We({rasterInfo:this.raster.rasterInfo,multidimensionalDefinition:e.multidimensionalDefinition||this.multidimensionalDefinition,timeExtent:e.timeExtent??this.timeExtent,multidimensionalSubset:this.multidimensionalSubset});return{...e,multidimensionalDefinition:a,timeExtent:void 0}}async updateRasterFunction(){var e;return this.loaded&&this.type==="imagery-tile"&&(this.rasterFunction||this._cachedRasterFunctionJson)&&JSON.stringify(this.rasterFunction)!==JSON.stringify(this._cachedRasterFunctionJson)?(this._cachedRasterFunctionJson=(e=this.rasterFunction)==null?void 0:e.toJSON(),this._rasterFunctionUpdatePromise=this._updateRasterFunction(),this._rasterFunctionUpdatePromise):this._rasterFunctionUpdatePromise}async updateRenderer(){const{loaded:e,symbolizer:n,renderer:a}=this;if(!e||!n||!a)return;const{rasterInfo:r}=this.raster,o=ce(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),c=o==null?void 0:o.name,l=he(r,c);return this._updateSymbolizer(n,a,c,l)}async applyRenderer(e,n,a){const r=e==null?void 0:e.pixelBlock;if(!(r!=null&&r.pixels&&r.pixels.length>0))return null;await this.updateRenderer();const o=this.bandIds??[],{pixelBlock:c}=await this._symbolize({pixelData:e,simpleStretchParams:n,bandIds:o,symbolizer:this.symbolizer},a);return c}getTileUrl(e,n,a){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${e}/${n}/${a}`:""}getCompatibleTileInfo(e,n,a=!1){if(!this.loaded||n==null)return null;if(a&&e.equals(this.spatialReference))return this.tileInfo;const r=Me(e);return Z.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:n.xmin,y:n.ymax}})}getCompatibleFullExtent(e){var n;return this.loaded?((n=this._compatibleFullExtent)!=null&&n.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,n,a,r={}){var c;if(s(this),r.requestAsImageElement){const l=this.getTileUrl(e,n,a);return Re(l,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:r.signal}).then((u=>u.data))}const{serviceRasterInfo:o}=this;if(o.multidimensionalInfo!=null&&(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition==null){const l=r.tileInfo||o.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,n,a,l),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),((c=this.renderer)==null?void 0:c.type)==="raster-shaded-relief"&&(r={...r,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,n,a,r)}async fetchPixels(e,n,a,r={}){return this.serviceRasterInfo.multidimensionalInfo!=null&&(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition==null?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),n=Math.round(n),a=Math.round(a),this.raster.fetchPixels(e,n,a,r))}async getSamples(e,n){var l;if(await this.load(),(e=ne(Xe,e).clone()).interpolation&&e.interpolation!=="nearest")throw new N("imagery-tile-mixin:get-samples","only nearest interpolation is currently supported");const a=(l=e.mosaicRule)==null?void 0:l.multidimensionalDefinition,r={...n,multidimensionalDefinition:a},o=(await this._getSampleLocations(e)).map((u=>this.identify(u,r).then((h=>(h.location=u,h))))),c=(await Promise.all(o)).flatMap(((u,h)=>this._convertRasterIdentifyResultToSample(u,h)));return new Ze({samples:c})}async identify(e,n={}){var l,u,h;await this.load();const{raster:a,serviceRasterInfo:r}=this;if((r==null?void 0:r.multidimensionalInfo)!=null&&!(r.hasMultidimensionalTranspose&&!(!we(n.multidimensionalDefinition)&&!n.transposedVariableName))&&(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition==null)return{location:e,value:null};const o=(l=this.multidimensionalSubset)==null?void 0:l.areaOfInterest;if(o&&!o.contains(e))throw new N("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");const c=(u=this.serviceRasterInfo)!=null&&u.storageInfo.isBsqTile&&((h=this.bandIds)!=null&&h.length)?this.bandIds:void 0;return a.identify(e,{...n,bandIds:c})}hasStandardTime(){var r,o,c;const e=(r=this.serviceRasterInfo)==null?void 0:r.multidimensionalInfo;if(e==null||((o=this.serviceRasterInfo)==null?void 0:o.dataType)!=="standard-time")return!1;const n=this.multidimensionalDefinition,a=(c=n==null?void 0:n[0])==null?void 0:c.variableName;return e.variables.some((l=>l.name===a&&(!(n!=null&&n[0].dimensionName)||l.dimensions.some((u=>u.name==="StdTime")))))}getStandardTimeValue(e){return new Date(Le(e)).toISOString()}getMultidimensionalSubsetVariables(e){var a;const n=e??((a=this.serviceRasterInfo)==null?void 0:a.multidimensionalInfo);return Ae(this.multidimensionalSubset,n)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=qe(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&V(this.raster)&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}async _initJobHandler(){if(!this._rasterJobHandler)return super._initJobHandler().then((async()=>{if(!this._rasterJobHandler)return;s(this);const{raster:e}=this;e.rasterJobHandler=this._rasterJobHandler,V(e)&&e.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch((()=>{})),this.renderer&&this.updateRenderer()})).catch((()=>{}))}_shutdownJobHandler(){super._shutdownJobHandler(),this.raster&&(this.raster.rasterJobHandler=null)}async _getSampleLocations(e){const{geometry:n}=e;if(n.type==="point")return[n];const{spatialReference:a,type:r}=n;if(r==="multipoint")return n.points.map((d=>new B({x:d[0],y:d[1],spatialReference:a})));if(r==="polyline"){let d=n;if(e.sampleCount||e.sampleDistance){const m=await Y(()=>import("./densifyOperator-CsqgPb7b.js").then(w=>w.d),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10])),R=(await Y(async()=>{const{execute:w}=await import("./lengthOperator-BgEhknFu.js").then(J=>J.l);return{execute:w}},__vite__mapDeps([12,1,2,3,5,4,6,7,8,9,10]))).execute(n,{unit:"meters"}),b=Math.min(e.sampleCount||100,xe);let S=e.sampleDistance;S||(S=R/(b+(d.paths[0].length===2?1:0))),d=m.execute(n,S,{unit:"meters"})}return d.paths.flatMap((m=>m.map((R=>new B({x:R[0],y:R[1],spatialReference:a})))))}const o=Math.min(e.sampleCount||100,xe),c=n.type==="extent",l=c?n:n.extent,u=Math.sqrt(l.width*l.height/o),h=l.height/u,f=l.width/u,{xmin:p,ymax:y}=l,x=[];for(let d=0;d<h;d++)for(let m=0;m<f;m++){const R=new B({x:p+(m+.5)*u,y:y-(d+.5)*u,spatialReference:a});(c||n.contains(R))&&x.push(R)}return x}_configDefaultInterpolation(){var e;if(this.interpolation==null){s(this);const{raster:n}=this,a=Ye(n.rasterInfo,n.tileType,(e=this.sourceJSON)==null?void 0:e.defaultResamplingMethod);this._set("interpolation",a)}}_configDefaultRenderer(e="no"){var h,f,p;s(this);const{rasterInfo:n}=this.raster,a=ce(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),r=a==null?void 0:a.name,o=Ke({variableName:r,rasterFunctionName:(h=this.rasterFunction)==null?void 0:h.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&n.bandCount>1&&(this.bandIds=(o==null?void 0:o.bandIds)??et(n)),!this.renderer||e==="override"){const y=tt(this.raster),x=(o==null?void 0:o.renderer)??me(n,{bandIds:this.bandIds,variableName:r,rasterFunctionColorRamp:y}),d=n.statistics,m=d&&d.length>0?d[0]:null,R=(m==null?void 0:m.max)??0,b=(m==null?void 0:m.min)??0;this.raster.datasetFormat==="WCSServer"&&x.type==="raster-stretch"&&(R>1e24||b<-1e24)&&(x.dynamicRangeAdjustment=!0,x.customStatistics=null,x.stretchType==="none"&&(x.stretchType="min-max")),this.renderer=x}const c=it({...this.renderer.toJSON(),variableName:r}),l=he(n,r);this.symbolizer?(this.symbolizer.rendererJSON=c,this.symbolizer.rasterInfo=l):this.symbolizer=new at({rendererJSON:c,rasterInfo:l});const u=this.symbolizer.bind();if(u.success){if(e==="auto"){const{colormap:y}=this.raster.rasterInfo,x=this.renderer;if(y!=null&&x.type==="raster-colormap"){const d=me(this.raster.rasterInfo);JSON.stringify(d)!==JSON.stringify(x)&&this._configDefaultRenderer("override")}else if(x.type==="raster-stretch"){const d=(f=this.bandIds)==null?void 0:f.length,m=(p=x.customStatistics)==null?void 0:p.length;!x.dynamicRangeAdjustment&&m&&d&&m!==d&&this._configDefaultRenderer("override")}}}else ie.getLogger(this).warn("imagery-tile-mixin",u.error||"The given renderer is not supported by the layer."),e==="auto"&&this._configDefaultRenderer("override")}async _updateRasterFunction(){var u;if(this._isConstructedFromFunctionRaster&&V(this.raster)){const h=this.raster.rasterFunction.toJSON();return void(!this.rasterFunction&&h&&this._set("rasterFunction",ue.fromJSON(h)))}let e,n=this.raster,a=!1;V(n)?(e=n.primaryRasters.rasters,n=e[0],a=!0):e=[n];const{rasterFunction:r}=this;if(r){const h={raster:n};e.length>1&&e.forEach((y=>h[y.url]=y));const f=wt(((u=r.functionDefinition)==null?void 0:u.toJSON())??r.toJSON(),h),p=new G({rasterFunction:f});p.rasterJobHandler=this._rasterJobHandler,await p.open(),this.raster=p}else this.raster=n,await n.open();if(this._cachedRendererJson=void 0,!a&&!r)return;const{bandIds:o}=this,{bandCount:c}=this.raster.rasterInfo,l=o!=null&&o.length?o.some((h=>h>=c)):c>=3;o&&(l||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}_convertRasterIdentifyResultToSample(e,n){var l;const{rasterInfo:a}=this.raster,r=a.storageInfo.pyramidScalingFactor**(e.pyramidLevel??0),o=(a.pixelSize.x+a.pixelSize.y)/2*r;if(!((l=e.dataSeries)!=null&&l.length))return[new fe({location:e.location,pixelValue:e.value,locationId:n,resolution:o})];const c=[];return e.dataSeries.forEach((({value:u,multidimensionalDefinition:h},f)=>{const p={Variables:h[0].variableName,Dimensions:h.flatMap((({dimensionName:x})=>x)).join(",")};for(const{dimensionName:x,values:d}of h){p[x]=Array.isArray(d[0])?d[0][0]:d[0];const m=d[d.length-1];p[`${x}_Max`]=Array.isArray(m)?m[m.length-1]:m}const y=new fe({location:e.location,pixelValue:u,rasterId:f,locationId:n,resolution:o,attributes:p});c.push(y)})),c}};function s(e){if(!e.raster||!e.serviceRasterInfo)throw new N("imagery-tile","no raster")}return g([I({clonable:!1})],i.prototype,"_cachedRasterFunctionJson",void 0),g([I({clonable:!1})],i.prototype,"_compatibleFullExtent",void 0),g([I({clonable:!1})],i.prototype,"_isConstructedFromFunctionRaster",void 0),g([I({clonable:!1})],i.prototype,"_rasterFunctionUpdatePromise",void 0),g([I({type:[Je],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((e=this.bandIds)==null?void 0:e.join(","))!=="0,1,2"}}}}})],i.prototype,"bandIds",void 0),g([I({json:{origins:{service:{read:{source:"copyrightText"}}}}})],i.prototype,"copyright",void 0),g([I({json:{read:!1}})],i.prototype,"fullExtent",null),g([I({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),ze(ot)],i.prototype,"interpolation",void 0),g([I()],i.prototype,"ioConfig",void 0),g([I({type:[Se],json:{write:!0}})],i.prototype,"multidimensionalDefinition",null),g([I({type:Ge,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),g([I()],i.prototype,"raster",void 0),g([I({type:ue})],i.prototype,"rasterFunction",null),g([I()],i.prototype,"serviceRasterInfo",void 0),g([I()],i.prototype,"sourceJSON",void 0),g([I({readOnly:!0,type:Ie,json:{read:!1}})],i.prototype,"spatialReference",void 0),g([I({type:Z})],i.prototype,"tileInfo",void 0),g([I(be)],i.prototype,"url",null),g([I()],i.prototype,"renderer",null),g([I({types:je,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var n;const e=((n=this.renderer)==null?void 0:n.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!e}}},origins:{"web-scene":{types:Ve,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"internalRenderer",null),g([He("internalRenderer")],i.prototype,"readRenderer",null),g([I({clonable:!1})],i.prototype,"symbolizer",void 0),i=g([oe("esri.layers.mixins.ImageryTileMixin")],i),i};function K(t,i){if(!t||!i)return[];let s=i;i.includes("/")?(s=i.slice(0,i.indexOf("/")),i=i.slice(i.indexOf("/")+1)):i="";const e=[];if(i){const a=K(t,s);for(let r=0;r<a.length;r++)K(a[r],i).forEach((o=>e.push(o)));return e}const n=t.getElementsByTagNameNS("*",s);if(!n||n.length===0)return[];for(let a=0;a<n.length;a++)e.push(n[a]||n.item(a));return e}function _e(t,i){if(!t||!i)return null;let s=i;i.includes("/")?(s=i.slice(0,i.indexOf("/")),i=i.slice(i.indexOf("/")+1)):i="";const e=K(t,s);return e.length>0?i?_e(e[0],i):e[0]:null}function Te(t,i=null){const s=i?_e(t,i):t;let e;return s?(e=s.textContent||s.nodeValue,e?e.trim():null):null}function Ft(t,i){const s=K(t,i),e=[];let n;for(let a=0;a<s.length;a++)n=s[a].textContent||s[a].nodeValue,n&&(n=n.trim(),n!==""&&e.push(n));return e}function Wt(t,i=null){const s=Te(t,i);return(s==null?void 0:s.split(" ").map((e=>Number(e))))??[]}function Lt(t,i){return Ft(t,i).map((s=>Number(s)))}function At(t,i){const s=Te(t,i);return Number(s)}function qt(t,i){var n;const s=(n=t==null?void 0:t.nodeName)==null?void 0:n.toLowerCase(),e=i.toLowerCase();return s.slice(s.lastIndexOf(":")+1)===e}function Gt(t){return t.nodeName.slice(t.nodeName.lastIndexOf(":")+1)}export{v as $,Ot as X,Gt as c,_e as e,qt as i,Ft as l,G as m,K as n,At as o,Wt as r,Te as t,Lt as u};
