import{e as Ot}from"./deduplicate-1QRDGhQJ.js";import{O as F}from"./InterleavedLayout-F5C7MGHM.js";import{e as c}from"./VertexAttribute-BfkzOMLV.js";import{t as et}from"./glUtil-BGq5Y-MV.js";import{bw as T,eF as nt,ge as St,gd as q,c5 as it,bT as Q,fU as at,bV as gt,bX as ht,gg as At,gf as Et,c7 as dt,fW as Tt,nl as wt}from"./index-C2z3vZ9k.js";import{e as Y}from"./Normals-C0xbZVH8.js";const vt=F().vec3f(c.POSITION).u16(c.COMPONENTINDEX).freeze(),yt=F().vec2u8(c.SIDENESS).freeze();et(yt);const j=F().vec3f(c.POSITION0).vec3f(c.POSITION1).vec2i16(c.NORMALCOMPRESSED).u16(c.COMPONENTINDEX).u8(c.VARIANTOFFSET,{glNormalized:!0}).u8(c.VARIANTSTROKE).u8(c.VARIANTEXTENSION,{glNormalized:!0}).freeze(),H=F().vec3f(c.POSITION0).vec3f(c.POSITION1).vec2i16(c.NORMALCOMPRESSED).vec2i16(c.NORMAL2COMPRESSED).u16(c.COMPONENTINDEX).u8(c.VARIANTOFFSET,{glNormalized:!0}).u8(c.VARIANTSTROKE).u8(c.VARIANTEXTENSION,{glNormalized:!0}).freeze();c.POSITION0,c.POSITION1,c.COMPONENTINDEX,c.VARIANTOFFSET,c.VARIANTSTROKE,c.VARIANTEXTENSION,c.NORMALCOMPRESSED,c.NORMAL2COMPRESSED,c.SIDENESS;class Mt{constructor(){this.position0=T(),this.position1=T(),this.faceNormal0=T(),this.faceNormal1=T(),this.componentIndex=0,this.cosAngle=0}}const _=-1;function Pt(t,n,s){const r=t.vertices.position,a=t.vertices.componentIndex,f=m.position0,h=m.position1,d=m.faceNormal0,S=m.faceNormal1,{edges:i,normals:p}=xt(t),I=i.length/4,A=n.allocate(I);let V=0;const L=I,w=s==null?void 0:s.allocate(L);let B=0,e=0,o=0;z.length=0;for(let g=0;g<I;++g){const y=4*g;r.getVec(i.data[y],f),r.getVec(i.data[y+1],h);const x=z.pushNew();x.index=4*g,x.length=St(f,h)}z.sort(((g,y)=>y.length-g.length));const u=new Array,l=new Array;z.forAll((({length:g,index:y})=>{const x=i.data[y],It=i.data[y+1],st=i.data[y+2],ot=i.data[y+3],rt=ot===_;if(r.getVec(x,f),r.getVec(It,h),rt){const E=3*st;q(d,p.data[E],p.data[E+1],p.data[E+2]),it(S,d),m.componentIndex=a.get(x),m.cosAngle=Q(d,S)}else{let E=3*st;if(q(d,p.data[E],p.data[E+1],p.data[E+2]),E=3*ot,q(S,p.data[E],p.data[E+1],p.data[E+2]),m.componentIndex=a.get(x),m.cosAngle=Q(d,S),Vt(m,Ct))return;m.cosAngle<-.9999&&it(S,d)}e+=g,o++,rt||Rt(m,Lt)?(n.write(A,V++,m),u.push(g)):$t(m,Nt)&&(w&&s&&s.write(w,B++,m),l.push(g))}));const O=new Float32Array(u.reverse()),v=new Float32Array(l.reverse()),M=w&&s?{instancesData:w.slice(0,B),lodInfo:{lengths:v}}:void 0;return{regular:{instancesData:A.slice(0,V),lodInfo:{lengths:O}},silhouette:M,averageEdgeLength:e/o}}function Rt(t,n){return t.cosAngle<n}function Vt(t,n){return t.cosAngle>n}function $t(t,n){const s=At(t.cosAngle);return Et(ct,t.position1,t.position0),s*(Q(gt(bt,t.faceNormal0,t.faceNormal1),ct)>0?-1:1)>n}function xt(t){const n=t.faces.length/3,s=t.faces,r=t.neighbors,a=t.vertices.position;N.length=G.length=0;for(let f=0;f<n;f++){const h=3*f,d=r[h],S=r[h+1],i=r[h+2],p=s[h],I=s[h+1],A=s[h+2];a.getVec(p,$),a.getVec(I,X),a.getVec(A,U),at(X,X,$),at(U,U,$),gt($,X,U),ht($,$),G.pushArray($),(d===_||p<I)&&(N.push(p),N.push(I),N.push(f),N.push(d)),(S===_||I<A)&&(N.push(I),N.push(A),N.push(f),N.push(S)),(i===_||A<p)&&(N.push(A),N.push(p),N.push(f),N.push(i))}return{edges:N,normals:G}}class Dt{constructor(){this.index=0,this.length=0}}const z=new nt({allocator:t=>t||new Dt,deallocator:null}),N=new nt({deallocator:null}),G=new nt({deallocator:null}),m=new Mt,bt=T(),ct=T(),$=T(),X=T(),U=T(),Nt=dt(4),Ct=Math.cos(Nt),Ft=dt(35),Lt=Math.cos(Ft);function lt(t,n,s){const r=n/3,a=new Uint32Array(s+1),f=new Uint32Array(s+1),h=(e,o)=>{e<o?a[e+1]++:f[o+1]++};for(let e=0;e<r;e++){const o=t[3*e],u=t[3*e+1],l=t[3*e+2];h(o,u),h(u,l),h(l,o)}let d=0,S=0;for(let e=0;e<s;e++){const o=a[e+1],u=f[e+1];a[e+1]=d,f[e+1]=S,d+=o,S+=u}const i=new Uint32Array(6*r),p=a[s],I=(e,o,u)=>{if(e<o){const l=a[e+1]++;i[2*l]=o,i[2*l+1]=u}else{const l=f[o+1]++;i[2*p+2*l]=e,i[2*p+2*l+1]=u}};for(let e=0;e<r;e++){const o=t[3*e],u=t[3*e+1],l=t[3*e+2];I(o,u,e),I(u,l,e),I(l,o,e)}const A=(e,o)=>{const u=2*e,l=o-e;for(let O=1;O<l;O++){const v=i[u+2*O],M=i[u+2*O+1];let g=O-1;for(;g>=0&&i[u+2*g]>v;g--)i[u+2*g+2]=i[u+2*g],i[u+2*g+3]=i[u+2*g+1];i[u+2*g+2]=v,i[u+2*g+3]=M}};for(let e=0;e<s;e++)A(a[e],a[e+1]),A(p+f[e],p+f[e+1]);const V=new Int32Array(3*r),L=(e,o)=>e===t[3*o]?0:e===t[3*o+1]?1:e===t[3*o+2]?2:-1,w=(e,o)=>{const u=L(e,o);V[3*o+u]=-1},B=(e,o,u,l)=>{const O=L(e,o);V[3*o+O]=l;const v=L(u,l);V[3*l+v]=o};for(let e=0;e<s;e++){let o=a[e];const u=a[e+1];let l=f[e];const O=f[e+1];for(;o<u&&l<O;){const v=i[2*o],M=i[2*p+2*l];v===M?(B(e,i[2*o+1],M,i[2*p+2*l+1]),o++,l++):v<M?(w(e,i[2*o+1]),o++):(w(M,i[2*p+2*l+1]),l++)}for(;o<u;)w(e,i[2*o+1]),o++;for(;l<O;)w(i[2*p+2*l],i[2*p+2*l+1]),l++}return V}const J=.7;let mt=class{updateSettings(n){this.settings=n,this._edgeHashFunction=n.reducedPrecision?zt:Bt}write(n,s,r){W.seed=this._edgeHashFunction(r);const a=W.getIntRange(0,255),f=W.getIntRange(0,this.settings.variants-1),h=W.getFloat(),d=255*(.5*Xt(-(1-Math.min(h/J,1))+Math.max(0,h-J)/(1-J),1.2)+.5);n.position0.setVec(s,r.position0),n.position1.setVec(s,r.position1),n.componentIndex.set(s,r.componentIndex),n.variantOffset.set(s,a),n.variantStroke.set(s,f),n.variantExtension.set(s,d)}};const P=new Float32Array(6),R=new Uint32Array(P.buffer),C=new Uint32Array(1);function Bt(t){return P[0]=t.position0[0],P[1]=t.position0[1],P[2]=t.position0[2],P[3]=t.position1[0],P[4]=t.position1[1],P[5]=t.position1[2],C[0]=31*(31*(31*(31*(31*(166811+R[0])+R[1])+R[2])+R[3])+R[4])+R[5],C[0]}function zt(t){const n=P;n[0]=D(t.position0[0]),n[1]=D(t.position0[1]),n[2]=D(t.position0[2]),n[3]=D(t.position1[0]),n[4]=D(t.position1[1]),n[5]=D(t.position1[2]),C[0]=5381;for(let s=0;s<R.length;s++)C[0]=31*C[0]+R[s];return C[0]}const ut=1e4;function D(t){return Math.round(t*ut)/ut}function Xt(t,n){return Math.abs(t)**n*Math.sign(t)}const k=class k{constructor(){this._commonWriter=new mt}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return j.createBuffer(n)}write(n,s,r){this._commonWriter.write(n,s,r),Tt(b,r.faceNormal0,r.faceNormal1),ht(b,b);const{typedBuffer:a,typedBufferStride:f}=n.normalCompressed;Y(a,s,b[0],b[1],b[2],f)}};k.Layout=j,k.glLayout=et(j,1);let Z=k;const K=class K{constructor(){this._commonWriter=new mt}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return H.createBuffer(n)}write(n,s,r){this._commonWriter.write(n,s,r);{const{typedBuffer:a,typedBufferStride:f}=n.normalCompressed;Y(a,s,r.faceNormal0[0],r.faceNormal0[1],r.faceNormal0[2],f)}{const{typedBuffer:a,typedBufferStride:f}=n.normal2Compressed;Y(a,s,r.faceNormal1[0],r.faceNormal1[1],r.faceNormal1[2],f)}}};K.Layout=H,K.glLayout=et(H,1);let tt=K;const b=T(),W=new wt;function Jt(t){const n=Ut(t.data,t.skipDeduplicate,t.indices,t.indicesLength);return ft.updateSettings(t.writerSettings),pt.updateSettings(t.writerSettings),Pt(n,ft,pt)}function Ut(t,n,s,r){if(n){const h=lt(s,r,t.count);return new Wt(s,r,h,t)}const a=Ot(t.buffer,t.stride/4,{originalIndices:s}),f=lt(a.indices,r,a.uniqueCount);return{faces:a.indices,facesLength:a.indices.length,neighbors:f,vertices:vt.createView(a.buffer)}}class Wt{constructor(n,s,r,a){this.faces=n,this.facesLength=s,this.neighbors=r,this.vertices=a}}const ft=new Z,pt=new tt,Qt=F().vec3f(c.POSITION0).vec3f(c.POSITION1),Yt=F().vec3f(c.POSITION0).vec3f(c.POSITION1).u16(c.COMPONENTINDEX);export{vt as E,Qt as d,Jt as f,Yt as g,Pt as p,Ut as u};
