import{gE as z,cb as q,j4 as L,bH as T,b4 as p,g8 as S,d7 as x,bE as P,f$ as C,fd as A,ff as M,kT as I,gb as U,ka as k,g3 as j,dc as H,de as E,i5 as R,b8 as y,ba as b,bb as F}from"./index-Bkom2Sdc.js";function N(t,e=!1){return t<=z?e?new Array(t).fill(0):new Array(t):new Uint32Array(t)}class g{constructor(e){K(e);const{location:i,data:a}=e;this.location=Object.freeze(q(i));const l=this.location.width,s=this.location.height;let n=!0,o=!0;const h=Math.ceil(l*s/32),r=N(h);let c=0;for(let f=0;f<a.length;f++){const m=f%32;a[f]?(o=!1,r[c]|=1<<m):n=!1,m===31&&++c}o?(this._availability="unavailable",this.byteSize=40):n?(this._availability="available",this.byteSize=40):(this._availability=r,this.byteSize=40+L(r))}getAvailability(e,i){if(this._availability==="unavailable"||this._availability==="available")return this._availability;const a=(e-this.location.top)*this.location.width+(i-this.location.left),l=a%32,s=a>>5,n=this._availability;return s<0||s>n.length?"unknown":n[s]&1<<l?"available":"unavailable"}static fromDefinition(e,i){const a=e.service.request||T,{row:l,col:s,width:n,height:o}=e,h={query:{f:"json"}};return i=i?{...h,...i}:h,a(J(e),i).then(r=>r.data).catch(r=>{if(r?.details?.httpStatus===422)return{location:{top:l,left:s,width:n,height:o},valid:!0,data:new Array(n*o).fill(0)};throw r}).then(r=>{if(r.location&&(r.location.top!==l||r.location.left!==s||r.location.width!==n||r.location.height!==o))throw new p("tilemap:location-mismatch","Tilemap response for different location than requested",{response:r,definition:{top:l,left:s,width:n,height:o}});return g.fromJSON(r)})}static fromJSON(e){return Object.freeze(new g(e))}}function D(t){return`${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`}function J(t){let e;if(t.service.tileServers?.length){const a=t.service.tileServers;e=`${a&&a.length?a[t.row%a.length]:t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`}else e=`${t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`;const i=t.service.query;return i&&(e=`${e}?${i}`),e}function K(t){if(!t?.location)throw new p("tilemap:missing-location","Location missing from tilemap response");if(t.valid===!1)throw new p("tilemap:invalid","Tilemap response was marked as invalid");if(!t.data)throw new p("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(t.data))throw new p("tilemap:data-mismatch","Data must be an array of numbers");if(t.data.length!==t.location.width*t.location.height)throw new p("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}var d;function O(t,e,i){return new p("tile-map:tile-unavailable","Tile is not available",{level:t,row:e,col:i})}var u;let v=(u=class extends S{constructor(e){super(e),this._pendingTilemapRequests={},this.request=T,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new x(2097152),this.addHandles(P(()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]},()=>this._initializeTilemapDefinition(),C))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,i,a){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const l=this._tilemapFromCache(e,i,a,this._tmpTilemapDefinition);return l?l.getAvailability(i,a):"unknown"}fetchAvailability(e,i,a,l){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(O(e,i,a)):this._fetchTilemap(e,i,a,l).catch(s=>s).then(s=>{if(s instanceof g){const n=s.getAvailability(i,a);if(n==="unavailable")throw O(e,i,a);return n}if(A(s))throw s;return"unknown"})}fetchAvailabilityUpsample(e,i,a,l,s){l.level=e,l.row=i,l.col=a;const n=this.layer.tileInfo;n.updateTileInfo(l);const o=this.fetchAvailability(e,i,a,s).catch(h=>{if(A(h))throw h;if(n.upsampleTile(l))return this.fetchAvailabilityUpsample(l.level,l.row,l.col,l,s);throw h});return this._fetchAvailabilityUpsamplePrefetch(e,i,a,s,o),o}async _fetchAvailabilityUpsamplePrefetch(e,i,a,l,s){if(!this._prefetchingEnabled)return;const n=`prefetch-${e}-${i}-${a}`;if(this.hasHandles(n))return;const o=new AbortController;s.then(()=>o.abort(),()=>o.abort());let h=!1;const r=M(()=>{h||(h=!0,o.abort())});if(this.addHandles(r,n),await I(10,o.signal).catch(()=>{}),h||(h=!0,this.removeHandles(n)),U(o))return;const c=new k(e,i,a),f={...l,signal:o.signal},m=this.layer.tileInfo;for(let w=0;d._prefetches.length<d._maxPrefetch&&m.upsampleTile(c);++w){const _=this.fetchAvailability(c.level,c.row,c.col,f);d._prefetches.push(_);const $=()=>{d._prefetches.removeUnordered(_)};_.then($,$)}}static cleanupTilemapCache(){this._prefetches.prune()}_fetchTilemap(e,i,a,l){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new p("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const s=this._tmpTilemapDefinition,n=this._tilemapFromCache(e,i,a,s);if(n)return Promise.resolve(n);const o=l?.signal;return l={...l,signal:null},new Promise((h,r)=>{H(o,()=>r(E()));const c=D(s);let f=this._pendingTilemapRequests[c];if(!f){f=g.fromDefinition(s,l).then(w=>(this._tilemapCache.put(c,w,w.byteSize),w));const m=()=>{delete this._pendingTilemapRequests[c]};this._pendingTilemapRequests[c]=f,f.then(m,m)}f.then(h,r)})}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:i,customParameters:a}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:R({...e.query,...a,token:i??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,i,a,l){l.level=e,l.row=i-i%this.size,l.col=a-a%this.size;const s=D(l);return this._tilemapCache.get(s)}get test(){}},d=u,u._maxPrefetch=4,u._prefetches=new j({initialSize:d._maxPrefetch}),u);y([b({constructOnly:!0})],v.prototype,"layer",void 0),y([b({constructOnly:!0})],v.prototype,"minLOD",void 0),y([b({constructOnly:!0})],v.prototype,"maxLOD",void 0),y([b({constructOnly:!0})],v.prototype,"request",void 0),y([b({constructOnly:!0})],v.prototype,"size",void 0),v=d=y([F("esri.layers.support.TilemapCache")],v);export{v as j};
